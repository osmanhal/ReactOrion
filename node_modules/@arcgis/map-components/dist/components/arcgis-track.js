/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.7
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { ab as newWidgetsTrack } from './index2.js';
import { u as usePropertyChange } from './chunk-PVEVZB4O.js';
import { u as useControllerManager } from './index3.js';
import { m as makeWidgetController } from './useWidget.js';

const trackCss = "";
const ArcgisTrackStyle0 = trackCss;

const useTrackWidget = makeWidgetController(newWidgetsTrack);
const __cmpMeta = [0,"arcgis-track",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"referenceElement":[1025,"reference-element"],"error":[1032],"geolocationOptions":[1032,"geolocation-options"],"goToLocationEnabled":[1028,"go-to-location-enabled"],"graphic":[1040],"icon":[1025],"label":[1025],"positionFilterFunction":[1040],"rotationEnabled":[1028,"rotation-enabled"],"scale":[1026],"tracking":[1540],"position":[1025],"state":[1537],"destroy":[64],"start":[64],"stop":[64]}];
const ArcgisTrack$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisTrack extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.widgetTrack = createEvent(this, "arcgisComplete", 7);
        this.widgetTrackError = createEvent(this, "arcgisError", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useTrackWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.error = this.viewModel.error;
        this.geolocationOptions = this.widget.geolocationOptions;
        this.goToLocationEnabled = this.widget.goToLocationEnabled;
        this.graphic = this.widget.graphic;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.positionFilterFunction = this.viewModel.positionFilterFunction;
        this.rotationEnabled = this.widget.rotationEnabled;
        this.scale = this.widget.scale;
        this.tracking = this.widget.tracking;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async start() {
        this.widget.start();
    }
    async stop() {
        this.widget.stop();
    }
    get el() { return this; }
    static get style() { return ArcgisTrackStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-track"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-track":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisTrack$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisTrack = ArcgisTrack$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisTrack, defineCustomElement };
