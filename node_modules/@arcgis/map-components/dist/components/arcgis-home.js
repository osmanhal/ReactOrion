/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.7
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate, h } from '@stencil/core/internal/client';
import { O as classes, P as newWidgetsHomeHomeViewModel } from './index2.js';
import { u as usePropertyChange } from './chunk-PVEVZB4O.js';
import { u as useControllerManager } from './index3.js';
import { u as useT9n, m as makeViewModelController } from './useT9n.js';
import "@esri/calcite-components/dist/components/calcite-button.js";
import "@esri/calcite-components/dist/components/calcite-loader.js";

const globalCss = {
    anchor: "esri-widget__anchor",
    anchorDisabled: "esri-widget__anchor--disabled",
    button: "esri-button",
    buttonDisabled: "esri-button--disabled",
    buttonHalf: "esri-button--half",
    buttonSecondary: "esri-button--secondary",
    buttonSmall: "esri-button--small",
    buttonTertiary: "esri-button--tertiary",
    buttonThird: "esri-button--third",
    disabled: "esri-disabled",
    disabledElement: "esri-disabled-element",
    empty: "esri-widget__content--empty",
    emptyIllustration: "esri-widget__content-illustration--empty",
    heading: "esri-widget__heading",
    hidden: "esri-hidden",
    input: "esri-input",
    interactive: "esri-interactive",
    loader: "esri-widget__loader",
    loaderAnimation: "esri-widget__loader-animation",
    loaderText: "esri-widget__loader-text",
    menu: "esri-menu",
    menuHeader: "esri-menu__header",
    menuItem: "esri-menu__list-item",
    menuItemActive: "esri-menu__list-item--active",
    menuItemFocus: "esri-menu__list-item--focus",
    menuList: "esri-menu__list",
    noBookmarksIcon: "esri-widget__no-bookmark-icon",
    panel: "esri-widget--panel",
    panelHeightOnly: "esri-widget--panel-height-only",
    primaryTick: "primary-tick",
    primaryTickAmPm: "primary-tick__ampm",
    primaryTickLabel: "primary-tick__label",
    rotating: "esri-rotating",
    secondaryTick: "secondary-tick",
    select: "esri-select",
    table: "esri-widget__table",
    ui: "esri-component",
    widget: "esri-widget",
    widgetButton: "esri-widget--button",
    widgetButtonActive: "esri-widget--button-active",
    widgetDisabled: "esri-widget--disabled",
};

// TODO: [MIGRATION] migrate tests
const css = {
    base: "esri-home",
};
const useHomeViewModel = makeViewModelController(newWidgetsHomeHomeViewModel);
const __cmpMeta = [0,"arcgis-home",{"goToOverride":[1040],"icon":[1537],"label":[1025],"position":[1537],"referenceElement":[1025,"reference-element"],"viewpoint":[1040],"state":[1537],"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"cancelGo":[64],"destroy":[64],"go":[64]}];
const ArcgisHome$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisHome extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.viewModelGo = createEvent(this, "arcgisGo", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        //--------------------------------------------------------------------------
        //
        //  Controllers
        //
        //--------------------------------------------------------------------------
        this.manager = useControllerManager(this,forceUpdate);
        this.messages = useT9n();
        this.viewModel = useHomeViewModel(this);
        this.arcgisPropertyChange = usePropertyChange()("state");
        //--------------------------------------------------------------------------
        //
        //  Private Methods
        //
        //--------------------------------------------------------------------------
        this._go = () => {
            const { viewModel } = this;
            if (viewModel.state === "going-home") {
                viewModel.cancelGo();
            }
            else {
                viewModel.go();
            }
        };
        this.goToOverride = this.viewModel.goToOverride;
        this.icon = "home";
        this.label = undefined;
        this.position = "top-left";
        this.referenceElement = undefined;
        this.viewpoint = this.viewModel.viewpoint;
        this.state = this.viewModel.state;
        this.autoDestroyDisabled = false;
    }
    //--------------------------------------------------------------------------
    //
    //  Public Methods
    //
    //--------------------------------------------------------------------------
    /**
     * This function provides the ability to interrupt and cancel the process
     * of navigating the view back to the view's initial extent.
     *
     * @since 4.9
     */
    async cancelGo() {
        this.viewModel.cancelGo();
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    /**
     * Animates the view to the initial Viewpoint of the view or the
     * value of `viewpoint`
     */
    async go() {
        return this.viewModel.go();
    }
    render() {
        const { messages, icon } = this;
        const state = this.viewModel?.state;
        const isLoading = state === "going-home";
        return (h("div", { key: '1cad33e6ced15f9d1983419cfea451283142b84e', class: classes(css.base, globalCss.widget) }, h("calcite-button", { key: '8667cb2f7e0204af1c28f9f4fcbaab4607ad5acd', class: globalCss.widgetButton, disabled: state === "disabled", "icon-start": isLoading ? undefined : icon, kind: "neutral", label: messages.componentLabel, onClick: this._go,
            // Workaround for https://github.com/Esri/calcite-design-system/issues/8490
            scale: isLoading ? "s" : "m", title: state === "going-home" ? messages.cancel : messages.title }, isLoading ? (
        // Cannot use calcite-button's loading=true. See https://devtopia.esri.com/WebGIS/arcgis-js-api/pull/58358#discussion_r1106927
        h("calcite-loader", { inline: true, label: "" })) : null)));
    }
    static get assetsDirs() { return ["assets"]; }
    get el() { return this; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-home"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-home":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisHome$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisHome = ArcgisHome$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisHome, defineCustomElement };
