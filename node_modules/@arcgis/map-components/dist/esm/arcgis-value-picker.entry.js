/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.7
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-7d33cc26.js';
import { af as newWidgetsValuePicker } from './index-d2df902e.js';
import { m as makeWidgetController } from './useWidget-9b153437.js';
import { u as usePropertyChange } from './chunk-PVEVZB4O-2c3b8893.js';
import { u as useControllerManager } from './index-c99fc80c.js';
import './component-utils-de9339fe.js';

const valuePickerCss = "arcgis-value-picker{}";
const ArcgisValuePickerStyle0 = valuePickerCss;

const useValuePickerWidget = makeWidgetController(newWidgetsValuePicker);
const ArcgisValuePicker = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.widgetAnimate = createEvent(this, "arcgisAnimate", 7);
        this.widgetNext = createEvent(this, "arcgisNext", 7);
        this.widgetPause = createEvent(this, "arcgisPause", 7);
        this.widgetPlay = createEvent(this, "arcgisPlay", 7);
        this.widgetPrevious = createEvent(this, "arcgisPrevious", 7);
        this.manager = useControllerManager(this);
        this.widget = useValuePickerWidget(this);
        this.arcgisPropertyChange = usePropertyChange()("values");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.position = "bottom-left";
        this.canNext = this.widget.canNext;
        this.canPlay = this.widget.canPlay;
        this.canPrevious = this.widget.canPrevious;
        this.caption = this.widget.caption;
        this.component = this.widget.component;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.layout = this.widget.layout;
        this.loop = this.widget.loop;
        this.playRate = this.widget.playRate;
        this.hideNextButton = this.widget.visibleElements.nextButton;
        this.hidePlayButton = this.widget.visibleElements.playButton;
        this.hidePreviousButton = this.widget.visibleElements.previousButton;
        this.values = this.widget.values;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async next() {
        this.widget?.next();
    }
    async pause() {
        this.widget?.pause();
    }
    async play() {
        this.widget?.play();
    }
    async previous() {
        this.widget?.previous();
    }
    get el() { return getElement(this); }
};
ArcgisValuePicker.style = ArcgisValuePickerStyle0;

export { ArcgisValuePicker as arcgis_value_picker };
