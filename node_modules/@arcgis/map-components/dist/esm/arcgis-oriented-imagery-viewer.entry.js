/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.7
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-7d33cc26.js';
import { u as usePropertyChange } from './chunk-PVEVZB4O-2c3b8893.js';
import { u as useControllerManager } from './index-c99fc80c.js';
import { Y as newWidgetsOrientedImageryViewer } from './index-d2df902e.js';
import { m as makeWidgetController } from './useWidget-9b153437.js';
import './component-utils-de9339fe.js';

const orientedImageryViewerCss = "";
const ArcgisOrientedImageryViewerStyle0 = orientedImageryViewerCss;

const useOrientedImageryViewerWidget = makeWidgetController(newWidgetsOrientedImageryViewer);
const ArcgisOrientedImageryViewer = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this);
        this.widget = useOrientedImageryViewerWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("imageGalleryEnabled");
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.position = "bottom-left";
        this.referenceElement = undefined;
        this.currentCoverageVisible = this.widget.currentCoverageVisible;
        this.disabled = this.widget.disabled;
        this.galleryOpened = this.widget.galleryOpened;
        this.imageEnhancementToolActive = this.widget.imageEnhancementToolActive;
        this.imageGalleryEnabled = this.widget.imageGalleryEnabled;
        this.isAdditionalCoverageVisible = this.widget.isAdditionalCoverageVisible;
        this.isAdditionalPointSourcesVisible = this.widget.isAdditionalPointSourcesVisible;
        this.layer = this.widget.layer;
        this.mapImageConversionToolState = this.widget.mapImageConversionToolState;
        this.navigationToolActive = this.widget.navigationToolActive;
        this.referencePoint = this.widget.referencePoint;
        this.autoDestroyDisabled = false;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    get el() { return getElement(this); }
};
ArcgisOrientedImageryViewer.style = ArcgisOrientedImageryViewerStyle0;

export { ArcgisOrientedImageryViewer as arcgis_oriented_imagery_viewer };
