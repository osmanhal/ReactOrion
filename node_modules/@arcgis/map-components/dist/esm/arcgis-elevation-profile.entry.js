/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.7
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-7d33cc26.js';
import { F as newWidgetsElevationProfile } from './index-d2df902e.js';
import { u as usePropertyChange } from './chunk-PVEVZB4O-2c3b8893.js';
import { u as useControllerManager } from './index-c99fc80c.js';
import { m as makeWidgetController } from './useWidget-9b153437.js';
import './component-utils-de9339fe.js';

const elevationProfileCss = "";
const ArcgisElevationProfileStyle0 = elevationProfileCss;

const useElevationProfileWidget = makeWidgetController(newWidgetsElevationProfile);
const ArcgisElevationProfile = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this);
        this.widget = useElevationProfileWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("input", "effectiveUnits", "progress", "state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.effectiveUnits = this.viewModel.effectiveUnits;
        this.highlightEnabled = this.viewModel.highlightEnabled;
        this.hoveredChartPosition = this.viewModel.hoveredChartPosition;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.input = this.widget.input;
        this.profiles = this.widget.profiles;
        this.progress = this.viewModel.progress;
        this.unit = this.widget.unit;
        this.uniformChartScaling = this.viewModel.uniformChartScaling;
        this.unitOptions = this.widget.unitOptions;
        this.hideLegend = this.widget.visibleElements.legend;
        this.hideChart = this.widget.visibleElements.chart;
        this.hideClearButton = this.widget.visibleElements.clearButton;
        this.hideSettingsButton = this.widget.visibleElements.settingsButton;
        this.hideSketchButton = this.widget.visibleElements.sketchButton;
        this.hideSelectButton = this.widget.visibleElements.selectButton;
        this.hideUnitSelector = this.widget.visibleElements.unitSelector;
        this.hideUniformChartScalingToggle = this.widget.visibleElements.uniformChartScalingToggle;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async start() {
        this.widget.viewModel.start();
    }
    async stop() {
        this.widget.viewModel.stop();
    }
    get el() { return getElement(this); }
};
ArcgisElevationProfile.style = ArcgisElevationProfileStyle0;

export { ArcgisElevationProfile as arcgis_elevation_profile };
