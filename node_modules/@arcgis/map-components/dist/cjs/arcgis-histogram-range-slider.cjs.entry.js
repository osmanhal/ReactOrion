/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.7
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-eee1d83b.js');
const index$2 = require('./index-c3c4ddd9.js');
const chunkPVEVZB4O = require('./chunk-PVEVZB4O-270e4213.js');
const index$1 = require('./index-8d100f9f.js');
const useWidget = require('./useWidget-4ffee640.js');
require('./component-utils-387e34d8.js');

const histogramRangeSliderCss = "arcgis-histogram-range-slider{}";
const ArcgisHistogramRangeSliderStyle0 = histogramRangeSliderCss;

const useHistogramRangeSliderWidget = useWidget.makeWidgetController(index$2.newWidgetsHistogramRangeSlider);
const ArcgisHistogramRangeSlider = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.arcgisReady = index.createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = index.createEvent(this, "arcgisPropertyChange", 7);
        this.manager = index$1.useControllerManager(this);
        this.widget = useHistogramRangeSliderWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = chunkPVEVZB4O.usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.average = this.widget.average;
        this.barCreatedFunction = this.widget.barCreatedFunction;
        this.bins = this.widget.bins;
        this.dataLineCreatedFunction = this.widget.dataLineCreatedFunction;
        this.dataLines = this.widget.dataLines;
        this.excludedBarColor = this.widget.excludedBarColor;
        this.includedBarColor = this.widget.includedBarColor;
        this.labelFormatFunction = this.widget.labelFormatFunction;
        this.max = this.widget.max;
        this.min = this.widget.min;
        this.precision = this.widget.precision;
        this.rangeType = this.widget.rangeType;
        this.standardDeviation = this.widget.standardDeviation;
        this.standardDeviationCount = this.widget.standardDeviationCount;
        this.values = this.widget.values;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    /**
     * Generates a SQL where clause based on a given field and the slider's
     * rangeType
     */
    async generateWhereClause(field) {
        return this.widget.generateWhereClause(field);
    }
    get el() { return index.getElement(this); }
};
ArcgisHistogramRangeSlider.style = ArcgisHistogramRangeSliderStyle0;

exports.arcgis_histogram_range_slider = ArcgisHistogramRangeSlider;
