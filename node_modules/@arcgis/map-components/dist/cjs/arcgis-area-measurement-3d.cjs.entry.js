/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.30/esri/copyright.txt for details.
 * v4.30.7
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-eee1d83b.js');
const index$2 = require('./index-c3c4ddd9.js');
const chunkPVEVZB4O = require('./chunk-PVEVZB4O-270e4213.js');
const index$1 = require('./index-8d100f9f.js');
const useWidget = require('./useWidget-4ffee640.js');
require('./component-utils-387e34d8.js');

const areaMeasurement3dCss = "";
const ArcgisAreaMeasurement3dStyle0 = areaMeasurement3dCss;

const useAreaMeasurement3dWidget = useWidget.makeWidgetController(index$2.newWidgetsAreaMeasurement3D);
const ArcgisAreaMeasurement3d = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.arcgisReady = index.createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = index.createEvent(this, "arcgisPropertyChange", 7);
        this.manager = index$1.useControllerManager(this);
        this.widget = useAreaMeasurement3dWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = chunkPVEVZB4O.usePropertyChange()("analysis", "state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.analysis = this.widget.analysis;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.unit = this.widget.unit;
        this.unitOptions = this.widget.unitOptions;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async clear() {
        this.widget?.viewModel.clear();
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async start() {
        this.widget?.viewModel.start();
    }
    get el() { return index.getElement(this); }
};
ArcgisAreaMeasurement3d.style = ArcgisAreaMeasurement3dStyle0;

exports.arcgis_area_measurement_3d = ArcgisAreaMeasurement3d;
