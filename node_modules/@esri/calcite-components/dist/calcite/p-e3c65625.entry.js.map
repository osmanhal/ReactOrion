{"version":3,"names":["CSS","button","XButton","disabled","key","label","onClick","ref","scale","h","class","tabIndex","type","icon","getIconScale","ComboboxItem","ComboboxItemGroup","ComboboxChildSelector","input","chipInvisible","selectionDisplayFit","selectionDisplaySingle","listContainer","placeholderIcon","selectedIcon","IDS","validationMessage","getAncestors","element","parent","parentElement","closest","grandparent","filter","el","getItemAncestors","item","ancestors","nodeName","getItemChildren","nodeListToArray","querySelectorAll","hasActiveChildren","node","items","selected","length","getDepth","isBrowser","result","document","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","isSingleLike","selectionMode","includes","getLabel","shortHeading","textLabel","comboboxCss","CalciteComboboxStyle0","isGroup","tagName","itemUidPrefix","chipUidPrefix","labelUidPrefix","listboxUidPrefix","inputUidPrefix","Combobox","this","placement","defaultMenuPlacement","internalValueChangeFlag","textInput","mutationObserver","createObserver","updateItems","resizeObserver","setMaxScrollerHeight","refreshSelectionDisplay","guid","inputHeight","ignoreSelectedEventsFlag","openTransitionProp","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","getValue","selectedItems","map","value","toString","onLabelClick","setFocus","keyDownHandler","event","readOnly","activeChipIndex","activeItemIndex","allowCustomValues","filterText","addCustomChip","preventDefault","open","clearInputValue","filterItems","updateActiveItemIndex","selectionStart","previousChip","nextChip","filteredItems","shiftActiveItemIndex","comboboxInViewport","scrollIntoView","ensureRecentSelectedItemIsActive","defaultPrevented","scrollToActiveItem","clearDisabled","clearValue","toggleSelection","removeActiveChip","submitForm","notDeletable","selectionDisplay","selectedHiddenChipsCount","isMulti","removeLastChip","toggleCloseEnd","removeEventListener","toggleOpenEnd","async","listContainerEl","referenceEl","reposition","maxScrollerHeight","getMaxScrollerHeight","style","maxHeight","minWidth","clientWidth","calciteChipCloseHandler","comboboxItem","selection","find","calciteComboboxChipClose","emit","clickHandler","composedPath","some","classList","contains","XButtonCSS","componentLoaded","allSelectedIndicatorChipEl","chipContainerEl","placeholder","selectedIndicatorChipEl","chipContainerElGap","parseInt","getComputedStyle","gap","replace","chipContainerElWidth","getElementWidth","fontSize","fontFamily","inputTextWidth","getTextWidth","inputWidth","calciteSize48","allSelectedIndicatorChipElWidth","selectedIndicatorChipElWidth","largestSelectedIndicatorChipWidth","Math","max","setCompactSelectionDisplay","chipEls","Array","from","shadowRoot","chipEl","closable","availableHorizontalChipElSpace","round","refreshChipDisplay","setVisibleAndHiddenChips","setFloatingEl","floatingEl","connectFloatingUI","setContainerEl","observe","transitionEl","setChipContainerEl","setReferenceEl","setAllSelectedIndicatorChipEl","setSelectedIndicatorChipEl","inputHandler","target","filteredData","debounce","text","setOpenToEmptyState","data","itemsAndGroups","getItemsAndGroups","matchAll","forEach","hidden","ancestor","filterTextMatchPattern","RegExp","escapeRegExp","getFilteredItems","trim","calciteComboboxFilterChange","DEBOUNCE","internalComboboxChangeEvent","calciteComboboxChange","emitComboboxChange","getSelectedItems","match","sort","a","b","aIdx","indexOf","bIdx","getItems","groupItems","getGroupItems","getData","needsIcon","getNeedsIcon","groupItem","index","afterEmptyGroup","nextGroupItem","children","activeItem","height","calculateScrollerHeight","offsetHeight","scrollTop","offsetTop","comboboxFocusHandler","focus","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","filterTextChange","openHandler","onToggleOpenCloseComponent","handleDisabledChange","maxItemsHandler","overlayPositioningHandler","handlePropsChange","valueHandler","isArray","onMessagesChange","flipPlacementsHandler","selectedItemsHandler","documentClickHandler","componentOnReady","calciteComboboxItemChangeHandler","newIndex","calciteInternalComboboxItemChangeHandler","stopPropagation","delayed","overlayPositioning","componentFocusable","connectedCallback","connectInteractive","connectLocalized","connectMessages","connectLabel","connectForm","childList","subtree","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","afterConnectDefaultValueSet","setComponentLoaded","componentDidRender","updateHostInteraction","componentDidUpdate","disconnectedCallback","disconnect","disconnectInteractive","disconnectLabel","disconnectForm","disconnectFloatingUI","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","resetText","bounding","getBoundingClientRect","top","left","right","window","innerWidth","documentElement","bottom","innerHeight","clientHeight","onBeforeOpen","calciteComboboxBeforeOpen","onOpen","calciteComboboxOpen","onBeforeClose","calciteComboboxBeforeClose","onClose","calciteComboboxClose","targetIndex","hideChip","add","showChip","remove","chipElWidth","newCompactBreakpoint","maxCompactBreakpoint","compactSelectionDisplay","newSelectedVisibleChipsCount","selectedVisibleChipsCount","newSelectedHiddenChipsCount","maxItems","itemsToProcess","parentHeight","childrenTotalHeight","reduce","total","child","updateAncestors","description","filterDisabled","metadata","existingItem","createElement","prepend","active","focusChip","last","chip","querySelector","delta","activeDescendant","i","isAllSelected","renderChips","messages","chipClasses","reverse","itemLabel","pathLabel","join","appearance","iconFlipRtl","id","messageOverrides","dismissLabel","removeTag","onCalciteChipClose","onFocusin","tabindex","title","renderAllSelectedIndicatorChip","allSelected","renderAllSelectedIndicatorChipCompact","all","renderSelectedIndicatorChip","selectedItemsCount","renderSelectedIndicatorChipCompact","showingInlineIcon","selectedItem","singleSelectionMode","renderInput","single","showLabel","toAriaBoolean","status","getLabelText","onFocus","onInput","role","renderListBoxOptions","renderFloatingUIContainer","classes","FloatingCSS","animation","animationActive","list","renderSelectedOrPlaceholderIcon","placeholderIconFlipRtl","showPlaceholder","flipRtl","renderChevronIcon","render","allSelectionDisplay","singleSelectionDisplay","fitSelectionDisplay","isClearable","Host","InteractiveContainer","wrapper","onKeyDown","htmlFor","clear","HiddenFormInputSlot","component","Validation","validationIcon","message","centerContent","container","custom","dot","filterMatch","iconActive","shortText","textContainer","SLOTS","contentEnd","comboboxItemCss","CalciteComboboxItemStyle0","itemClickHandler","toggleSelected","handleComboboxItemPropsChange","calciteInternalComboboxItemChange","selectedWatchHandler","calciteComboboxItemChange","connectConditionalSlotComponent","disconnectConditionalSlotComponent","isSinglePersistSelect","renderIcon","iconPath","renderSelectIndicator","showDot","renderChildren","getSlotted","heading","isSingleSelect","defaultIcon","undefined","headingText","depth","renderTextContent","name","pattern","parts","split","comboboxItemGroupCss","CalciteComboboxItemGroupStyle0"],"sources":["src/components/functional/XButton.tsx","src/components/combobox/resources.ts","src/components/combobox/utils.ts","src/components/combobox/combobox.scss?tag=calcite-combobox&encapsulation=shadow","src/components/combobox/combobox.tsx","src/components/combobox-item/resources.ts","src/components/combobox-item/combobox-item.scss?tag=calcite-combobox-item&encapsulation=shadow","src/components/combobox-item/combobox-item.tsx","src/components/combobox-item-group/resources.ts","src/components/combobox-item-group/combobox-item-group.scss?tag=calcite-combobox-item-group&encapsulation=shadow","src/components/combobox-item-group/combobox-item-group.tsx"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXAttributes, JSXBase } from \"@stencil/core/internal\";\nimport { Scale } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\n\nexport interface XButtonProps extends JSXAttributes {\n  disabled: boolean;\n  label: string;\n  scale: Scale;\n  onClick?: JSXBase.DOMAttributes<HTMLElement>[\"onClick\"];\n}\n\nexport const CSS = {\n  button: \"x-button\",\n};\n\nexport const XButton: FunctionalComponent<XButtonProps> = ({\n  disabled,\n  key,\n  label,\n  onClick,\n  ref,\n  scale,\n}): VNode => (\n  <button\n    aria-label={label}\n    class={CSS.button}\n    disabled={disabled}\n    key={key}\n    onClick={onClick}\n    ref={ref}\n    tabIndex={-1}\n    type=\"button\"\n  >\n    <calcite-icon icon=\"x\" scale={getIconScale(scale)} />\n  </button>\n);\n","export const ComboboxItem = \"CALCITE-COMBOBOX-ITEM\";\nexport const ComboboxItemGroup = \"CALCITE-COMBOBOX-ITEM-GROUP\";\nexport const ComboboxChildSelector = `${ComboboxItem}, ${ComboboxItemGroup}`;\n\nexport const CSS = {\n  input: \"input\",\n  chipInvisible: \"chip--invisible\",\n  selectionDisplayFit: \"selection-display-fit\",\n  selectionDisplaySingle: \"selection-display-single\",\n  listContainer: \"list-container\",\n  icon: \"icon\",\n  placeholderIcon: \"placeholder-icon\",\n  selectedIcon: \"selected-icon\",\n};\n\nexport const IDS = {\n  validationMessage: \"comboboxValidationMessage\",\n};\n","import { nodeListToArray } from \"../../utils/dom\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { ComboboxChildElement } from \"./interfaces\";\nimport { ComboboxChildSelector } from \"./resources\";\nimport { Combobox } from \"./combobox\";\n\nexport function getAncestors(element: HTMLElement): ComboboxChildElement[] {\n  const parent: ComboboxChildElement = element.parentElement?.closest(ComboboxChildSelector);\n  const grandparent: ComboboxChildElement = parent?.parentElement?.closest(ComboboxChildSelector);\n  return [parent, grandparent].filter((el) => el);\n}\n\nexport function getItemAncestors(item: HTMLCalciteComboboxItemElement): HTMLCalciteComboboxItemElement[] {\n  return (\n    (item.ancestors?.filter((el) => el.nodeName === \"CALCITE-COMBOBOX-ITEM\") as HTMLCalciteComboboxItemElement[]) || []\n  );\n}\n\nexport function getItemChildren(item: HTMLCalciteComboboxItemElement): HTMLCalciteComboboxItemElement[] {\n  return nodeListToArray(item.querySelectorAll(\"calcite-combobox-item\"));\n}\n\nexport function hasActiveChildren(node: HTMLCalciteComboboxItemElement): boolean {\n  const items = nodeListToArray(node.querySelectorAll(\"calcite-combobox-item\"));\n  return items.filter((item) => item.selected).length > 0;\n}\n\nexport function getDepth(element: HTMLElement): number {\n  if (!isBrowser()) {\n    return 0;\n  }\n\n  const result = document.evaluate(\n    \"ancestor::calcite-combobox-item | ancestor::calcite-combobox-item-group\",\n    element,\n    null,\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null,\n  );\n\n  return result.snapshotLength;\n}\n\nexport function isSingleLike(selectionMode: Combobox[\"selectionMode\"]): boolean {\n  return selectionMode.includes(\"single\");\n}\n\nexport function getLabel(item: HTMLCalciteComboboxItemElement): string {\n  return item.shortHeading || item.textLabel;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-combobox-input-height: Specifies the height of the component's input.\n */\n\n:host {\n  @apply relative block;\n}\n\n@include disabled();\n@include x-button();\n\n:host([scale=\"s\"]) {\n  @apply text-n2;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.1\");\n  --calcite-combobox-input-height: theme(\"spacing.4\");\n  --calcite-internal-combobox-input-margin-block: calc(theme(\"spacing.1\") - theme(\"borderWidth.DEFAULT\"));\n\n  .x-button {\n    margin-inline: theme(\"spacing.2\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.2\");\n  --calcite-combobox-input-height: theme(\"spacing.4\");\n  --calcite-internal-combobox-input-margin-block: calc(theme(\"spacing.2\") - theme(\"borderWidth.DEFAULT\"));\n\n  .x-button {\n    margin-inline-end: theme(\"spacing.3\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.4\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.3\");\n  --calcite-combobox-input-height: theme(\"spacing.6\");\n  --calcite-internal-combobox-input-margin-block: calc(theme(\"spacing[2.5]\") - theme(\"borderWidth.DEFAULT\"));\n\n  .x-button {\n    margin-inline-end: theme(\"spacing.4\");\n  }\n}\n\n.wrapper {\n  @apply bg-foreground-1\n    text-color-1\n    focus-base\n    flex\n    border-color-input\n    border\n    border-solid;\n  padding-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n\n  &:hover {\n    .icon {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n:host(:focus-within) .wrapper,\n.wrapper--active {\n  @apply focus-inset;\n}\n\n:host([read-only]) {\n  .wrapper {\n    background-color: var(--calcite-color-background);\n  }\n\n  .label {\n    font-weight: var(--calcite-font-weight-medium);\n  }\n}\n\n:host([status=\"invalid\"]) .wrapper {\n  @apply border-color-danger;\n}\n\n:host([status=\"invalid\"]:focus-within) .wrapper {\n  @apply focus-inset-danger;\n}\n\n.wrapper--single {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n  @apply cursor-pointer flex-nowrap;\n}\n\n.grid-input {\n  @apply flex\n    flex-grow\n    flex-wrap\n    items-center\n    relative\n    truncate\n    p-0;\n\n  gap: var(--calcite-combobox-item-spacing-unit-s);\n  margin-inline-end: var(--calcite-combobox-item-spacing-unit-s);\n\n  &.selection-display-fit,\n  &.selection-display-single {\n    @apply flex-nowrap overflow-hidden;\n  }\n}\n\n.input {\n  @apply appearance-none\n  bg-transparent\n  border-none\n  flex-grow\n  font-inherit\n  text-color-1\n  text-ellipsis\n  overflow-hidden\n  p-0;\n  font-size: inherit;\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n  inline-size: 100%;\n  margin-block-end: var(--calcite-combobox-item-spacing-unit-s);\n  min-inline-size: 4.8125rem;\n  &:focus {\n    @apply outline-none;\n  }\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n.input--single {\n  @apply p-0;\n  margin-block: var(--calcite-internal-combobox-input-margin-block);\n}\n\n.wrapper--active .input-single {\n  @apply cursor-text;\n}\n\n.input--hidden {\n  @apply pointer-events-none\n  w-0\n  min-w-0\n  opacity-0;\n}\n\n.input--icon {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.placeholder-icon {\n  color: var(--calcite-color-text-3);\n}\n\n.input-wrap {\n  @apply flex flex-grow items-center;\n}\n\n.input-wrap--single {\n  @apply flex-1 overflow-hidden;\n}\n\n.label {\n  @apply pointer-events-none\n    max-w-full\n    flex-auto\n    truncate\n    p-0\n    font-normal;\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n}\n\n.label--icon {\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.icon-end,\n.icon-start {\n  @apply flex cursor-pointer items-center;\n}\n\n.icon-end {\n  @apply flex-none;\n\n  .icon {\n    color: var(--calcite-color-text-3);\n  }\n}\n\n.floating-ui-container {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floating-ui-container();\n  @include floating-ui-wrapper();\n}\n\n@include floating-ui-elem-anim(\".floating-ui-container\");\n\n.floating-ui-container--active {\n  @include floating-ui-wrapper-active();\n}\n\n@media (forced-colors: active) {\n  .wrapper,\n  .floating-ui-container--active {\n    border: 1px solid canvasText;\n  }\n}\n\n.screen-readers-only {\n  @apply sr-only;\n}\n\n.list-container {\n  @apply bg-foreground-1\n    max-h-menu\n    overflow-y-auto;\n  inline-size: var(--calcite-dropdown-width, 100%);\n}\n\n.list {\n  @apply m-0 block p-0;\n}\n\n.list--hide {\n  @apply h-0 overflow-hidden;\n}\n\ncalcite-chip {\n  --calcite-animation-timing: 0;\n}\n\n.chip {\n  margin-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  max-inline-size: 100%;\n}\n\n.chip--active {\n  @apply bg-foreground-3;\n}\n\n.chip--invisible {\n  @apply absolute invisible;\n}\n\n.item {\n  @apply block;\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n\n::slotted(calcite-combobox-item-group:not(:first-child)) {\n  padding-block-start: var(--calcite-combobox-item-spacing-unit-l);\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { debounce, escapeRegExp } from \"lodash-es\";\nimport { calciteSize48 } from \"@esri/calcite-design-tokens/dist/es6/core.js\";\nimport { filter } from \"../../utils/filter\";\nimport { getElementWidth, getTextWidth, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FlipPlacement,\n  FloatingCSS,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  componentLoaded,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { DEBOUNCE } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale, SelectionMode, Status } from \"../interfaces\";\nimport { CSS as XButtonCSS, XButton } from \"../functional/XButton\";\nimport { componentOnReady, getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { ComboboxMessages } from \"./assets/combobox/t9n\";\nimport { ComboboxChildElement, SelectionDisplay } from \"./interfaces\";\nimport { ComboboxChildSelector, ComboboxItem, ComboboxItemGroup, CSS, IDS } from \"./resources\";\nimport {\n  getItemAncestors,\n  getItemChildren,\n  getLabel,\n  hasActiveChildren,\n  isSingleLike,\n} from \"./utils\";\n\ninterface ItemData {\n  description: string;\n  label: string;\n  metadata: Record<string, unknown>;\n  shortHeading: string;\n  value: string;\n}\n\nconst isGroup = (el: ComboboxChildElement): el is HTMLCalciteComboboxItemGroupElement =>\n  el.tagName === ComboboxItemGroup;\n\nconst itemUidPrefix = \"combobox-item-\";\nconst chipUidPrefix = \"combobox-chip-\";\nconst labelUidPrefix = \"combobox-label-\";\nconst listboxUidPrefix = \"combobox-listbox-\";\nconst inputUidPrefix = \"combobox-input-\";\n\n/**\n * @slot - A slot for adding `calcite-combobox-item`s.\n */\n@Component({\n  tag: \"calcite-combobox\",\n  styleUrl: \"combobox.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Combobox\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    OpenCloseComponent,\n    FloatingUIComponent,\n    T9nComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the value-clearing will be disabled.\n   */\n  @Prop({ reflect: true }) clearDisabled = false;\n\n  /**\n   * Text for the component's filter input field.\n   */\n  @Prop({ reflect: true, mutable: true }) filterText = \"\";\n\n  @Watch(\"filterText\")\n  filterTextChange(value: string): void {\n    this.updateActiveItemIndex(-1);\n    this.filterItems(value, true);\n  }\n\n  /**\n   * When `selectionMode` is `\"ancestors\"` or `\"multiple\"`, specifies the display of multiple `calcite-combobox-item` selections, where:\n   *\n   * `\"all\"` displays all selections with individual `calcite-chip`s,\n   *\n   * `\"fit\"` displays individual `calcite-chip`s that scale to the component's size, including a non-closable `calcite-chip`, which provides the number of additional `calcite-combobox-item` selections not visually displayed, and\n   *\n   * `\"single\"` displays one `calcite-chip` with the total number of selections.\n   */\n  @Prop({ reflect: true }) selectionDisplay: SelectionDisplay = \"all\";\n\n  /**When `true`, displays and positions the component. */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n\n    this.setMaxScrollerHeight();\n  }\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the placeholder text for the input. */\n  @Prop() placeholder: string;\n\n  /** Specifies the placeholder icon for the input. */\n  @Prop({ reflect: true }) placeholderIcon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) placeholderIconFlipRtl = false;\n\n  /** Specifies the maximum number of `calcite-combobox-item`s (including nested children) to display before displaying a scrollbar. */\n  @Prop({ reflect: true }) maxItems = 0;\n\n  @Watch(\"maxItems\")\n  maxItemsHandler(): void {\n    this.setMaxScrollerHeight();\n  }\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, allows entry of custom values, which are not in the original set of items. */\n  @Prop({ reflect: true }) allowCustomValues: boolean;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"ancestors\"` allows multiple selections, but shows ancestors of selected items as selected, with only deepest children shown in chips.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"single\" | \"single-persist\" | \"ancestors\" | \"multiple\",\n    SelectionMode\n  > = \"multiple\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"selectionMode\")\n  @Watch(\"scale\")\n  handlePropsChange(): void {\n    this.updateItems();\n  }\n\n  /** The component's value(s) from the selected `calcite-combobox-item`(s). */\n  @Prop({ mutable: true }) value: string | string[] = null;\n\n  @Watch(\"value\")\n  valueHandler(value: string | string[]): void {\n    if (!this.internalValueChangeFlag) {\n      const items = this.getItems();\n      if (Array.isArray(value)) {\n        items.forEach((item) => (item.selected = value.includes(item.value)));\n      } else if (value) {\n        items.forEach((item) => (item.selected = value === item.value));\n      } else {\n        items.forEach((item) => (item.selected = false));\n      }\n      this.updateItems();\n    }\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ComboboxMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ComboboxMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /*  wired up by t9n util */\n  }\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteComboboxItemElement[] = [];\n\n  @Watch(\"selectedItems\")\n  selectedItemsHandler(): void {\n    this.internalValueChangeFlag = true;\n    this.value = this.getValue();\n    this.internalValueChangeFlag = false;\n  }\n\n  /**\n   * Specifies the component's filtered items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredItems: HTMLCalciteComboboxItemElement[] = [];\n\n  /**\n   * When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"click\", { target: \"document\" })\n  async documentClickHandler(event: PointerEvent): Promise<void> {\n    if (this.disabled || event.composedPath().includes(this.el)) {\n      return;\n    }\n\n    await componentOnReady(this.el);\n\n    if (!this.allowCustomValues && this.filterText) {\n      this.clearInputValue();\n      this.filterItems(\"\");\n      this.updateActiveItemIndex(-1);\n    }\n\n    if (this.allowCustomValues && this.filterText.trim().length) {\n      this.addCustomChip(this.filterText);\n    }\n\n    this.open = false;\n  }\n\n  @Listen(\"calciteComboboxItemChange\")\n  calciteComboboxItemChangeHandler(event: CustomEvent<HTMLCalciteComboboxItemElement>): void {\n    if (this.ignoreSelectedEventsFlag) {\n      return;\n    }\n\n    const target = event.target as HTMLCalciteComboboxItemElement;\n    const newIndex = this.filteredItems.indexOf(target);\n    this.updateActiveItemIndex(newIndex);\n    this.toggleSelection(target, target.selected);\n  }\n\n  @Listen(\"calciteInternalComboboxItemChange\")\n  calciteInternalComboboxItemChangeHandler(\n    event: CustomEvent<HTMLCalciteComboboxItemElement>,\n  ): void {\n    event.stopPropagation();\n    this.updateItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed Reposition the component after a delay\n   * @returns Promise\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.textInput?.focus();\n    this.activeChipIndex = -1;\n    this.activeItemIndex = -1;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the selected item(s) changes.\n   */\n  @Event({ cancelable: false }) calciteComboboxChange: EventEmitter<void>;\n\n  /** Fires when text is added to filter the options list. */\n  @Event({ cancelable: false }) calciteComboboxFilterChange: EventEmitter<void>;\n\n  /**\n   * Fires when a selected item in the component is closed via its `calcite-chip`.\n   */\n  @Event({ cancelable: false }) calciteComboboxChipClose: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed, and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteComboboxBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteComboboxClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteComboboxBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteComboboxOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    connectLabel(this);\n    connectForm(this);\n\n    this.internalValueChangeFlag = true;\n    this.value = this.getValue();\n    this.internalValueChangeFlag = false;\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n\n    this.updateItems();\n    this.setFilteredPlacements();\n\n    if (this.open) {\n      this.openHandler();\n      onToggleOpenCloseComponent(this);\n    }\n\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.updateItems();\n    await setUpMessages(this);\n    this.filterItems(this.filterText, false, false);\n  }\n\n  componentDidLoad(): void {\n    afterConnectDefaultValueSet(this, this.getValue());\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    if (this.el.offsetHeight !== this.inputHeight) {\n      this.reposition(true);\n      this.inputHeight = this.el.offsetHeight;\n    }\n\n    updateHostInteraction(this);\n  }\n\n  componentDidUpdate(): void {\n    this.refreshSelectionDisplay();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteComboboxElement;\n\n  private allSelectedIndicatorChipEl: HTMLCalciteChipElement;\n\n  private filterTextMatchPattern: RegExp;\n\n  placement: LogicalPlacement = defaultMenuPlacement;\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  internalValueChangeFlag = false;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Combobox[\"value\"];\n\n  @State() items: HTMLCalciteComboboxItemElement[] = [];\n\n  @State() groupItems: HTMLCalciteComboboxItemGroupElement[] = [];\n\n  @State() needsIcon: boolean;\n\n  @State() activeItemIndex = -1;\n\n  @State() activeChipIndex = -1;\n\n  @State() activeDescendant = \"\";\n\n  @State() compactSelectionDisplay = false;\n\n  @State() selectedHiddenChipsCount = 0;\n\n  @State() selectedVisibleChipsCount = 0;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ComboboxMessages;\n\n  textInput: HTMLInputElement = null;\n\n  private data: ItemData[];\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n\n  private resizeObserver = createObserver(\"resize\", () => {\n    this.setMaxScrollerHeight();\n    this.refreshSelectionDisplay();\n  });\n\n  private guid = guid();\n\n  private inputHeight = 0;\n\n  private floatingEl: HTMLDivElement;\n\n  private referenceEl: HTMLDivElement;\n\n  private chipContainerEl: HTMLDivElement;\n\n  private listContainerEl: HTMLDivElement;\n\n  private ignoreSelectedEventsFlag = false;\n\n  private maxCompactBreakpoint: number;\n\n  openTransitionProp = \"opacity\";\n\n  private selectedIndicatorChipEl: HTMLCalciteChipElement;\n\n  transitionEl: HTMLDivElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private clearValue(): void {\n    this.ignoreSelectedEventsFlag = true;\n    this.items.forEach((el) => (el.selected = false));\n    this.ignoreSelectedEventsFlag = false;\n    this.selectedItems = [];\n    this.emitComboboxChange();\n    this.open = false;\n    this.updateActiveItemIndex(-1);\n    this.resetText();\n    this.filterItems(\"\");\n    this.setFocus();\n  }\n\n  private clearInputValue(): void {\n    this.textInput.value = \"\";\n    this.filterText = \"\";\n  }\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  getValue = (): string | string[] => {\n    const items = this.selectedItems.map((item) => item?.value?.toString());\n    return items?.length ? (items.length > 1 ? items : items[0]) : \"\";\n  };\n\n  onLabelClick = (): void => {\n    this.setFocus();\n  };\n\n  private comboboxInViewport(): boolean {\n    const bounding = this.el.getBoundingClientRect();\n    return (\n      bounding.top >= 0 &&\n      bounding.left >= 0 &&\n      bounding.right <= (window.innerWidth || document.documentElement.clientWidth) &&\n      bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight)\n    );\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly) {\n      return;\n    }\n\n    const { key } = event;\n\n    switch (key) {\n      case \"Tab\":\n        this.activeChipIndex = -1;\n        this.activeItemIndex = -1;\n        if (this.allowCustomValues && this.filterText) {\n          this.addCustomChip(this.filterText, true);\n          event.preventDefault();\n        } else if (this.open) {\n          this.open = false;\n          event.preventDefault();\n        } else if (!this.allowCustomValues && this.filterText) {\n          this.clearInputValue();\n          this.filterItems(\"\");\n          this.updateActiveItemIndex(-1);\n        }\n        break;\n      case \"ArrowLeft\":\n        if (this.activeChipIndex !== -1 || this.textInput.selectionStart === 0) {\n          this.previousChip();\n          event.preventDefault();\n        }\n        break;\n      case \"ArrowRight\":\n        if (this.activeChipIndex !== -1) {\n          this.nextChip();\n          event.preventDefault();\n        }\n        break;\n      case \"ArrowUp\":\n        if (this.filteredItems.length) {\n          event.preventDefault();\n          if (this.open) {\n            this.shiftActiveItemIndex(-1);\n          }\n\n          if (!this.comboboxInViewport()) {\n            this.el.scrollIntoView();\n          }\n        }\n        break;\n      case \"ArrowDown\":\n        if (this.filteredItems.length) {\n          event.preventDefault();\n          if (this.open) {\n            this.shiftActiveItemIndex(1);\n          } else {\n            this.open = true;\n            this.ensureRecentSelectedItemIsActive();\n          }\n\n          if (!this.comboboxInViewport()) {\n            this.el.scrollIntoView();\n          }\n        }\n        break;\n      case \" \":\n        if (!this.textInput.value && !event.defaultPrevented) {\n          if (!this.open) {\n            this.open = true;\n            this.shiftActiveItemIndex(1);\n          }\n          event.preventDefault();\n        }\n        break;\n      case \"Home\":\n        if (!this.open) {\n          return;\n        }\n        event.preventDefault();\n        this.updateActiveItemIndex(0);\n        this.scrollToActiveItem();\n        if (!this.comboboxInViewport()) {\n          this.el.scrollIntoView();\n        }\n        break;\n      case \"End\":\n        if (!this.open) {\n          return;\n        }\n        event.preventDefault();\n        this.updateActiveItemIndex(this.filteredItems.length - 1);\n        this.scrollToActiveItem();\n        if (!this.comboboxInViewport()) {\n          this.el.scrollIntoView();\n        }\n        break;\n      case \"Escape\":\n        if (!this.clearDisabled && !this.open) {\n          this.clearValue();\n        }\n\n        this.open = false;\n        event.preventDefault();\n        break;\n      case \"Enter\":\n        if (this.open && this.activeItemIndex > -1) {\n          this.toggleSelection(this.filteredItems[this.activeItemIndex]);\n          event.preventDefault();\n        } else if (this.activeChipIndex > -1) {\n          this.removeActiveChip();\n          event.preventDefault();\n        } else if (this.allowCustomValues && this.filterText) {\n          this.addCustomChip(this.filterText, true);\n          event.preventDefault();\n        } else if (!event.defaultPrevented) {\n          if (submitForm(this)) {\n            event.preventDefault();\n          }\n        }\n        break;\n      case \"Delete\":\n      case \"Backspace\": {\n        const notDeletable =\n          this.selectionDisplay === \"single\" ||\n          (this.selectionDisplay === \"fit\" && this.selectedHiddenChipsCount > 0);\n        if (notDeletable) {\n          return;\n        }\n        if (this.activeChipIndex > -1) {\n          event.preventDefault();\n          this.removeActiveChip();\n        } else if (!this.filterText && this.isMulti()) {\n          event.preventDefault();\n          this.removeLastChip();\n        }\n        break;\n      }\n    }\n  };\n\n  private toggleCloseEnd = (): void => {\n    this.open = false;\n    this.el.removeEventListener(\"calciteComboboxClose\", this.toggleCloseEnd);\n  };\n\n  private toggleOpenEnd = (): void => {\n    this.open = false;\n    this.el.removeEventListener(\"calciteComboboxOpen\", this.toggleOpenEnd);\n  };\n\n  onBeforeOpen(): void {\n    this.scrollToActiveItem();\n    this.calciteComboboxBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteComboboxOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteComboboxBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteComboboxClose.emit();\n  }\n\n  setMaxScrollerHeight = async (): Promise<void> => {\n    const { listContainerEl, open, referenceEl } = this;\n\n    if (!listContainerEl || !open) {\n      return;\n    }\n\n    await this.reposition(true);\n    const maxScrollerHeight = this.getMaxScrollerHeight();\n    listContainerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n    listContainerEl.style.minWidth = `${referenceEl.clientWidth}px`;\n    await this.reposition(true);\n  };\n\n  calciteChipCloseHandler = (comboboxItem: HTMLCalciteComboboxItemElement): void => {\n    this.open = false;\n\n    const selection = this.items.find((item) => item === comboboxItem);\n\n    if (selection) {\n      this.toggleSelection(selection, false);\n    }\n\n    this.calciteComboboxChipClose.emit();\n  };\n\n  clickHandler = (event: MouseEvent): void => {\n    if (this.readOnly) {\n      return;\n    }\n\n    const composedPath = event.composedPath();\n\n    if (composedPath.some((node: HTMLElement) => node.tagName === \"CALCITE-CHIP\")) {\n      this.open = false;\n      event.preventDefault();\n      return;\n    }\n\n    if (composedPath.some((node: HTMLElement) => node.classList?.contains(XButtonCSS.button))) {\n      this.clearValue();\n      event.preventDefault();\n      return;\n    }\n\n    this.open = !this.open;\n    this.ensureRecentSelectedItemIsActive();\n  };\n\n  private ensureRecentSelectedItemIsActive(): void {\n    const { selectedItems } = this;\n    const targetIndex =\n      selectedItems.length === 0 ? 0 : this.items.indexOf(selectedItems[selectedItems.length - 1]);\n\n    this.updateActiveItemIndex(targetIndex);\n  }\n\n  private hideChip(chipEl: HTMLCalciteChipElement): void {\n    chipEl.classList.add(CSS.chipInvisible);\n  }\n\n  private showChip(chipEl: HTMLCalciteChipElement): void {\n    chipEl.classList.remove(CSS.chipInvisible);\n  }\n\n  private refreshChipDisplay({\n    chipEls,\n    availableHorizontalChipElSpace,\n    chipContainerElGap,\n  }): void {\n    chipEls.forEach((chipEl: HTMLCalciteChipElement) => {\n      if (!chipEl.selected) {\n        this.hideChip(chipEl);\n      } else {\n        const chipElWidth = getElementWidth(chipEl);\n        if (chipElWidth && chipElWidth < availableHorizontalChipElSpace) {\n          availableHorizontalChipElSpace -= chipElWidth + chipContainerElGap;\n          this.showChip(chipEl);\n          return;\n        }\n      }\n      this.hideChip(chipEl);\n    });\n  }\n\n  private refreshSelectionDisplay = async () => {\n    await componentLoaded(this);\n\n    if (isSingleLike(this.selectionMode)) {\n      return;\n    }\n\n    if (!this.textInput) {\n      return;\n    }\n\n    const {\n      allSelectedIndicatorChipEl,\n      chipContainerEl,\n      selectionDisplay,\n      placeholder,\n      selectedIndicatorChipEl,\n      textInput,\n    } = this;\n\n    const chipContainerElGap = parseInt(getComputedStyle(chipContainerEl).gap.replace(\"px\", \"\"));\n    const chipContainerElWidth = getElementWidth(chipContainerEl);\n    const { fontSize, fontFamily } = getComputedStyle(textInput);\n    const inputTextWidth = getTextWidth(placeholder, `${fontSize} ${fontFamily}`);\n    const inputWidth = (inputTextWidth || parseInt(calciteSize48)) + chipContainerElGap;\n    const allSelectedIndicatorChipElWidth = getElementWidth(allSelectedIndicatorChipEl);\n    const selectedIndicatorChipElWidth = getElementWidth(selectedIndicatorChipEl);\n    const largestSelectedIndicatorChipWidth = Math.max(\n      allSelectedIndicatorChipElWidth,\n      selectedIndicatorChipElWidth,\n    );\n\n    this.setCompactSelectionDisplay({\n      chipContainerElGap,\n      chipContainerElWidth,\n      inputWidth,\n      largestSelectedIndicatorChipWidth,\n    });\n\n    if (selectionDisplay === \"fit\") {\n      const chipEls = Array.from(this.el.shadowRoot.querySelectorAll(\"calcite-chip\")).filter(\n        (chipEl) => chipEl.closable,\n      );\n\n      const availableHorizontalChipElSpace = Math.round(\n        chipContainerElWidth -\n          ((this.selectedHiddenChipsCount > 0 ? selectedIndicatorChipElWidth : 0) +\n            chipContainerElGap +\n            inputWidth +\n            chipContainerElGap),\n      );\n\n      this.refreshChipDisplay({ availableHorizontalChipElSpace, chipContainerElGap, chipEls });\n      this.setVisibleAndHiddenChips(chipEls);\n    }\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  private setCompactSelectionDisplay({\n    chipContainerElGap,\n    chipContainerElWidth,\n    inputWidth,\n    largestSelectedIndicatorChipWidth,\n  }): void {\n    const newCompactBreakpoint = Math.round(\n      largestSelectedIndicatorChipWidth + chipContainerElGap + inputWidth,\n    );\n    if (!this.maxCompactBreakpoint || this.maxCompactBreakpoint < newCompactBreakpoint) {\n      this.maxCompactBreakpoint = newCompactBreakpoint;\n    }\n    this.compactSelectionDisplay = chipContainerElWidth < this.maxCompactBreakpoint;\n  }\n\n  setContainerEl = (el: HTMLDivElement): void => {\n    this.resizeObserver.observe(el);\n    this.listContainerEl = el;\n    this.transitionEl = el;\n  };\n\n  setChipContainerEl = (el: HTMLDivElement): void => {\n    this.resizeObserver.observe(el);\n    this.chipContainerEl = el;\n  };\n\n  setReferenceEl = (el: HTMLDivElement): void => {\n    this.referenceEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  setAllSelectedIndicatorChipEl = (el: HTMLCalciteChipElement): void => {\n    this.allSelectedIndicatorChipEl = el;\n  };\n\n  setSelectedIndicatorChipEl = (el: HTMLCalciteChipElement): void => {\n    this.selectedIndicatorChipEl = el;\n  };\n\n  private setVisibleAndHiddenChips(chipEls: HTMLCalciteChipElement[]): void {\n    let newSelectedVisibleChipsCount = 0;\n    chipEls.forEach((chipEl) => {\n      if (chipEl.selected && !chipEl.classList.contains(CSS.chipInvisible)) {\n        newSelectedVisibleChipsCount++;\n      }\n    });\n    if (newSelectedVisibleChipsCount !== this.selectedVisibleChipsCount) {\n      this.selectedVisibleChipsCount = newSelectedVisibleChipsCount;\n    }\n    const newSelectedHiddenChipsCount =\n      this.getSelectedItems().length - newSelectedVisibleChipsCount;\n    if (newSelectedHiddenChipsCount !== this.selectedHiddenChipsCount) {\n      this.selectedHiddenChipsCount = newSelectedHiddenChipsCount;\n    }\n  }\n\n  private getMaxScrollerHeight(): number {\n    const items = this.getItemsAndGroups().filter((item) => !item.hidden);\n\n    const { maxItems } = this;\n\n    let itemsToProcess = 0;\n    let maxScrollerHeight = 0;\n\n    if (items.length > maxItems) {\n      items.forEach((item) => {\n        if (itemsToProcess < maxItems) {\n          const height = this.calculateScrollerHeight(item);\n          if (height > 0) {\n            maxScrollerHeight += height;\n            itemsToProcess++;\n          }\n        }\n      });\n    }\n\n    return maxScrollerHeight;\n  }\n\n  private calculateScrollerHeight(item: ComboboxChildElement): number {\n    if (!item) {\n      return;\n    }\n\n    // if item has children items, don't count their height twice\n    const parentHeight = item.getBoundingClientRect().height;\n    const childrenTotalHeight = Array.from(\n      item.querySelectorAll<ComboboxChildElement>(ComboboxChildSelector),\n    ).reduce((total, child) => total + child.getBoundingClientRect().height, 0);\n\n    return parentHeight - childrenTotalHeight;\n  }\n\n  inputHandler = (event: Event): void => {\n    const value = (event.target as HTMLInputElement).value;\n    this.filterText = value;\n  };\n\n  getItemsAndGroups(): ComboboxChildElement[] {\n    return [...this.groupItems, ...this.items];\n  }\n\n  private filterItems = (() => {\n    const find = (item: ComboboxChildElement, filteredData: ItemData[]) =>\n      item &&\n      filteredData.some(({ label, value }) =>\n        isGroup(item) ? label === item.label : value === item.value && label === item.textLabel,\n      );\n\n    return debounce((text: string, setOpenToEmptyState = false, emit = true): void => {\n      const filteredData = filter(this.data, text);\n      const itemsAndGroups = this.getItemsAndGroups();\n\n      const matchAll = text === \"\";\n\n      itemsAndGroups.forEach((item) => {\n        if (matchAll) {\n          item.hidden = false;\n          return;\n        }\n\n        const hidden = !find(item, filteredData);\n        item.hidden = hidden;\n        const [parent, grandparent] = item.ancestors;\n\n        if (find(parent, filteredData) || find(grandparent, filteredData)) {\n          item.hidden = false;\n        }\n\n        if (!hidden) {\n          item.ancestors.forEach((ancestor) => (ancestor.hidden = false));\n        }\n      });\n\n      this.filterTextMatchPattern =\n        this.filterText && new RegExp(`(${escapeRegExp(this.filterText)})`, \"i\");\n\n      this.filteredItems = this.getFilteredItems();\n      this.filteredItems.forEach((item) => {\n        item.filterTextMatchPattern = this.filterTextMatchPattern;\n      });\n\n      if (setOpenToEmptyState) {\n        this.open = this.filterText.trim().length > 0 && this.filteredItems.length > 0;\n      }\n\n      if (emit) {\n        this.calciteComboboxFilterChange.emit();\n      }\n    }, DEBOUNCE.filter);\n  })();\n\n  internalComboboxChangeEvent = (): void => {\n    this.calciteComboboxChange.emit();\n  };\n\n  private emitComboboxChange = debounce(this.internalComboboxChangeEvent, 0);\n\n  toggleSelection(item: HTMLCalciteComboboxItemElement, value = !item.selected): void {\n    if (\n      !item ||\n      (this.selectionMode === \"single-persist\" && item.selected && item.value === this.value)\n    ) {\n      return;\n    }\n\n    if (this.isMulti()) {\n      item.selected = value;\n      this.updateAncestors(item);\n      this.selectedItems = this.getSelectedItems();\n      this.emitComboboxChange();\n      this.resetText();\n      this.filterItems(\"\");\n    } else {\n      this.ignoreSelectedEventsFlag = true;\n      this.items.forEach((el) => (el.selected = el === item ? value : false));\n      this.ignoreSelectedEventsFlag = false;\n      this.selectedItems = this.getSelectedItems();\n      this.emitComboboxChange();\n\n      if (this.textInput) {\n        this.textInput.value = getLabel(item);\n      }\n      this.open = false;\n      this.updateActiveItemIndex(-1);\n      this.resetText();\n      this.filterItems(\"\");\n    }\n  }\n\n  updateAncestors(item: HTMLCalciteComboboxItemElement): void {\n    if (this.selectionMode !== \"ancestors\") {\n      return;\n    }\n    const ancestors = getItemAncestors(item);\n    const children = getItemChildren(item);\n    if (item.selected) {\n      ancestors.forEach((el) => {\n        (el as HTMLCalciteComboboxItemElement).selected = true;\n      });\n    } else {\n      children.forEach((el) => (el.selected = false));\n      [...ancestors].forEach((el) => {\n        if (!hasActiveChildren(el)) {\n          el.selected = false;\n        }\n      });\n    }\n  }\n\n  getFilteredItems(): HTMLCalciteComboboxItemElement[] {\n    return this.filterText === \"\" ? this.items : this.items.filter((item) => !item.hidden);\n  }\n\n  private getSelectedItems = (): HTMLCalciteComboboxItemElement[] => {\n    if (!this.isMulti()) {\n      const match = this.items.find(({ selected }) => selected);\n      return match ? [match] : [];\n    }\n\n    return (\n      this.items\n        .filter(\n          (item) =>\n            item.selected && (this.selectionMode !== \"ancestors\" || !hasActiveChildren(item)),\n        )\n        /** Preserve order of entered tags */\n        .sort((a, b) => {\n          const aIdx = this.selectedItems.indexOf(a);\n          const bIdx = this.selectedItems.indexOf(b);\n          if (aIdx > -1 && bIdx > -1) {\n            return aIdx - bIdx;\n          }\n          return bIdx - aIdx;\n        })\n    );\n  };\n\n  private updateItems = (): void => {\n    this.items = this.getItems();\n    this.groupItems = this.getGroupItems();\n    this.data = this.getData();\n    this.selectedItems = this.getSelectedItems();\n    this.filteredItems = this.getFilteredItems();\n    this.needsIcon = this.getNeedsIcon();\n\n    this.items.forEach((item) => {\n      item.selectionMode = this.selectionMode;\n      item.scale = this.scale;\n    });\n\n    if (!this.allowCustomValues) {\n      this.setMaxScrollerHeight();\n    }\n\n    this.groupItems.forEach((groupItem, index, items) => {\n      if (index === 0) {\n        groupItem.afterEmptyGroup = false;\n      }\n\n      const nextGroupItem = items[index + 1];\n\n      if (nextGroupItem) {\n        nextGroupItem.afterEmptyGroup = groupItem.children.length === 0;\n      }\n    });\n  };\n\n  getData(): ItemData[] {\n    return this.items.map((item) => ({\n      description: item.description,\n      filterDisabled: item.filterDisabled,\n      label: item.textLabel,\n      metadata: item.metadata,\n      shortHeading: item.shortHeading,\n      value: item.value,\n    }));\n  }\n\n  getNeedsIcon(): boolean {\n    return isSingleLike(this.selectionMode) && this.items.some((item) => item.icon);\n  }\n\n  resetText(): void {\n    if (this.textInput) {\n      this.textInput.value = \"\";\n    }\n    this.filterText = \"\";\n  }\n\n  getItems(): HTMLCalciteComboboxItemElement[] {\n    const items: HTMLCalciteComboboxItemElement[] = Array.from(\n      this.el.querySelectorAll(ComboboxItem),\n    );\n    return items.filter((item) => !item.disabled);\n  }\n\n  getGroupItems(): HTMLCalciteComboboxItemGroupElement[] {\n    return Array.from(this.el.querySelectorAll(ComboboxItemGroup));\n  }\n\n  addCustomChip(value: string, focus?: boolean): void {\n    const existingItem = this.items.find((el) => el.textLabel === value);\n    if (existingItem) {\n      this.toggleSelection(existingItem, true);\n    } else {\n      if (!this.isMulti()) {\n        this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n      }\n      const item = document.createElement(\"calcite-combobox-item\");\n      item.value = value;\n      item.textLabel = value;\n      item.selected = true;\n      this.el.prepend(item);\n      this.resetText();\n      if (focus) {\n        this.setFocus();\n      }\n      this.updateItems();\n      this.filterItems(\"\");\n      this.open = true;\n      this.emitComboboxChange();\n    }\n  }\n\n  removeActiveChip(): void {\n    this.toggleSelection(this.selectedItems[this.activeChipIndex], false);\n    this.setFocus();\n  }\n\n  removeLastChip(): void {\n    this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n    this.setFocus();\n  }\n\n  previousChip(): void {\n    const length = this.selectedItems.length - 1;\n    const active = this.activeChipIndex;\n    this.activeChipIndex = active === -1 ? length : Math.max(active - 1, 0);\n    this.updateActiveItemIndex(-1);\n    this.focusChip();\n  }\n\n  nextChip(): void {\n    const last = this.selectedItems.length - 1;\n    const newIndex = this.activeChipIndex + 1;\n    if (newIndex > last) {\n      this.activeChipIndex = -1;\n      this.setFocus();\n    } else {\n      this.activeChipIndex = newIndex;\n      this.focusChip();\n    }\n    this.updateActiveItemIndex(-1);\n  }\n\n  focusChip(): void {\n    const guid = this.selectedItems[this.activeChipIndex]?.guid;\n\n    const chip = guid\n      ? this.referenceEl.querySelector<HTMLCalciteChipElement>(`#${chipUidPrefix}${guid}`)\n      : null;\n    chip?.setFocus();\n  }\n\n  private scrollToActiveItem = (): void => {\n    const activeItem = this.filteredItems[this.activeItemIndex];\n\n    if (!activeItem) {\n      return;\n    }\n\n    const height = this.calculateScrollerHeight(activeItem);\n    const { offsetHeight, scrollTop } = this.listContainerEl;\n    if (offsetHeight + scrollTop < activeItem.offsetTop + height) {\n      this.listContainerEl.scrollTop = activeItem.offsetTop - offsetHeight + height;\n    } else if (activeItem.offsetTop < scrollTop) {\n      this.listContainerEl.scrollTop = activeItem.offsetTop;\n    }\n  };\n\n  shiftActiveItemIndex(delta: number): void {\n    const { length } = this.filteredItems;\n    const newIndex = (this.activeItemIndex + length + delta) % length;\n    this.updateActiveItemIndex(newIndex);\n    this.scrollToActiveItem();\n  }\n\n  updateActiveItemIndex(index: number): void {\n    this.activeItemIndex = index;\n    let activeDescendant: string = null;\n    this.filteredItems.forEach((el, i) => {\n      if (i === index) {\n        el.active = true;\n        activeDescendant = `${itemUidPrefix}${el.guid}`;\n      } else {\n        el.active = false;\n      }\n    });\n    this.activeDescendant = activeDescendant;\n    if (this.activeItemIndex > -1) {\n      this.activeChipIndex = -1;\n    }\n  }\n\n  private isAllSelected(): boolean {\n    return this.getItems().length === this.getSelectedItems().length;\n  }\n\n  isMulti(): boolean {\n    return !isSingleLike(this.selectionMode);\n  }\n\n  comboboxFocusHandler = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.textInput?.focus();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChips(): VNode[] {\n    const { activeChipIndex, readOnly, scale, selectionMode, messages } = this;\n    return this.selectedItems.map((item, i) => {\n      const chipClasses = {\n        chip: true,\n        \"chip--active\": activeChipIndex === i,\n      };\n      const ancestors = [...getItemAncestors(item)].reverse();\n      const itemLabel = getLabel(item);\n      const pathLabel = [...ancestors, item].map((el) => getLabel(el));\n      const label = selectionMode !== \"ancestors\" ? itemLabel : pathLabel.join(\" / \");\n\n      return (\n        <calcite-chip\n          appearance={readOnly ? \"outline\" : \"solid\"}\n          class={chipClasses}\n          closable={!readOnly}\n          data-test-id={`chip-${i}`}\n          icon={item.icon}\n          iconFlipRtl={item.iconFlipRtl}\n          id={item.guid ? `${chipUidPrefix}${item.guid}` : null}\n          key={itemLabel}\n          messageOverrides={{ dismissLabel: messages.removeTag }}\n          onCalciteChipClose={() => this.calciteChipCloseHandler(item)}\n          onFocusin={() => (this.activeChipIndex = i)}\n          scale={scale}\n          selected={item.selected}\n          tabindex={activeChipIndex === i ? 0 : -1}\n          title={label}\n          value={item.value}\n        >\n          {label}\n        </calcite-chip>\n      );\n    });\n  }\n\n  renderAllSelectedIndicatorChip(): VNode {\n    const {\n      compactSelectionDisplay,\n      scale,\n      selectedVisibleChipsCount,\n      setAllSelectedIndicatorChipEl,\n    } = this;\n    const label = this.messages.allSelected;\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: !(\n            this.isAllSelected() &&\n            !selectedVisibleChipsCount &&\n            !compactSelectionDisplay\n          ),\n        }}\n        ref={setAllSelectedIndicatorChipEl}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  renderAllSelectedIndicatorChipCompact(): VNode {\n    const { compactSelectionDisplay, scale, selectedVisibleChipsCount } = this;\n    const label = this.messages.all || \"All\";\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: !(\n            this.isAllSelected() &&\n            !selectedVisibleChipsCount &&\n            compactSelectionDisplay\n          ),\n        }}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  renderSelectedIndicatorChip(): VNode {\n    const {\n      compactSelectionDisplay,\n      selectionDisplay,\n      getSelectedItems,\n      scale,\n      selectedHiddenChipsCount,\n      selectedVisibleChipsCount,\n      setSelectedIndicatorChipEl,\n    } = this;\n    let chipInvisible: boolean;\n    let label: string;\n\n    if (compactSelectionDisplay) {\n      chipInvisible = true;\n    } else {\n      if (selectionDisplay === \"single\") {\n        const selectedItemsCount = getSelectedItems().length;\n        if (this.isAllSelected()) {\n          chipInvisible = true;\n        } else if (selectedItemsCount > 0) {\n          chipInvisible = false;\n        } else {\n          chipInvisible = true;\n        }\n        label = `${selectedItemsCount} ${this.messages.selected}`;\n      } else if (selectionDisplay === \"fit\") {\n        chipInvisible = !!(\n          (this.isAllSelected() && selectedVisibleChipsCount === 0) ||\n          selectedHiddenChipsCount === 0\n        );\n        label =\n          selectedVisibleChipsCount > 0\n            ? `+${selectedHiddenChipsCount}`\n            : `${selectedHiddenChipsCount} ${this.messages.selected}`;\n      }\n    }\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: chipInvisible,\n        }}\n        ref={setSelectedIndicatorChipEl}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  renderSelectedIndicatorChipCompact(): VNode {\n    const {\n      compactSelectionDisplay,\n      selectionDisplay,\n      getSelectedItems,\n      scale,\n      selectedHiddenChipsCount,\n    } = this;\n    let chipInvisible: boolean;\n    let label: string;\n\n    if (compactSelectionDisplay) {\n      const selectedItemsCount = getSelectedItems().length;\n      if (this.isAllSelected()) {\n        chipInvisible = true;\n      } else if (selectionDisplay === \"fit\") {\n        chipInvisible = !(selectedHiddenChipsCount > 0);\n        label = `${selectedHiddenChipsCount || 0}`;\n      } else if (selectionDisplay === \"single\") {\n        chipInvisible = !(selectedItemsCount > 0);\n        label = `${selectedItemsCount}`;\n      }\n    } else {\n      chipInvisible = true;\n    }\n    return (\n      <calcite-chip\n        class={{\n          chip: true,\n          [CSS.chipInvisible]: chipInvisible,\n        }}\n        scale={scale}\n        title={label}\n        value=\"\"\n      >\n        {label}\n      </calcite-chip>\n    );\n  }\n\n  private get showingInlineIcon(): boolean {\n    const { placeholderIcon, selectionMode, selectedItems, open } = this;\n    const selectedItem = selectedItems[0];\n    const selectedIcon = selectedItem?.icon;\n    const singleSelectionMode = isSingleLike(selectionMode);\n\n    return !open && selectedItem\n      ? !!selectedIcon && singleSelectionMode\n      : !!placeholderIcon && (!selectedItem || singleSelectionMode);\n  }\n\n  private renderInput(): VNode {\n    const { guid, disabled, placeholder, selectionMode, selectedItems, open } = this;\n    const single = isSingleLike(selectionMode);\n    const selectedItem = selectedItems[0];\n    const showLabel = !open && single && !!selectedItem;\n\n    return (\n      <span\n        class={{\n          \"input-wrap\": true,\n          \"input-wrap--single\": single,\n        }}\n      >\n        {showLabel && (\n          <span\n            class={{\n              label: true,\n              \"label--icon\": !!selectedItem?.icon,\n            }}\n            key=\"label\"\n          >\n            {getLabel(selectedItem)}\n          </span>\n        )}\n        <input\n          aria-activedescendant={this.activeDescendant}\n          aria-autocomplete=\"list\"\n          aria-controls={`${listboxUidPrefix}${guid}`}\n          aria-errormessage={IDS.validationMessage}\n          aria-expanded={toAriaBoolean(open)}\n          aria-haspopup=\"listbox\"\n          aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n          aria-label={getLabelText(this)}\n          aria-owns={`${listboxUidPrefix}${guid}`}\n          class={{\n            [CSS.input]: true,\n            \"input--single\": true,\n            \"input--hidden\": showLabel,\n            \"input--icon\": this.showingInlineIcon && !!this.placeholderIcon,\n          }}\n          data-test-id=\"input\"\n          disabled={disabled}\n          id={`${inputUidPrefix}${guid}`}\n          key=\"input\"\n          onFocus={this.comboboxFocusHandler}\n          onInput={this.inputHandler}\n          placeholder={placeholder}\n          readOnly={this.readOnly}\n          ref={(el) => (this.textInput = el as HTMLInputElement)}\n          role=\"combobox\"\n          tabindex={this.activeChipIndex === -1 ? 0 : -1}\n          type=\"text\"\n          value={this.filterText}\n        />\n      </span>\n    );\n  }\n\n  renderListBoxOptions(): VNode[] {\n    return this.filteredItems.map((item) => (\n      <li\n        aria-selected={toAriaBoolean(item.selected)}\n        id={item.guid ? `${itemUidPrefix}${item.guid}` : null}\n        role=\"option\"\n        tabindex=\"-1\"\n      >\n        {item.textLabel}\n      </li>\n    ));\n  }\n\n  renderFloatingUIContainer(): VNode {\n    const { setFloatingEl, setContainerEl, open } = this;\n    const classes = {\n      [CSS.listContainer]: true,\n      [FloatingCSS.animation]: true,\n      [FloatingCSS.animationActive]: open,\n    };\n\n    return (\n      <div\n        aria-hidden=\"true\"\n        class={{\n          \"floating-ui-container\": true,\n          \"floating-ui-container--active\": open,\n        }}\n        ref={setFloatingEl}\n      >\n        <div class={classes} ref={setContainerEl}>\n          <ul class={{ list: true, \"list--hide\": !open }}>\n            <slot />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  renderSelectedOrPlaceholderIcon(): VNode {\n    const { open, placeholderIcon, placeholderIconFlipRtl, selectedItems } = this;\n    const selectedItem = selectedItems[0];\n    const selectedIcon = selectedItem?.icon;\n    const showPlaceholder = placeholderIcon && (open || !selectedItem);\n\n    return (\n      this.showingInlineIcon && (\n        <span class=\"icon-start\" key=\"selected-placeholder-icon\">\n          <calcite-icon\n            class={{\n              [CSS.selectedIcon]: !showPlaceholder,\n              [CSS.placeholderIcon]: showPlaceholder,\n            }}\n            flipRtl={showPlaceholder ? placeholderIconFlipRtl : selectedItem.iconFlipRtl}\n            icon={showPlaceholder ? placeholderIcon : selectedIcon}\n            scale={getIconScale(this.scale)}\n          />\n        </span>\n      )\n    );\n  }\n\n  renderChevronIcon(): VNode {\n    const { open } = this;\n    return (\n      <span class=\"icon-end\" key=\"chevron\">\n        <calcite-icon\n          class={CSS.icon}\n          icon={open ? \"chevron-up\" : \"chevron-down\"}\n          scale={getIconScale(this.scale)}\n        />\n      </span>\n    );\n  }\n\n  render(): VNode {\n    const { selectionDisplay, guid, label, open, readOnly } = this;\n    const singleSelectionMode = isSingleLike(this.selectionMode);\n    const allSelectionDisplay = selectionDisplay === \"all\";\n    const singleSelectionDisplay = selectionDisplay === \"single\";\n    const fitSelectionDisplay = !singleSelectionMode && selectionDisplay === \"fit\";\n    const isClearable = !this.clearDisabled && this.value?.length > 0;\n\n    return (\n      <Host onClick={this.comboboxFocusHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-live=\"polite\"\n            class={{\n              wrapper: true,\n              \"wrapper--single\": singleSelectionMode || !this.selectedItems.length,\n              \"wrapper--active\": open,\n            }}\n            onClick={this.clickHandler}\n            onKeyDown={this.keyDownHandler}\n            ref={this.setReferenceEl}\n          >\n            {this.renderSelectedOrPlaceholderIcon()}\n            <div\n              class={{\n                \"grid-input\": true,\n                [CSS.selectionDisplayFit]: fitSelectionDisplay,\n                [CSS.selectionDisplaySingle]: singleSelectionDisplay,\n              }}\n              key=\"grid\"\n              ref={this.setChipContainerEl}\n            >\n              {!singleSelectionMode && !singleSelectionDisplay && this.renderChips()}\n              {!singleSelectionMode &&\n                !allSelectionDisplay && [\n                  this.renderSelectedIndicatorChip(),\n                  this.renderSelectedIndicatorChipCompact(),\n                  this.renderAllSelectedIndicatorChip(),\n                  this.renderAllSelectedIndicatorChipCompact(),\n                ]}\n              <label\n                class=\"screen-readers-only\"\n                htmlFor={`${inputUidPrefix}${guid}`}\n                id={`${labelUidPrefix}${guid}`}\n              >\n                {label}\n              </label>\n              {this.renderInput()}\n            </div>\n            {!readOnly && isClearable ? (\n              <XButton\n                disabled={this.disabled}\n                key=\"close-button\"\n                label={this.messages.clear}\n                scale={this.scale}\n              />\n            ) : null}\n            {!readOnly && this.renderChevronIcon()}\n          </div>\n          <ul\n            aria-labelledby={`${labelUidPrefix}${guid}`}\n            aria-multiselectable=\"true\"\n            class=\"screen-readers-only\"\n            id={`${listboxUidPrefix}${guid}`}\n            role=\"listbox\"\n            tabIndex={-1}\n          >\n            {this.renderListBoxOptions()}\n          </ul>\n          {this.renderFloatingUIContainer()}\n          <HiddenFormInputSlot component={this} />\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","import { Scale } from \"../interfaces\";\n\nexport const CSS = {\n  active: \"label--active\",\n  centerContent: \"center-content\",\n  container: \"container\",\n  custom: \"icon--custom\",\n  description: \"description\",\n  dot: \"icon--dot\",\n  filterMatch: \"filter-match\",\n  icon: \"icon\",\n  iconActive: \"icon--active\",\n  label: \"label\",\n  scale: (scale: Scale) => `scale--${scale}` as const,\n  selected: \"label--selected\",\n  shortText: \"short-text\",\n  single: \"label--single\",\n  textContainer: \"text-container\",\n  title: \"title\",\n};\n\nexport const SLOTS = {\n  contentEnd: \"content-end\",\n};\n","@include base-component();\n\n.scale--s {\n  @apply text-n2h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.1\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.2\");\n  --calcite-combobox-item-selector-icon-size: theme(\"spacing.4\");\n  --calcite-internal-combobox-item-description-font-size: var(--calcite-font-size-xs);\n}\n\n.scale--m {\n  @apply text-n1h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing[1.5]\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.3\");\n  --calcite-combobox-item-selector-icon-size: theme(\"spacing.4\");\n  --calcite-internal-combobox-item-description-font-size: var(--calcite-font-size-sm);\n}\n\n.scale--l {\n  @apply text-0h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.4\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing[2.5]\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.4\");\n  --calcite-combobox-item-selector-icon-size: theme(\"spacing.6\");\n  --calcite-internal-combobox-item-description-font-size: var(--calcite-font-size);\n}\n\n.container {\n  --calcite-combobox-item-indent-value: calc(\n    var(--calcite-combobox-item-spacing-indent) * var(--calcite-combobox-item-spacing-indent-multiplier)\n  );\n}\n\n:host(:focus) {\n  @apply shadow-none;\n}\n\n@include disabled();\n\n:host,\nul {\n  @apply m-0 flex flex-col p-0;\n}\n\n:host(:focus),\nul:focus {\n  @apply outline-none;\n}\n\n.label {\n  @apply text-color-3\n  focus-base\n  relative\n  box-border\n  flex\n  w-full\n  min-w-full\n  cursor-pointer\n  items-center\n  no-underline\n  duration-150\n  ease-in-out;\n  @include word-break();\n  justify-content: space-around;\n  gap: var(--calcite-combobox-item-spacing-unit-l);\n  padding-block: var(--calcite-combobox-item-spacing-unit-s);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n  padding-inline-start: var(--calcite-combobox-item-indent-value);\n}\n\n:host([disabled]) .label {\n  @apply cursor-default;\n}\n\n// selected state\n.label--selected {\n  @apply text-color-1;\n\n  .title {\n    @apply font-medium;\n  }\n}\n\n.label--active {\n  @apply focus-inset;\n}\n\n.label:hover,\n.label:active {\n  @apply text-color-1\n    bg-foreground-2\n    no-underline\n    shadow-none;\n}\n\n.icon {\n  @apply inline-flex\n    opacity-0\n    duration-150\n    ease-in-out;\n  color: theme(\"borderColor.color.1\");\n}\n\n.icon--custom {\n  margin-block-start: -1px;\n  @apply text-color-3;\n}\n\n.icon--active {\n  @apply text-color-1;\n}\n\n.icon--dot {\n  @apply flex justify-center;\n  min-inline-size: var(--calcite-combobox-item-selector-icon-size);\n}\n\n.icon--dot::before {\n  text-align: start;\n  content: \"\\2022\";\n}\n\n.label--active .icon {\n  @apply opacity-100;\n}\n\n.label--selected .icon {\n  @apply opacity-100;\n  color: theme(\"backgroundColor.brand\");\n}\n\n:host(:hover[disabled]) .icon {\n  @apply opacity-100;\n}\n\n.filter-match {\n  font-weight: var(--calcite-font-weight-bold);\n  color: var(--calcite-color-text-1);\n  background-color: var(--calcite-color-foreground-current);\n}\n\n.center-content {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding-block: 0;\n}\n\n.description {\n  font-size: var(--calcite-internal-combobox-item-description-font-size);\n}\n\n:host([selected]),\n:host(:hover) {\n  .description {\n    color: var(--calcite-color-text-2);\n  }\n}\n\n.short-text {\n  color: var(--calcite-color-text-3);\n  white-space: nowrap;\n}\n\n.title {\n  color: var(--calcite-color-text-1);\n}\n\n.title,\n.description,\n.short-text {\n  line-height: var(--calcite-font-line-height-relative-snug);\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { ComboboxChildElement } from \"../combobox/interfaces\";\nimport { getAncestors, getDepth, isSingleLike } from \"../combobox/utils\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding nested `calcite-combobox-item`s.\n * @slot content-end - A slot for adding non-actionable elements after the component's content.\n */\n@Component({\n  tag: \"calcite-combobox-item\",\n  styleUrl: \"combobox-item.scss\",\n  shadow: true,\n})\nexport class ComboboxItem implements ConditionalSlotComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `true`, the component is active. */\n  @Prop({ reflect: true }) active = false;\n\n  /** Specifies the parent and grandparent items, which are set on `calcite-combobox`. */\n  @Prop({ mutable: true }) ancestors: ComboboxChildElement[];\n\n  /**\n   * A description for the component, which displays below the label.\n   */\n  @Prop() description: string;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  @Watch(\"textLabel\")\n  handleComboboxItemPropsChange(): void {\n    this.calciteInternalComboboxItemChange.emit();\n  }\n\n  /**\n   * When `true`, omits the component from the `calcite-combobox` filtered search results.\n   */\n  @Prop({ reflect: true }) filterDisabled: boolean;\n\n  /**\n   * Pattern for highlighting filter text matches.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterTextMatchPattern: RegExp;\n\n  /** The `id` attribute of the component. When omitted, a globally unique identifier is used. */\n  @Prop({ reflect: true }) guid = guid();\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  @Watch(\"selected\")\n  selectedWatchHandler(): void {\n    this.calciteComboboxItemChange.emit();\n  }\n\n  /**\n   * Provides additional metadata to the component used in filtering.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-combobox`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"ancestors\"` allows multiple selections, but shows ancestors of selected items as selected, with only deepest children shown in chips.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"single\" | \"single-persist\" | \"ancestors\" | \"multiple\",\n    SelectionMode\n  > = \"multiple\";\n\n  /**\n   * The component's short heading.\n   *\n   * When provided, the short heading will be displayed in the component's selection.\n   *\n   * It is recommended to use 5 characters or fewer.\n   */\n  @Prop() shortHeading: string;\n\n  /** The component's text. */\n  @Prop() heading: string;\n\n  /**\n   * The component's text.\n   *\n   * @deprecated Use `heading` instead.\n   */\n  @Prop({ reflect: true }) textLabel!: string;\n\n  /** The component's value. */\n  @Prop() value!: any;\n\n  /** The component's label. */\n  @Prop() label: any;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteComboboxItemElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.ancestors = getAncestors(this.el);\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteComboboxItemChange: EventEmitter<void>;\n\n  /**\n   * Fires whenever a property the parent combobox needs to know about is changed.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalComboboxItemChange: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  toggleSelected(): Promise<void> {\n    const isSinglePersistSelect = this.selectionMode === \"single-persist\";\n\n    if (this.disabled || (isSinglePersistSelect && this.selected)) {\n      return;\n    }\n\n    this.selected = !this.selected;\n  }\n\n  private itemClickHandler = (): void => {\n    this.toggleSelected();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderIcon(iconPath: IconNameOrString): VNode {\n    return this.icon ? (\n      <calcite-icon\n        class={{\n          [CSS.custom]: !!this.icon,\n          [CSS.iconActive]: this.icon && this.selected,\n        }}\n        flipRtl={this.iconFlipRtl}\n        icon={this.icon || iconPath}\n        key=\"icon\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n  }\n\n  renderSelectIndicator(showDot: boolean): VNode;\n  renderSelectIndicator(showDot: boolean, iconPath: IconNameOrString): VNode;\n  renderSelectIndicator(showDot: boolean, iconPath?: IconNameOrString): VNode {\n    return showDot ? (\n      <span\n        class={{\n          [CSS.icon]: true,\n          [CSS.dot]: true,\n        }}\n      />\n    ) : (\n      <calcite-icon\n        class={{\n          [CSS.icon]: true,\n          [CSS.iconActive]: this.selected,\n        }}\n        flipRtl={this.iconFlipRtl}\n        icon={iconPath}\n        key=\"indicator\"\n        scale={getIconScale(this.scale)}\n      />\n    );\n  }\n\n  renderChildren(): VNode {\n    if (getSlotted(this.el)) {\n      return (\n        <ul key=\"default-slot-container\">\n          <slot />\n        </ul>\n      );\n    }\n\n    return null;\n  }\n\n  render(): VNode {\n    const { disabled, heading, label, textLabel, value } = this;\n    const isSingleSelect = isSingleLike(this.selectionMode);\n    const defaultIcon = isSingleSelect ? undefined : \"check\";\n    const headingText = heading || textLabel;\n    const iconPath = disabled ? undefined : defaultIcon;\n    const itemLabel = label || value;\n    const showDot = isSingleSelect && !disabled;\n\n    const classes = {\n      [CSS.label]: true,\n      [CSS.selected]: this.selected,\n      [CSS.active]: this.active,\n      [CSS.single]: isSingleSelect,\n    };\n    const depth = getDepth(this.el) + 1;\n\n    return (\n      <Host aria-hidden=\"true\" aria-label={itemLabel}>\n        <InteractiveContainer disabled={disabled}>\n          <div\n            class={{\n              [CSS.container]: true,\n              [CSS.scale(this.scale)]: true,\n            }}\n            style={{ \"--calcite-combobox-item-spacing-indent-multiplier\": `${depth}` }}\n          >\n            <li class={classes} id={this.guid} onClick={this.itemClickHandler}>\n              {this.renderSelectIndicator(showDot, iconPath)}\n              {this.renderIcon(iconPath)}\n              <div class={CSS.centerContent}>\n                <div class={CSS.title}>{this.renderTextContent(headingText)}</div>\n                {this.description ? (\n                  <div class={CSS.description}>{this.renderTextContent(this.description)}</div>\n                ) : null}\n              </div>\n              {this.shortHeading ? (\n                <div class={CSS.shortText}>{this.renderTextContent(this.shortHeading)}</div>\n              ) : null}\n              <slot name={SLOTS.contentEnd} />\n            </li>\n            {this.renderChildren()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  private renderTextContent(text: string): string | (string | VNode)[] {\n    const pattern = this.filterTextMatchPattern;\n\n    if (!pattern || !text) {\n      return text;\n    }\n\n    const parts: (string | VNode)[] = text.split(pattern);\n\n    if (parts.length > 1) {\n      // we only highlight the first match\n      parts[1] = <mark class={CSS.filterMatch}>{parts[1]}</mark>;\n    }\n\n    return parts;\n  }\n}\n","export const CSS = {\n  list: \"list\",\n  label: \"label\",\n  title: \"title\",\n};\n",".scale--s {\n  @apply text-n2h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.1\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.2\");\n}\n\n.scale--m {\n  @apply text-n1h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.2\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.3\");\n}\n\n.scale--l {\n  @apply text-0h;\n  --calcite-combobox-item-spacing-unit-l: theme(\"spacing.4\");\n  --calcite-combobox-item-spacing-unit-s: theme(\"spacing.3\");\n  --calcite-combobox-item-spacing-indent: theme(\"spacing.4\");\n}\n\n:host,\n.list {\n  @apply m-0 flex flex-col p-0;\n}\n\n:host(:focus),\n.list:focus {\n  @apply outline-none;\n}\n\n.label {\n  @apply text-color-3 box-border flex w-full min-w-0 max-w-full;\n}\n\n.title {\n  --calcite-combobox-item-indent-value: calc(\n    var(--calcite-combobox-item-spacing-indent) * var(--calcite-combobox-item-spacing-indent-multiplier)\n  );\n  border: 0 solid;\n  @apply border-b-color-3\n    text-color-2\n    word-break\n    block\n    flex-1\n    border-b\n    font-bold;\n  padding-block: var(--calcite-combobox-item-spacing-unit-l);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-s);\n  margin-inline-start: var(--calcite-combobox-item-indent-value);\n}\n\n::slotted(calcite-combobox-item-group:not([after-empty-group])) {\n  padding-block-start: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n@include base-component();\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { ComboboxChildElement } from \"../combobox/interfaces\";\nimport { getAncestors, getDepth } from \"../combobox/utils\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-combobox-item`s.\n */\n@Component({\n  tag: \"calcite-combobox-item-group\",\n  styleUrl: \"combobox-item-group.scss\",\n  shadow: true,\n})\nexport class ComboboxItemGroup {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, signifies that the group comes after another group without any children (items or sub-groups), otherwise indicates that the group comes after another group that has children. Used for styling.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) afterEmptyGroup = false;\n\n  /** Specifies the parent and grandparent `calcite-combobox-item`s, which are set on `calcite-combobox`. */\n  @Prop({ mutable: true }) ancestors: ComboboxChildElement[];\n\n  /** Specifies the title of the component. */\n  @Prop() label!: string;\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-combobox`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.ancestors = getAncestors(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteComboboxItemGroupElement;\n\n  guid: string = guid();\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { el, scale } = this;\n    const depth = getDepth(el);\n\n    return (\n      <ul\n        aria-labelledby={this.guid}\n        class={{ [CSS.list]: true, [`scale--${scale}`]: true }}\n        role=\"group\"\n      >\n        <li\n          class={{ [CSS.label]: true }}\n          id={this.guid}\n          role=\"presentation\"\n          style={{ \"--calcite-combobox-item-spacing-indent-multiplier\": `${depth}` }}\n        >\n          <span class={CSS.title}>{this.label}</span>\n        </li>\n        <slot />\n      </ul>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}