import{cV as q,aM as z,ao as N,nw as O,nx as A,L as V,R as E,A as F,gK as U,ba as W,d3 as G,gL as j,gz as K,cY as $,v as c,y as u,z as Y}from"./index-BfC8i6jT.js";import{h as Z,t as Q}from"./TileInfoViewPOT-C1_hQDJJ.js";import{d as J}from"./RenderableTile-Co1N3tXi.js";import{u as X,f as tt,s as et,n as it,d as rt}from"./WGLBrushVTLSymbol-DID28CcD.js";import{p as ot}from"./VTLMaterialManager-B10yUbF1.js";import{a as g,i as T}from"./StyleDefinition-BK3ROBTO.js";import{O as st,R as w}from"./enums-BlUEVwJR.js";import{l as P}from"./StyleRepository-BP_yUrVd.js";import{l as lt}from"./LayerView3D-B4a7j2_d.js";import{p as at}from"./TiledLayerView3D-CuiGHHTv.js";import{D as nt,G as ht}from"./terrainUtils-BzcC3xJT.js";import{y as mt}from"./LayerView-D3G_E76P.js";import"./Rect-CUzevAry.js";import"./Texture-Bq-Yp-pO.js";import"./pbf-W1xbSZIX.js";import"./rasterizingUtils-Cfb00cF6.js";import"./floatRGBA-BcMV1NFr.js";import"./constants-D5zmR9t2.js";import"./enums-BRzLM11V.js";import"./BufferObject-CLFFt1Oe.js";import"./VertexArrayObject-DJNUJ_t_.js";import"./config-MDUrh2eL.js";import"./TiledDisplayObject-wW3wbRrm.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./DisplayObject-COGNSicI.js";import"./GeometryUtils-ClkMWevA.js";import"./vec4f32-CjrfB-0a.js";import"./definitions-ByNBSgP9.js";import"./ShaderCompiler-G2XYGDs6.js";import"./programUtils-CwiKxPbA.js";import"./enums-BRXbslMp.js";import"./WaterSurface.glsl-BrdOaNHj.js";import"./RenderGeometry-BYg-7xwk.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-CZhUFo5d.js";import"./Texture-1xthaLvE.js";import"./Matrix4PassUniform-BH4JqvtO.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-D9KK83cB.js";import"./basicInterfaces-wONHx_SN.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-Bl02GO-3.js";import"./Material-CL7oq3ds.js";import"./triangle-B-TmEFJd.js";import"./sphere-BgvJtIjV.js";import"./plane-ByuX_NXR.js";import"./mathUtils-DIiwy5h7.js";import"./lineSegment-DbTVMGoh.js";import"./renderState-yUi34s5A.js";import"./requestImageUtils-CYZi7VGK.js";import"./orientedBoundingBox-Do1Vt1ct.js";import"./spatialReferenceEllipsoidUtils-6vOoKuZD.js";import"./computeTranslationToOriginAndRotation-DK7GzGeb.js";import"./ElevationProvider-BU9L4pxM.js";import"./boundedPlane-xSVxcV1_.js";import"./verticalOffsetUtils-Bdqba6xa.js";import"./hydratedFeatures-Dp0VykK3.js";import"./projectVectorToVector-C51LtB8f.js";import"./projectPointToVector-C0Qwzs7z.js";import"./frustum-Bdr-rFEQ.js";import"./weather-B3EDJgNZ.js";import"./Scheduler-DSoCN6Hr.js";import"./debugFlags-CX6JgPmI.js";import"./Float4DrawUniform-DSpHBPg2.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-bjpgk3mA.js";import"./InterleavedLayout-D5nIvpjN.js";import"./BufferView-DcMGflLe.js";import"./types-D0PSWh4d.js";import"./Intersector-Dzvq-gms.js";import"./glUtil-C6KhMg1m.js";import"./ColorMaterial.glsl-r8qsLxA-.js";import"./VertexColor.glsl-DMQrT1G9.js";import"./dehydratedFeatures-ONP9sBF3.js";import"./featureConversionUtils-CGYMoz5K.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-7PCAzCge.js";import"./DecodeSymbolColor.glsl-BR7HIChu.js";import"./earcut-BrWrA6nz.js";import"./vec3-DSC46DgP.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-en0lWBIB.js";import"./deduplicate-DD1J6YAH.js";import"./Normals-FPkG6ULP.js";import"./objectResourceUtils-AgE6Mx7R.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec4-CDid__v2.js";import"./DefaultMaterial_COLOR_GAMMA-iPR_ZT6p.js";import"./resourceUtils-Cd4X6-Sw.js";import"./CIMSymbolHelper-RNagakW-.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN6jNuTX.js";import"./BoundingBox-Dn8AJClK.js";import"./cimSymbolUtils-DS1Fp96D.js";import"./utils-C2H3A1uw.js";import"./lineStippleUtils-DdOUX39J.js";import"./projectVectorToPoint-sjRZ-2WD.js";import"./MeshComponent-D498mY_W.js";import"./imageUtils-BfjLvT3i.js";import"./MeshVertexAttributes-BD2PtWGl.js";import"./meshVertexSpaceUtils-CcfLNHym.js";import"./MeshLocalVertexSpace-DZNf3szf.js";import"./projection-PKkfrDjd.js";import"./DefaultLayouts-DkwmdUjQ.js";import"./webStyleSymbolUtils-BLz2G3ck.js";import"./Intersector-juYjkWfX.js";import"./Viewshed.glsl-D2C0nY_-.js";import"./RenderCoordsHelper-BbU_hNrx.js";import"./scaleUtils-DL5-S4xE.js";import"./viewpointUtils-t8HSs1zS.js";import"./earthUtils-B4BKKXMy.js";import"./spatialReferenceSupport-BIiDjE2t.js";import"./ElevationSamplerData-k1b1ey21.js";import"./Environment-zbroFpii.js";import"./quantityUtils-B2xRWNSM.js";import"./Program-C3FgCIV9.js";import"./ShadowCastVisualizeTechniqueConfiguration-DXK-OiGG.js";import"./euclideanLengthMeasurementUtils-D2ZslYzK.js";import"./ray-8l9wECN6.js";import"./ZoomMomentumEstimator-COZR6STZ.js";import"./labelFormatUtils-DkVwf7tJ.js";import"./FeatureTileDescriptor3D-DtDBB7rP.js";import"./elevationInfoUtils-Dkzy2V0O.js";import"./ElevationQueryTileCache-BEPYiqMG.js";import"./LayerConstants-B33OP6sh.js";import"./ElevationRange-BrgM1moX.js";import"./geometryServiceUtils-DujY2RdF.js";import"./project-gQLDAKs4.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./resources-DkiY2wAJ.js";import"./edgeProcessing-BaVy8Gc3.js";import"./testSVGPremultipliedAlpha-pEtBKrma.js";import"./RenderingContext-B8FOG7Ha.js";import"./ProgramCache-NPIMJ8lZ.js";import"./layerViewUtils-D2JqIDZ8.js";class pt{constructor(t,e,i){this._scale=t,this._shift=e,this._levelShift=i}getLevelRowColumn(t){const e=this.getLevelShift(t[0]),i=this._shift+e;return i?[t[0]-e,t[1]>>i,t[2]>>i]:t}getLevelShift(t){return Math.min(t,this._levelShift)}getOffset(t,e){let i=0,r=0;const o=this._shift+this.getLevelShift(t[0]);if(o){const s=(1<<o)-1,l=e/(this._scale*(1<<o-1));i=(t[2]&s)*l,r=(t[1]&s)*l}return[i,r]}getScale(t){return this._scale*(1<<this._shift+this.getLevelShift(t))}}class D extends Z{constructor(t,e,i,r){super(t,e,i,t.tileInfo.lods.length-1),this._memCache=r,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map,this._tileInfoView=new Q(t.tileInfo,t.fullExtent)}destroy(){super.destroy(),this._ongoingRequestToController.forEach(t=>t.abort()),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(t,e){const i=new q(t[0],t[1],t[2],0);let r=this._memCache.get(i.id);if(r!=null)return r.retain(),r;const o=await this._getVectorTileData(i);if(z(e),!this._layer)return null;if(r=this._memCache.get(i.id),r!=null)return r.retain(),r;const s=this._layer.tileInfo.getTileBounds(N(),i),l=this._tileInfoView.getTileResolution(t[0]);return r=new J(i,l,s[0],s[3],512,512,this._styleRepository,this._memCache),r.setData(o),o&&(r.retain(),this._memCache.put(i.id,r,r.usedMemory,O)),r.neededForCoverage=!0,r.transforms.tileUnitsToPixels=A(1/8,0,0,0,1/8,0,0,0,1),r}_getVectorTileData(t){const e=t.id;if(this._ongoingTileRequests.has(e))return this._ongoingTileRequests.get(e);const i=new AbortController,r={signal:i.signal},o=this._getParsedVectorTileData(t,r).then(s=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),s)).catch(()=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),null));return this._ongoingTileRequests.set(e,o),this._ongoingRequestToController.set(e,i),o}_getParsedVectorTileData(t,e){return this.fetchTileData(t,e).then(i=>this.parseTileData({key:t,data:i},e))}}const ct={vtlBackground:X,vtlFill:tt,vtlLine:et,vtlCircle:it,vtlSymbol:rt},f=1e-6;class B{constructor(t,e){this.spriteMosaic=t,this.glyphMosaic=e,this._brushCache=new Map,this._vtlMaterialManager=new ot}dispose(){this._brushCache&&(this._brushCache.forEach(t=>t.dispose()),this._brushCache=null),this._vtlMaterialManager=V(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawSymbols(t,e,i){const r=i.layers;t.renderPass="translucent";for(let o=0;o<r.length;o++){const s=r[o];if(s.type!==g.SYMBOL)continue;const l=s.getLayoutProperty("visibility");if(l&&l.getValue()===T.NONE)continue;const a=t.displayLevel;s.minzoom!==void 0&&s.minzoom>a+f||s.maxzoom!==void 0&&s.maxzoom<=a-f||(t.styleLayerUID=s.uid,t.styleLayer=s,this._drawWithBrush(t,e,"vtlSymbol"))}}drawBackground(t,e,i){if(i.backgroundBucketIds.length===0)return;const{context:r,displayLevel:o,requiredLevel:s}=t;e.key.level=s,r.setBlendingEnabled(!0),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!1),t.renderPass="background",i.backgroundBucketIds.forEach(l=>{const a=i.getLayerById(l);if(a.type!==g.BACKGROUND)return;const d=a.getLayoutProperty("visibility");d&&d.getValue()===T.NONE||a.minzoom!==void 0&&a.minzoom>o+f||a.maxzoom!==void 0&&a.maxzoom<=o-f||(t.styleLayerUID=a.uid,t.styleLayer=a,this._drawWithBrush(t,e,"vtlBackground"))})}drawTile(t,e,i,r){const{context:o}=t,s=i.layers;o.setBlendingEnabled(!1),o.setDepthTestEnabled(!0),o.setDepthWriteEnabled(!0),o.setDepthFunction(st.LEQUAL),t.renderPass="opaque";for(let l=s.length-1;l>=0;l--){const a=s[l];r!=null&&r!==a.type||this._renderStyleLayer(a,t,e,!1)}o.setDepthWriteEnabled(!1),o.setBlendingEnabled(!0),o.setBlendFunctionSeparate(w.ONE,w.ONE_MINUS_SRC_ALPHA,w.ONE,w.ONE_MINUS_SRC_ALPHA),t.renderPass="translucent";for(let l=0;l<s.length;l++){const a=s[l];r!=null&&r!==a.type||this._renderStyleLayer(a,t,e,!1)}o.setDepthTestEnabled(!1),o.bindVAO()}_renderStyleLayer(t,e,i,r){if(!(r||t&&i.layerData.has(t.uid)))return;const o=t.getLayoutProperty("visibility");if(o&&o.getValue()===T.NONE)return;const{renderPass:s}=e;let l;switch(t.type){case g.BACKGROUND:if(s!=="background")return;l="vtlBackground";break;case g.FILL:if(s!=="opaque"&&e.renderPass!=="translucent")return;l="vtlFill";break;case g.LINE:if(s!=="translucent")return;l="vtlLine";break;case g.CIRCLE:if(s!=="translucent")return;l="vtlCircle";break;case g.SYMBOL:if(s!=="translucent")return;l="vtlSymbol"}const a=e.displayLevel;if(t.minzoom!==void 0&&t.minzoom>a+f||t.maxzoom!==void 0&&t.maxzoom<=a-f)return;const{context:d}=e;d.setStencilTestEnabled(!1),d.setStencilWriteMask(0),e.styleLayerUID=t.uid,e.styleLayer=t,this._drawWithBrush(e,i,l)}_drawWithBrush(t,e,i){if(!this._brushCache.has(i)){const r=ct[i];this._brushCache.set(i,new r)}this._brushCache.get(i).drawMany(t,[e])}}let p=class extends at(lt(mt)){constructor(){super(...arguments),this._tileHandlerController=null,this.type="vector-tile-3d",this.levelShift=E("disable-feature:vtl-level-shift")?0:1}initialize(){if(this.layer.fullExtent==null)return void this.addResolvingPromise(Promise.reject(new F("vectortilelayerview:full-extent-undefined","This layer view's layer does not define a fullExtent.")));const{basemapTerrain:n,spatialReference:t,state:e,viewingMode:i}=this.view,r=i==="local"&&!nt(t)||ht.force512VTL?this.layer.tileInfo:this.layer.tileInfo.getCompatibleForVTL(256),o=this._getTileInfoSupportError(r,this.layer.fullExtent);if(o!=null)return this.addResolvingPromise(Promise.reject(o));const s=U(()=>{var h,m;return(m=(h=this.view)==null?void 0:h.basemapTerrain)==null?void 0:m.tilingSchemeLocked}).then(()=>{var S,L;const h=n.tilingScheme,m=h.pixelSize,R=m===256?1:2,y=(S=n.spatialReference)!=null&&S.isGeographic&&m===256?1:0,C=(L=n.spatialReference)!=null&&L.isGeographic||m!==256?0:1;let _;this.schemaHelper=new pt(R,y,this.levelShift+C),_=m===256||m===512?this.layer.tileInfo.getCompatibleForVTL(m):this.layer.tileInfo;const v=this._getTileInfoCompatibilityError(_,h);if(v)throw v;this.tileInfo=_});this._tileHandlerController=new AbortController;const l=this.view.resourceController;this._memCache=l.memoryController.newCache(`vtl-${this.layer.uid}`,h=>{h.release()}),this.addHandles(W(()=>this.view.qualitySettings.memoryLimit,h=>this._memCache.maxSize=Math.ceil(h/10*1048576),G));const a=new P(this.layer.currentStyleInfo.style);this._tileHandler=new D(this.layer,a,e.contentPixelRatio,this._memCache);const d=this._tileHandlerController.signal,x=dt(l),M=this._tileHandler.start({signal:d,schedule:x}),H=this._tileHandler.spriteMosaic;H.then(h=>{!j(d)&&this._tileHandler&&(this.painter=new B(h,this._tileHandler.glyphMosaic))}),M.then(()=>this._tileHandlerController=null);const b=()=>{var v;this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const h=this.layer.currentStyleInfo.style,m=((v=this.view.state)==null?void 0:v.contentPixelRatio)??1,R=new P(h),y=new D(this.layer,R,m,this._memCache),C=y.start({signal:this._tileHandlerController.signal,schedule:x}),_=y.spriteMosaic;C.then(()=>this._tileHandlerController=null),this._updatingHandles.addPromise(Promise.all([C,_]).then(([,S])=>{const L=this._tileHandler,I=this.painter;this.painter=new B(S,y.glyphMosaic),this._tileHandler=y,this.emit("data-changed"),L.destroy(),I&&I.dispose()}))};this._updatingHandles.add(()=>{var h;return{style:this.layer.currentStyleInfo.style,pixelRatio:(h=this.view.state)==null?void 0:h.contentPixelRatio}},b),this.addHandles([this.layer.on("paint-change",()=>this.emit("data-changed")),this.layer.on("style-layer-change",b),this.layer.on("delete-style-layer",b),this.layer.on("spriteSource-change",()=>this.emit("data-changed")),this.layer.on("layout-change",()=>this.emit("data-changed")),this.layer.on("style-layer-visibility-change",()=>this.emit("data-changed"))]);const k=Promise.all([s,M,H]);this.addResolvingPromise(k)}destroy(){this.painter=V(this.painter),this._tileHandlerController=K(this._tileHandlerController),this._tileHandler=$(this._tileHandler),this._memCache=$(this._memCache)}get contentZoom(){return E("disable-feature:vtl-level-shift")?1:this.view.qualitySettings.tiledSurface.vtlContentZoom}get displayLevelRange(){const n=this.tileInfo.lods,t=this.layer.minScale||n[0].scale,e=this.layer.maxScale||n[n.length-1].scale,i=this.levelRangeFromScaleRange(t,e);return this.layer.maxScale?i.maxLevel++:i.maxLevel+=this.levelShift,i}get dataScaleRange(){const n=this.tileInfo.lods;return{minScale:n[0].scale,maxScale:n[n.length-1].scale}}get dataLevelRange(){const{minScale:n,maxScale:t}=this.dataScaleRange,e=this.levelRangeFromScaleRange(n,t);return e.minLevel===1&&this.tileInfo.size[0]===256&&(e.minLevel=0),e.maxLevel+=this.levelShift,e}async fetchTile(n,t){const e=this.schemaHelper.getLevelRowColumn(n);return this._tileHandler.getVectorTile(e,t)}};c([u()],p.prototype,"layer",void 0),c([u()],p.prototype,"levelShift",void 0),c([u()],p.prototype,"contentZoom",null),c([u()],p.prototype,"displayLevelRange",null),c([u()],p.prototype,"tileInfo",void 0),c([u()],p.prototype,"dataScaleRange",null),c([u()],p.prototype,"dataLevelRange",null),c([u()],p.prototype,"updatingProgressValue",void 0),p=c([Y("esri.views.3d.layers.VectorTileLayerView3D")],p);const ji=p;function dt(n){return t=>n.immediate.schedule(t)}export{ji as default};
