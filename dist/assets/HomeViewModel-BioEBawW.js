import{h2 as l,P as r,A as a,v as e,y as o,gf as h,z as g}from"./index-BfC8i6jT.js";let i=class extends l(r.EventedAccessor){constructor(t){super(t),this._initialViewpoint=null,this._goingHomeController=null,this.go=this.go.bind(this)}destroy(){this._cancelGo(),this.view=null}get state(){var t;return(t=this.view)!=null&&t.ready?this._goingHomeController?"going-home":"ready":"disabled"}set view(t){this._initialViewpoint=null,this._set("view",t),t&&t.when().then(()=>{this.view===t&&(this._initialViewpoint=t.viewpoint.clone(),this.notifyChange("viewpoint"))})}get viewpoint(){return this._get("viewpoint")||this._initialViewpoint}set viewpoint(t){this._set("viewpoint",t)}async go(){var n,s;if(!((n=this.view)!=null&&n.ready))throw new a("home:disabled-state","Cannot go when disabled.");this._cancelGo(),this.emit("go");const t=new AbortController;this._goingHomeController=t;try{await((s=this.view)==null?void 0:s.when()),await this.callGoTo({target:this.viewpoint,options:{signal:t.signal}})}catch{}this._goingHomeController=null}cancelGo(){this._cancelGo()}_cancelGo(){const{_goingHomeController:t}=this;t&&t.abort(),this._goingHomeController=null}};e([o()],i.prototype,"_goingHomeController",void 0),e([o({readOnly:!0})],i.prototype,"state",null),e([o()],i.prototype,"view",null),e([o({type:h})],i.prototype,"viewpoint",null),e([o()],i.prototype,"go",null),e([o()],i.prototype,"cancelGo",null),i=e([g("esri.widgets.Home.HomeViewModel")],i);const c=i;export{c as default};
