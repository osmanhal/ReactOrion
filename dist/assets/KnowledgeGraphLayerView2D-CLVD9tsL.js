import{bL as a,dj as o,v as i,y as s,dh as n,z as l}from"./index-BfC8i6jT.js";import{f as h}from"./LayerView2D-vCOQCX0d.js";import{y as d}from"./LayerView-D3G_E76P.js";import"./Container-D8Z8PR0N.js";import"./EffectView-BHVg_MGi.js";import"./DisplayObject-COGNSicI.js";import"./highlightReasons-Xh2OTEQT.js";import"./definitions-ByNBSgP9.js";import"./enums-BlUEVwJR.js";import"./Texture-Bq-Yp-pO.js";import"./ClipRect-QwkcqybV.js";import"./layerViewUtils-D2JqIDZ8.js";let t=class extends h(d){constructor(e){super(e),this.layerViews=new a}set layerViews(e){this._set("layerViews",o(e,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((e,r)=>e+r.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(e){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,r)=>this.container.addChildAt(e.container,r))}};i([s({cast:n})],t.prototype,"layerViews",null),i([s({readOnly:!0})],t.prototype,"updatingProgress",null),t=i([l("esri.views.2d.layers.KnowledgeGraphLayerView2D")],t);const A=t;export{A as default};
