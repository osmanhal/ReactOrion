import{A as u,cU as W,ba as l,c8 as T,fa as A,aR as E,h6 as x,ft as L,eq as M,fs as I,J as V,v as y,y as b,z as D,ep as f}from"./index-BfC8i6jT.js";import{n as P}from"./projectVectorToVector-C51LtB8f.js";import{l as F}from"./LayerView3D-B4a7j2_d.js";import{l as $,o,i as w}from"./Viewshed.glsl-D2C0nY_-.js";import{t as C}from"./WaterSurface.glsl-BrdOaNHj.js";import{i as R}from"./PopupSceneLayerView--Zyn-9fl.js";import{y as U}from"./LayerView-D3G_E76P.js";import{c as z}from"./layerViewUtils-D2JqIDZ8.js";import"./projectPointToVector-C0Qwzs7z.js";import"./boundedPlane-xSVxcV1_.js";import"./sphere-BgvJtIjV.js";import"./plane-ByuX_NXR.js";import"./mathUtils-DIiwy5h7.js";import"./lineSegment-DbTVMGoh.js";import"./RenderCoordsHelper-BbU_hNrx.js";import"./spatialReferenceEllipsoidUtils-6vOoKuZD.js";import"./projectVectorToPoint-sjRZ-2WD.js";import"./ElevationProvider-BU9L4pxM.js";import"./verticalOffsetUtils-Bdqba6xa.js";import"./orientedBoundingBox-Do1Vt1ct.js";import"./computeTranslationToOriginAndRotation-DK7GzGeb.js";import"./scaleUtils-DL5-S4xE.js";import"./viewpointUtils-t8HSs1zS.js";import"./frustum-Bdr-rFEQ.js";import"./earthUtils-B4BKKXMy.js";import"./spatialReferenceSupport-BIiDjE2t.js";import"./ElevationSamplerData-k1b1ey21.js";import"./terrainUtils-BzcC3xJT.js";import"./Environment-zbroFpii.js";import"./weather-B3EDJgNZ.js";import"./quantityUtils-B2xRWNSM.js";import"./interfaces-B8ge7Jg9.js";import"./Texture-1xthaLvE.js";import"./Matrix4PassUniform-BH4JqvtO.js";import"./BindType-BmZEZMMh.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-D9KK83cB.js";import"./enums-BlUEVwJR.js";import"./Texture-Bq-Yp-pO.js";import"./basicInterfaces-wONHx_SN.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-Bl02GO-3.js";import"./Material-CL7oq3ds.js";import"./triangle-B-TmEFJd.js";import"./renderState-yUi34s5A.js";import"./requestImageUtils-CYZi7VGK.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./RenderGeometry-BYg-7xwk.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-CZhUFo5d.js";import"./hydratedFeatures-Dp0VykK3.js";import"./Scheduler-DSoCN6Hr.js";import"./debugFlags-CX6JgPmI.js";import"./Float4DrawUniform-DSpHBPg2.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-bjpgk3mA.js";import"./InterleavedLayout-D5nIvpjN.js";import"./BufferView-DcMGflLe.js";import"./types-D0PSWh4d.js";import"./floatRGBA-BcMV1NFr.js";import"./Intersector-Dzvq-gms.js";import"./glUtil-C6KhMg1m.js";import"./VertexArrayObject-DJNUJ_t_.js";import"./BufferObject-CLFFt1Oe.js";import"./Program-C3FgCIV9.js";import"./ShadowCastVisualizeTechniqueConfiguration-DXK-OiGG.js";import"./euclideanLengthMeasurementUtils-D2ZslYzK.js";import"./ray-8l9wECN6.js";import"./ZoomMomentumEstimator-COZR6STZ.js";import"./ColorMaterial.glsl-r8qsLxA-.js";import"./VertexColor.glsl-DMQrT1G9.js";import"./labelFormatUtils-DkVwf7tJ.js";import"./FeatureTileDescriptor3D-DtDBB7rP.js";import"./elevationInfoUtils-Dkzy2V0O.js";import"./ElevationQueryTileCache-BEPYiqMG.js";import"./LayerConstants-B33OP6sh.js";import"./Intersector-juYjkWfX.js";import"./ElevationRange-BrgM1moX.js";import"./geometryServiceUtils-DujY2RdF.js";import"./project-gQLDAKs4.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./DefaultMaterial_COLOR_GAMMA-iPR_ZT6p.js";import"./resourceUtils-Cd4X6-Sw.js";import"./objectResourceUtils-AgE6Mx7R.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec3-DSC46DgP.js";import"./vec4-CDid__v2.js";import"./DecodeSymbolColor.glsl-BR7HIChu.js";import"./RenderableTile-Co1N3tXi.js";import"./enums-BRzLM11V.js";import"./config-MDUrh2eL.js";import"./TiledDisplayObject-wW3wbRrm.js";import"./DisplayObject-COGNSicI.js";import"./StyleDefinition-BK3ROBTO.js";import"./enums-BRXbslMp.js";import"./GeometryUtils-ClkMWevA.js";import"./Normals-FPkG6ULP.js";import"./resources-DkiY2wAJ.js";import"./edgeUtils-7PCAzCge.js";import"./edgeProcessing-BaVy8Gc3.js";import"./deduplicate-DD1J6YAH.js";import"./testSVGPremultipliedAlpha-pEtBKrma.js";import"./RenderingContext-B8FOG7Ha.js";import"./ProgramCache-NPIMJ8lZ.js";import"./imageUtils-BfjLvT3i.js";import"./dehydratedFeatures-ONP9sBF3.js";import"./featureConversionUtils-CGYMoz5K.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./earcut-BrWrA6nz.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-en0lWBIB.js";import"./CIMSymbolHelper-RNagakW-.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN6jNuTX.js";import"./definitions-ByNBSgP9.js";import"./Rect-CUzevAry.js";import"./BoundingBox-Dn8AJClK.js";import"./cimSymbolUtils-DS1Fp96D.js";import"./utils-C2H3A1uw.js";import"./lineStippleUtils-DdOUX39J.js";import"./MeshComponent-D498mY_W.js";import"./MeshVertexAttributes-BD2PtWGl.js";import"./meshVertexSpaceUtils-CcfLNHym.js";import"./MeshLocalVertexSpace-DZNf3szf.js";import"./projection-PKkfrDjd.js";import"./DefaultLayouts-DkwmdUjQ.js";import"./webStyleSymbolUtils-BLz2G3ck.js";import"./popupUtils-6OYxcFTS.js";var s;(function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"})(s||(s={}));const m=f(),S=f();let p=class extends R(F(U)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this.ignoresMemoryFactor=!0,this._dbgFlags=new Set}get baseUrl(){var e;return((e=this.layer.parsedUrl)==null?void 0:e.path)??""}get wasmLayerId(){return this._wasmLayerId}initialize(){var d;if(this._dbgFlags.add(s.Error),this.view.viewingMode!=="local")throw new u("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(!((d=this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat)!=null&&d.textureFloat))throw new u("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const e=this.layer.spatialReference;if(!W(e,this.view.spatialReference))throw new u("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const t=this.layer.currentVariableId,r=this.layer.getVolume(t),a=this.layer.getVariable(t);if(r!=null&&a!=null){const h=r.dimensions[0],i=r.dimensions[1],c=r.zDimension;if(c>1){const g=r.dimensions[c],v=h.size*i.size*g.size;let _=1;switch(a.renderingFormat.type){case"Int16":case"UInt16":_=2;break;case"Int32":case"UInt32":case"Float32":_=4}this._futureMemory=_*v}}const n=$(this).then(h=>{this._wasmLayerId=h,this._suspendedHandle=l(()=>this.suspended,i=>{const c=o(this.view);c&&c.setEnabled(this,!i)},T),this.addHandles([l(()=>this.layer.renderMode,i=>this._pushRenderModeToWasm(i)),l(()=>this.layer.currentVariableId,i=>this._pushCurrentVariableIdToWasm(i)),l(()=>this.layer.getSections(),i=>this._pushSectionsToWasm(i)),l(()=>this.layer.getVariableStyles(),i=>this._pushVariableStylesToWasm(i)),l(()=>this.layer.getVolumeStyles(),i=>this._pushVolumeStylesToWasm(i)),l(()=>this.layer.enableDynamicSections,i=>this._pushEnableDynamicSectionsToWasm(i)),l(()=>this.layer.enableIsosurfaces,i=>this._pushEnableIsosurfacesToWasm(i)),l(()=>this.layer.enableSections,i=>this._pushEnableSectionsToWasm(i)),l(()=>this.layer.enableSlices,i=>this._pushEnableSlicesToWasm(i)),l(()=>[this.layer.timeOffset,this.layer.timeExtent,this.layer.useViewTime],()=>this._updateLayerTimeProperties()),l(()=>this.slicePlaneEnabled,i=>this._pushAnalysisSliceToWasm(i,this.view.slicePlane)),l(()=>this.view.slicePlane,i=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,i))])}).catch(h=>{if(w(this),this._wasmLayerId=-1,h===-1)throw new u("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(h===-2)throw new u("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(n)}destroy(){w(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){const e=o(this.view);return!(this._wasmLayerId<0||e==null)&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}get usedMemory(){return this._usedMemory}get unloadedMemory(){return this._futureMemory}get performanceInfo(){return new C(this.usedMemory)}get visibleAtCurrentScale(){return z(this.layer.effectiveScaleRange,this.view.terrainScale)}whenGraphicBounds(e,t){const r=e.attributes["Voxel.WorldPosition"];if(r){const a=A(),n=JSON.parse(r);if(P(n,this.view.renderSpatialReference,S,this.view.spatialReference||E.WGS84))return x(a,S),Promise.resolve({boundingBox:a,screenSpaceObjects:[]})}return Promise.reject()}setUsedMemory(e){this._usedMemory=e,this._futureMemory=0}captureFrustum(){const e=o(this.view);e==null||e.captureFrustum()}toggleFullVolumeExtentDraw(){const e=o(this.view);e==null||e.toggleFullVolumeExtentDraw(this)}getLayerTimes(){const e=o(this.view);return(e==null?void 0:e.getLayerTimes(this))??[]}getCurrentLayerTimeIndex(){const e=o(this.view);return(e==null?void 0:e.getCurrentLayerTimeIndex(this))??0}_pushRenderModeToWasm(e){const t=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setRenderMode(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(e){const t=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setStaticSections(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(e){const t=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setCurrentVariable(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(e){const t=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setVariableStyles(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!")}_accountForEnableSlices(e,t){const r=t??this.layer.enableSlices;for(let a=0;a<e.length;++a){const n=e[a];for(const d of n.slices)d.enabled=d.enabled&&r}}_pushVolumeStylesToWasm(e){const t=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t&&(this._accountForEnableSlices(e,null),t.setVolumeStyles(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(e,t){const r=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(r?"have WASM":"don't have WASM!!!"));let a=!1;if(r){if(t){const n=t.origin;L(m,t.basis1,t.basis2),M(m,m),a=r.setAnalysisSlice(this,e,n,m)}else I(m,0,0,1),a=r.setAnalysisSlice(this,!1,m,m);a||this._dbg(s.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_updateLayerTimeProperties(){const e=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._updateLayerTimeProperties() called, "+(e?"have WASM":"don't have WASM!!!")),e&&e.updateLayerTimeProperties(this)}_pushEnableDynamicSectionsToWasm(e){const t=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setEnableDynamicSections(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!")}_pushEnableSlicesToWasm(e){const t=o(this.view);if(this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t){const r=this.layer.getVolumeStyles();this._accountForEnableSlices(r,e),t.setVolumeStyles(this,r)||this._dbg(s.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(e){const t=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setEnableIsosurfaces(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!")}_pushEnableSectionsToWasm(e){const t=o(this.view);this._dbg(s.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(t?"have WASM":"don't have WASM!!!")),t!=null&&t.setEnableSections(this,e)||this._dbg(s.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!")}async whenGraphicAttributes(e,t){return e}_dbg(e,t){this._dbgFlags.has(e)&&(e===s.Error?V.getLogger(this).error(t):V.getLogger(this).warn(t))}};y([b()],p.prototype,"layer",void 0),y([b()],p.prototype,"baseUrl",null),y([b({type:Boolean})],p.prototype,"slicePlaneEnabled",void 0),y([b({readOnly:!0})],p.prototype,"visibleAtCurrentScale",null),p=y([D("esri.views.3d.layers.VoxelLayerView3D")],p);const pi=p;export{pi as default};
