import{O as M,J as R,ba as S,cY as q,bm as U,v as h,y as x,z as I}from"./index-BfC8i6jT.js";import{a as w}from"./BitmapContainer-pBIB0yUI.js";import{f as E}from"./LayerView2D-vCOQCX0d.js";import{_ as H}from"./ExportStrategy-fadrMhum.js";import{y as W}from"./LayerView-D3G_E76P.js";import{i as z}from"./RefreshableLayerView-T2pK9W1H.js";import{m as A}from"./WMSLayerView-D0xmotV4.js";import"./WGLContainer-BLE0Uw_u.js";import"./definitions-ByNBSgP9.js";import"./LabelMetric-BmRa1Bis.js";import"./enums-BRXbslMp.js";import"./Texture-Bq-Yp-pO.js";import"./enums-BlUEVwJR.js";import"./Program-C3FgCIV9.js";import"./BufferObject-CLFFt1Oe.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-Dn8AJClK.js";import"./VertexArrayObject-DJNUJ_t_.js";import"./WGLBrushVTLSymbol-DID28CcD.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Cd8GU6R3.js";import"./TiledDisplayObject-wW3wbRrm.js";import"./DisplayObject-COGNSicI.js";import"./vec3f32-Cw9Q6TO_.js";import"./Container-D8Z8PR0N.js";import"./EffectView-BHVg_MGi.js";import"./highlightReasons-Xh2OTEQT.js";import"./earcut-BrWrA6nz.js";import"./featureConversionUtils-CGYMoz5K.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./ClipRect-QwkcqybV.js";import"./layerViewUtils-D2JqIDZ8.js";import"./Bitmap-jrFm-wR1.js";import"./ExportWMSImageParameters-BkKv2rZy.js";import"./timeSupport-OHicj2My.js";import"./timeUtils-BWG3K3Ml.js";import"./tagSymbols-BPcGfZon.js";let o=class extends A(z(E(W))){constructor(){super(...arguments),this.bitmapContainer=new w}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(e=>{M(e)||R.getLogger(this).error(e)})}attach(){const{layer:t}=this,{imageMaxHeight:e,imageMaxWidth:r}=t;this.bitmapContainer=new w,this.container.addChild(this.bitmapContainer),this.strategy=new H({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(S(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=q(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:e,bitmapContainer:r}=this,{x:a,y:p}=t,{spatialReference:b}=e;let i,m=0,d=0;if(r.children.some($=>{const{width:c,height:g,resolution:y,x:s,y:n}=$,l=s+y*c,f=n-y*g;return a>=s&&a<=l&&p<=n&&p>=f&&(i=new U({xmin:s,ymin:f,xmax:l,ymax:n,spatialReference:b}),m=c,d=g,!0)}),!i)return null;const u=i.width/m,v=Math.round((a-i.xmin)/u),C=Math.round((i.ymax-p)/u);return{extent:i,width:m,height:d,x:v,y:C}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,a){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,...a})}};h([x()],o.prototype,"strategy",void 0),h([x()],o.prototype,"updating",void 0),o=h([I("esri.views.2d.layers.WMSLayerView2D")],o);const $t=o;export{$t as default};
