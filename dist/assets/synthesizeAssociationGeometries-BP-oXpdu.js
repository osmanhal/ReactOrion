import{v as r,y as a,z as u,w as y,q as d,u as h,s as l,U as x}from"./index-BfC8i6jT.js";import{d as G}from"./Association-CHrs0dGj.js";import"./UtilityNetwork--bZaYIGn.js";let i=class extends y{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};r([a({type:Boolean,json:{write:!0}})],i.prototype,"maxGeometryCountExceeded",void 0),r([a({type:[G],json:{write:!0}})],i.prototype,"associations",void 0),i=r([u("esri.rest.networks.support.AssociationGeometriesResult")],i);const $=i;async function A(o,t,e){const s=d(o),n={...t.toJSON(),f:"json"},p=h({...s.query,...n});e?e.method="post":e={method:"post"};const c=l(p,e),m=`${s.path}/synthesizeAssociationGeometries`;return x(m,c).then(f=>w(f,t.outSpatialReference))}function w(o,t){const{data:e}=o,s=$.fromJSON(e);if(t)for(const n of s.associations)n.geometry.spatialReference=t.clone();return s}export{A as synthesizeAssociationGeometries};
