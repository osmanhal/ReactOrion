import{O as p,J as m,v as e,y as o,z as s}from"./index-BfC8i6jT.js";import{a as n}from"./BitmapContainer-pBIB0yUI.js";import{f as h}from"./LayerView2D-vCOQCX0d.js";import{_ as d}from"./ExportStrategy-fadrMhum.js";import{y}from"./LayerView-D3G_E76P.js";import{i as c}from"./RefreshableLayerView-T2pK9W1H.js";import"./WGLContainer-BLE0Uw_u.js";import"./definitions-ByNBSgP9.js";import"./LabelMetric-BmRa1Bis.js";import"./enums-BRXbslMp.js";import"./Texture-Bq-Yp-pO.js";import"./enums-BlUEVwJR.js";import"./Program-C3FgCIV9.js";import"./BufferObject-CLFFt1Oe.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-Dn8AJClK.js";import"./VertexArrayObject-DJNUJ_t_.js";import"./WGLBrushVTLSymbol-DID28CcD.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Cd8GU6R3.js";import"./TiledDisplayObject-wW3wbRrm.js";import"./DisplayObject-COGNSicI.js";import"./vec3f32-Cw9Q6TO_.js";import"./Container-D8Z8PR0N.js";import"./EffectView-BHVg_MGi.js";import"./highlightReasons-Xh2OTEQT.js";import"./earcut-BrWrA6nz.js";import"./featureConversionUtils-CGYMoz5K.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./ClipRect-QwkcqybV.js";import"./layerViewUtils-D2JqIDZ8.js";import"./Bitmap-jrFm-wR1.js";let t=class extends c(h(y)){update(r){this._strategy.update(r).catch(i=>{p(i)||m.getLogger(this).error(i)}),this.notifyChange("updating")}attach(){this._bitmapContainer=new n,this.container.addChild(this._bitmapContainer),this._strategy=new d({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this._strategy.destroy(),this._strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(r,i,a){return this.layer.fetchImageBitmap(r,i,a)}async doRefresh(){this.requestUpdate()}isUpdating(){return this._strategy.updating||this.updateRequested}};e([o()],t.prototype,"_strategy",void 0),e([o()],t.prototype,"updating",void 0),t=e([s("esri.views.2d.layers.BaseDynamicLayerView2D")],t);const X=t;export{X as default};
