import{aM as p,A as s,X as i}from"./index-BfC8i6jT.js";import{l as n}from"./MeshVertexAttributes-BD2PtWGl.js";import{M as a}from"./vertexSpaceConversion-Bg4vy5id.js";import"./spatialReferenceEllipsoidUtils-6vOoKuZD.js";import"./computeTranslationToOriginAndRotation-DK7GzGeb.js";import"./projectPointToVector-C0Qwzs7z.js";import"./meshVertexSpaceUtils-CcfLNHym.js";import"./MeshLocalVertexSpace-DZNf3szf.js";import"./vec3-DSC46DgP.js";import"./projection-PKkfrDjd.js";import"./DoubleArray-CZhUFo5d.js";import"./BufferView-DcMGflLe.js";import"./vec4-CDid__v2.js";async function y(t,r,m){await Promise.resolve(),p(m);const o=a(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new n({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{y as convertMeshVertexSpace};
