function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{y as I}from"./BufferView-DcMGflLe.js";import{c as O,o as u,u as y,v as m}from"./Matrix4PassUniform-BH4JqvtO.js";import{e as P}from"./basicInterfaces-wONHx_SN.js";import{o as b,u as S,r as A,d as C,A as w}from"./VertexColor.glsl-DMQrT1G9.js";import{u as x}from"./Material-CL7oq3ds.js";import{o as D,a as N,P as R,c as V,u as L,g as l,e as M,x as F,i as j,r as U,j as z,k as B,a2 as G,l as W,s as k,a3 as H,a4 as q,a5 as Q,a6 as J,m as K,E as g,a8 as X}from"./Texture-1xthaLvE.js";import{s as Y}from"./Util-D9KK83cB.js";import{e as p}from"./VertexAttribute-BnAa5VW0.js";import{f as Z}from"./DefaultLayouts-DkwmdUjQ.js";import{e as ee}from"./ColorMaterial.glsl-r8qsLxA-.js";import{_ as te,v as i}from"./index-BfC8i6jT.js";import{o as c}from"./interfaces-B8ge7Jg9.js";import{r as o}from"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import{R as E}from"./enums-BlUEVwJR.js";import{s as se,S as ae,h as re,o as ie,_ as oe}from"./renderState-yUi34s5A.js";import"./BindType-BmZEZMMh.js";function T(s){const e=new D,{vertex:t,fragment:a}=e;return N(t,s),e.include(b,s),e.attributes.add(p.POSITION,"vec3"),e.attributes.add(p.UV0,"vec2"),s.perspectiveInterpolation&&e.attributes.add(p.PERSPECTIVEDIVIDE,"float"),e.varyings.add("vpos","vec3"),s.multipassEnabled&&e.varyings.add("depth","float"),t.code.add(c`
    void main(void) {
      vpos = position;
      ${s.multipassEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}
      vTexCoord = uv0;
      gl_Position = transformPosition(proj, view, vpos);

      ${s.perspectiveInterpolation?"gl_Position *= perspectiveDivide;":""}
    }
  `),e.include(R,s),e.include(V,s),a.uniforms.add(new L("tex",n=>n.texture),new O("opacity",n=>n.opacity)),e.varyings.add("vTexCoord","vec2"),s.transparencyPassType===l.ColorAlpha&&(e.outputs.add("fragColor","vec4",0),e.outputs.add("fragAlpha","float",1)),a.include(M),a.code.add(c`
    void main() {
      discardBySlice(vpos);
      ${s.multipassEnabled?"terrainDepthTest(depth);":""}
      fragColor = texture(tex, vTexCoord) * opacity;

      if (fragColor.a < ${c.float(F)}) {
        discard;
      }

      fragColor = highlightSlice(fragColor, vpos);
      ${s.transparencyPassType===l.ColorAlpha?c`
              fragColor = premultiplyAlpha(fragColor);
              fragAlpha = fragColor.a;`:""}
      ${s.output===u.ObjectAndLayerIdColor?c`
              fragColor = vec4(0,0,0,1);`:""}
    }
    `),e}const ne=Object.freeze(Object.defineProperty({__proto__:null,build:T},Symbol.toStringTag,{value:"Module"}));class _ extends U{initializeProgram(e){return new z(e.rctx,_.shader.get().build(this.configuration),$)}_setPipelineState(e,t){const a=this.configuration,n=e===l.NONE,d=e===l.FrontFace;return ae({blending:a.output===u.Color&&a.transparent?n?pe:B(e):null,culling:re(a.cullFace),depthTest:{func:G(e)},depthWrite:n?a.writeDepth?ie:null:W(e),drawBuffers:k(e),colorWrite:oe,stencilWrite:a.hasOccludees?H:null,stencilTest:a.hasOccludees?t?q:Q:null,polygonOffset:n||d?null:J(a.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0),this._setPipelineState(this.configuration.transparencyPassType,!1)}getPipeline(e){return e?this._occludeePipelineState:super.getPipeline()}}_.shader=new j(ne,()=>te(()=>Promise.resolve().then(()=>de),void 0));const pe=se(E.ONE,E.ONE_MINUS_SRC_ALPHA);class r extends K{constructor(){super(...arguments),this.output=u.Color,this.cullFace=P.None,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.transparencyPassType=l.NONE,this.multipassEnabled=!1,this.cullAboveGround=!1,this.perspectiveInterpolation=!0}}i([o({count:u.COUNT})],r.prototype,"output",void 0),i([o({count:P.COUNT})],r.prototype,"cullFace",void 0),i([o()],r.prototype,"hasSlicePlane",void 0),i([o()],r.prototype,"transparent",void 0),i([o()],r.prototype,"enableOffset",void 0),i([o()],r.prototype,"writeDepth",void 0),i([o()],r.prototype,"hasOccludees",void 0),i([o({count:l.COUNT})],r.prototype,"transparencyPassType",void 0),i([o()],r.prototype,"multipassEnabled",void 0),i([o()],r.prototype,"cullAboveGround",void 0),i([o()],r.prototype,"perspectiveInterpolation",void 0),i([o({constValue:!1})],r.prototype,"occlusionPass",void 0);const $=new Map([[p.POSITION,0],[p.UV0,2],[p.PERSPECTIVEDIVIDE,3]]);let Ce=class extends ee{constructor(e){super(e,new ue),this.supportsEdges=!0,this.produces=new Map([[g.OPAQUE_MATERIAL,t=>y(t)||m(t)&&!this.parameters.transparent],[g.TRANSPARENT_MATERIAL,t=>m(t)&&this.parameters.transparent&&this.parameters.writeDepth],[g.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,t=>m(t)&&this.parameters.transparent&&!this.parameters.writeDepth],[g.DRAPED_MATERIAL,t=>m(t)||y(t)]]),this._vertexAttributeLocations=$,this._configuration=new r}getConfiguration(e,t){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.enableOffset=t.camera.relativeElevation<X,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration.perspectiveInterpolation=this.parameters.perspectiveInterpolation,this._configuration}createGLMaterial(e){return new le(e)}createBufferWriter(){const e=Z.clone();return this.parameters.perspectiveInterpolation&&e.f32(p.PERSPECTIVEDIVIDE),new ce(e)}};class le extends S{constructor(e){super({...e,...e.material.parameters})}_updateParameters(e){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.ensureTechnique(_,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&(this._material.setParameters({hasOccludees:e.hasOccludees}),this._updateParameters(e))}beginSlot(e){return this._output===u.Color&&this._updateOccludeeState(e),this._updateParameters(e)}}class ce extends A{write(e,t,a,n,d){for(const h of this.vertexBufferLayout.fields.keys()){const f=a.attributes.get(h);if(f)if(h===p.PERSPECTIVEDIVIDE){Y(f.size===1);const v=n.getField(h,I);v&&C(f,v,d)}else w(h,f,e,t,n,d)}}}class ue extends x{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=P.None,this.hasOccludees=!1,this.opacity=1,this.textureId=null,this.initTextureTransparent=!0,this.perspectiveInterpolation=!1}}const de=Object.freeze(Object.defineProperty({__proto__:null,build:T},Symbol.toStringTag,{value:"Module"}));export{Ce as g};
