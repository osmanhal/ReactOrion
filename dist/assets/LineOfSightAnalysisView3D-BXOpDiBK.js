import{v as s,y as a,z as D,W as k,ep as v,X as W,fA as ut,ht as Ut,oS as Nt,aW as Bt,ga as Wt,fD as qt,bw as At,fB as O,eq as dt,fx as j,fw as U,P as Et,cX as ht,jq as et,fV as Jt,eC as B,op as x,J as it,dc as q,bY as J,c8 as R,gz as gt,f0 as Xt,c7 as Zt,az as Ht,hP as mt,ek as Kt,p0 as vt,pV as Yt,a1 as m,iM as Qt,no as te,ba as Dt,o_ as G,d3 as ee,cY as $,pW as ot,lh as _t,dT as yt,mX as A,eA as ie,bL as ne}from"./index-BfC8i6jT.js";import{s as oe}from"./AnalysisView3D-C1_98pGP.js";import{t as st,u as ft,f as bt}from"./LineOfSightAnalysisTarget-Br7h41rv.js";import{a as se}from"./WaterSurface.glsl-BrdOaNHj.js";import{p as re,m as Mt,b as X,k as ct}from"./sphere-BgvJtIjV.js";import{b as Ct,a as ae,m as le}from"./elevationInfoUtils-Dkzy2V0O.js";import{t as ue}from"./plane-ByuX_NXR.js";import{M as de}from"./dehydratedFeatures-ONP9sBF3.js";import{a as ce,p as pe,m as Q,w as he,V as ge}from"./ElevationQueryTileCache-BEPYiqMG.js";import{g as me}from"./ray-8l9wECN6.js";import{n as ve}from"./Intersector-Dzvq-gms.js";import{T as _e,e as nt,i as z}from"./ElevationProvider-BU9L4pxM.js";import{t as wt}from"./projectionUtils-CrvVNHJ0.js";import{F as Tt,I as Z}from"./Scheduler-DSoCN6Hr.js";import{v as ye,h as fe}from"./lineSegment-DbTVMGoh.js";import{e as kt,f as xt,a as zt}from"./RenderObject-7dW_PzsM.js";import{r as Ft}from"./manipulatorUtils-BKg_Gg0_.js";import{s as Gt}from"./RenderGeometry-BYg-7xwk.js";import{c as be}from"./Laserlines.glsl-OZfEMRog.js";import{o as Ce}from"./ShadedColorMaterial.glsl-C1RM8vdQ.js";import{p as Ot}from"./InteractiveToolBase-Q2z5Ov3P.js";import{f as rt}from"./LineVisualElement-BUWUDewt.js";import{x as It}from"./PointVisualElement-C-C-Xm82.js";import"./Material-CL7oq3ds.js";import{a as we,v as Te}from"./analysisViewUtils-sqkXBjZr.js";import"./persistable-D1kMTcLV.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-btAfE1S2.js";import"./ColorMaterial.glsl-r8qsLxA-.js";import"./BufferView-DcMGflLe.js";import"./Texture-1xthaLvE.js";import"./Matrix4PassUniform-BH4JqvtO.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-D9KK83cB.js";import"./enums-BlUEVwJR.js";import"./Texture-Bq-Yp-pO.js";import"./basicInterfaces-wONHx_SN.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-Bl02GO-3.js";import"./triangle-B-TmEFJd.js";import"./renderState-yUi34s5A.js";import"./requestImageUtils-CYZi7VGK.js";import"./InterleavedLayout-D5nIvpjN.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-DMQrT1G9.js";import"./projectVectorToVector-C51LtB8f.js";import"./projectPointToVector-C0Qwzs7z.js";import"./hydratedFeatures-Dp0VykK3.js";import"./floatRGBA-BcMV1NFr.js";import"./orientedBoundingBox-Do1Vt1ct.js";import"./spatialReferenceEllipsoidUtils-6vOoKuZD.js";import"./computeTranslationToOriginAndRotation-DK7GzGeb.js";import"./featureConversionUtils-CGYMoz5K.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-7PCAzCge.js";import"./DecodeSymbolColor.glsl-BR7HIChu.js";import"./Float4DrawUniform-DSpHBPg2.js";import"./earcut-BrWrA6nz.js";import"./DoubleArray-CZhUFo5d.js";import"./vec3-DSC46DgP.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-en0lWBIB.js";import"./deduplicate-DD1J6YAH.js";import"./Normals-FPkG6ULP.js";import"./objectResourceUtils-AgE6Mx7R.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec4-CDid__v2.js";import"./DefaultMaterial_COLOR_GAMMA-iPR_ZT6p.js";import"./resourceUtils-Cd4X6-Sw.js";import"./NestedMap-DgiGbX8E.js";import"./verticalOffsetUtils-Bdqba6xa.js";import"./CIMSymbolHelper-RNagakW-.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN6jNuTX.js";import"./GeometryUtils-ClkMWevA.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./Rect-CUzevAry.js";import"./BoundingBox-Dn8AJClK.js";import"./cimSymbolUtils-DS1Fp96D.js";import"./utils-C2H3A1uw.js";import"./lineStippleUtils-DdOUX39J.js";import"./projectVectorToPoint-sjRZ-2WD.js";import"./MeshComponent-D498mY_W.js";import"./imageUtils-BfjLvT3i.js";import"./MeshVertexAttributes-BD2PtWGl.js";import"./meshVertexSpaceUtils-CcfLNHym.js";import"./MeshLocalVertexSpace-DZNf3szf.js";import"./projection-PKkfrDjd.js";import"./DefaultLayouts-DkwmdUjQ.js";import"./frustum-Bdr-rFEQ.js";import"./webStyleSymbolUtils-BLz2G3ck.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Octree-bjpgk3mA.js";import"./mathUtils-DIiwy5h7.js";import"./BufferObject-CLFFt1Oe.js";import"./Intersector-juYjkWfX.js";import"./weather-B3EDJgNZ.js";import"./LayerConstants-B33OP6sh.js";import"./boundedPlane-xSVxcV1_.js";import"./debugFlags-CX6JgPmI.js";import"./vec3f32-Cw9Q6TO_.js";import"./VertexArrayObject-DJNUJ_t_.js";import"./VisualElement-C8pAhQko.js";import"./EditGeometryOperations-DmGwV5zN.js";import"./geometry2dUtils-DBhp7z2_.js";import"./Object3DVisualElement-CRBtGAtS.js";let E=class extends k{constructor(t){super(t),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};s([a()],E.prototype,"target",void 0),s([a()],E.prototype,"intersectedGraphic",void 0),s([a()],E.prototype,"intersectedLocation",void 0),s([a()],E.prototype,"elevationAlignedTargetLocation",void 0),s([a({type:Boolean})],E.prototype,"visible",void 0),E=s([D("esri.views.3d.analysis.LineOfSightAnalysisResult")],E);let H=class extends k{constructor(t){super(t),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:v(),observerSurfaceNormal:null,observerFeatureId:null,target:v(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:v(),targetAdjusted:v()},this.computationResult={start:v(),end:v(),intersection:v(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};s([a()],H.prototype,"target",void 0),s([a()],H.prototype,"elevationAlignedTargetLocation",void 0),s([a()],H.prototype,"inputPoints",void 0),s([a()],H.prototype,"computationResult",void 0),s([a()],H.prototype,"result",void 0),H=s([D("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],H);var pt;let I=pt=class extends k{constructor(e){super(e)}clone(){return new pt({type:this.type,id:W(this.id),mapPoint:W(this.mapPoint),renderPoint:ut(this.renderPoint),normal:W(this.normal),ray:W(this.ray),graphic:this.graphic})}equals(e){return this.type===e.type&&this.id===e.id&&Ut(this.mapPoint,e.mapPoint)&&Nt(this.renderPoint,e.renderPoint)&&Bt(this.normal,e.normal)&&re(this.ray,e.ray)&&this.graphic===e.graphic}};s([a()],I.prototype,"type",void 0),s([a({constructOnly:!0})],I.prototype,"id",void 0),s([a({constructOnly:!0})],I.prototype,"mapPoint",void 0),s([a({constructOnly:!0})],I.prototype,"renderPoint",void 0),s([a({constructOnly:!0})],I.prototype,"normal",void 0),s([a({constructOnly:!0})],I.prototype,"graphic",void 0),s([a({constructOnly:!0})],I.prototype,"ray",void 0),I=pt=s([D("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],I);let F=class extends k{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=_e(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=nt.MIN}getScreenPointIntersection(t){const i=Wt(t,ue.get()),n=me(this.view.state.camera,i,at);return this._getRayIntersection(n)}_getRayIntersection(t,i){if(t==null||this.view.sceneIntersectionHelper==null)return null;const{intersector:n}=this;n.options.store=nt.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(t,n,i);const o=n.results.min,r=v();if(!o.getIntersectionPoint(r)||(i==null?void 0:i.maxDistance)!=null&&qt(r,t.origin)>i.maxDistance**2)return null;const l=this.view.renderCoordsHelper.fromRenderCoords(r,new At({spatialReference:this.view.spatialReference})),p=ut(o.normal);if(ce(o))return new I({type:z.OBJECT,id:`${o.target.layerUid}/${o.target.nodeIndex}/${o.target.componentIndex}`,mapPoint:l,renderPoint:r,normal:p,ray:X(t),graphic:null});if(pe(o))return new I({type:z.OBJECT,id:`${o.target.layerUid}/${o.target.graphicUid}`,mapPoint:l,renderPoint:r,normal:p,ray:X(t),graphic:null});if(ve(o))return new I({type:z.TERRAIN,id:o.target.lij.slice(),mapPoint:l,renderPoint:r,normal:p,ray:X(t),graphic:null});const d=Q(o,this.view);if(d!=null){const c=d.layer,u=d.sourceLayer;let h;return u&&u.type==="scene"?h=de(d,u.objectIdField):h=d.uid,new I({type:z.OBJECT,id:`${c==null?void 0:c.uid}/${h}`,mapPoint:l,renderPoint:r,normal:p,ray:X(t),graphic:d})}return null}updateFromGroundIntersection(t,i,n){const o=Oe,r=Ie,l=Pe,p=Pt;O(r,t),this.view.renderCoordsHelper.worldUpAtPosition(r,l),dt(l,l);const d=this.view.basemapTerrain.visibleElevationBounds,c=(i>=0?1:-1)*((d?Math.abs(d.max-d.min):100)+Math.abs(i));j(p,l,c),U(o,r,p),ct(o,r,at);const u=this._getRayIntersection(at,{include:this._terrainIntersectionOptionsLayerUids,maxDistance:c});if(u!=null){const h=Pt;return j(h,l,i),U(n,u.renderPoint,h),ut(u.normal)}return O(n,t),null}};s([a()],F.prototype,"view",void 0),s([a()],F.prototype,"intersector",void 0),F=s([D("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],F);const Oe=v(),Ie=v(),Pe=v(),Pt=v(),at=Mt();let y=class extends Et.EventedMixin(k){constructor(e){super(e),this.updateOnCameraChange=!0,this._observerGroundOffsetRenderSpace=0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new ht,this._frameTask=Tt,this._computationHandles=new et,this._externalObserverUpdate=!0}initialize(){var t;const e=(t=this.view.resourceController)==null?void 0:t.scheduler;this._frameTask=e?e.registerTask(Z.LINE_OF_SIGHT_TOOL):Tt,this._intersector=new F({view:this.view}),this.addHandles([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(e){this._frameTask.priority=e}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(e){this.analysisViewData.observerEngineLocation=e}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(e){const t=e.computation,{inputPoints:i,computationResult:n}=t,{observerAdjusted:o,targetAdjusted:r}=i,{start:l,end:p}=n;O(l,o),O(p,r),this._canCompute(t)?this._computeIntersection(e):Le(e),t.notifyResultChanged(),this.emit("result-changed",{target:e.computation.target,result:t.result})}_updateAdjustedPointsFromFeatures(e){const t=this.view,{sceneIntersectionHelper:i}=t,{inputPoints:n}=e,{observerAdjusted:o,observerFeatureId:r,targetFeatureId:l,targetAdjusted:p}=n;if(r==null&&l==null)return;const d=Jt(o,p),c=this._intersector.intersector,u=ct(n.observer,n.target,Rt);c.options.store=nt.ALL,i.intersectToolIntersectorRay(u,c);let h=null,g=null,C=null,f=null;for(const w of c.results.all){const _=Q(w,this.view);if(_==null||w.distanceInRenderSpace==null)continue;const L=st(_);L!=null&&(r!=null&&L===r&&(h==null&&(h=Lt(w,t,d)),w.distanceInRenderSpace<h&&(C=w)),l!=null&&L===l&&(g==null&&(g=Lt(w,t,d)),f==null&&w.distanceInRenderSpace<d&&d-w.distanceInRenderSpace<g&&(f=w)))}C!=null&&C.getIntersectionPoint(o)&&(n.observerSurfaceNormal=C.getTransformedNormal(v())),f!=null&&f.getIntersectionPoint(p)&&(n.targetSurfaceNormal=f.getTransformedNormal(v()))}_adjustStartEndPositions(e){const t=this._screenPixelSize,i=this.view,{inputPoints:n}=e,{observer:o,observerSurfaceNormal:r,target:l,targetSurfaceNormal:p,observerAdjusted:d,targetAdjusted:c}=n,u=tt;O(d,o),O(c,l),this._updateAdjustedPointsFromFeatures(e),r!=null?O(u,r):B(u,c,d);const h=t;dt(u,u),j(u,u,Math.min(h,1)),U(d,d,u),p!=null?O(u,p):B(u,d,c);const g=i.state.camera.computeScreenPixelSizeAt(c);dt(u,u),j(u,u,Math.min(g,1)),U(c,c,u)}_computeIntersection({computation:e,interpolationInfo:t}){const{view:i}=this,{sceneIntersectionHelper:n,renderCoordsHelper:o}=i;if(n==null)return;const r=this._intersector.intersector,{computationResult:l,inputPoints:p}=e,{observer:d,target:c}=p,{start:u,end:h}=l,g=ct(u,h,Rt);r.options.store=nt.MIN,n.intersectToolIntersectorRay(g,r);const C=r.results.min,f=l.intersection,w=tt;let _=!0;if(C!=null&&C.getIntersectionPoint(f)){O(t.originalIntersection,f),O(t.originalObserver,u),O(t.originalTarget,h),o.fromRenderCoords(f,w,i.spatialReference);const P=1-x(h,c)/x(u,c);_=x(d,f)>=P*x(d,c)}const L=new At(w,i.spatialReference);{const{result:P,target:S}=e;P!=null?(P.target=S,P.intersectedGraphic=_?null:Q(C,i),P.intersectedLocation=_?null:L,P.visible=_):e.result=new E({target:S,elevationAlignedTargetLocation:e.elevationAlignedTargetLocation,intersectedGraphic:_?null:Q(C,i),intersectedLocation:_?null:L,visible:_})}l.isValid=p.isValid=!0,l.isTargetVisible=_}_canCompute(e){const t=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(t==null||e.elevationAlignedTargetLocation==null||i==null)return!1;const{observerAdjusted:n,targetAdjusted:o}=e.inputPoints,r=i.intersectsPoint(n),l=i.intersectsPoint(o);return r&&l}_onObserverPositionChange(e,t,i,n,o){if(this._externalObserverUpdate=o,e==null)return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(t==null)return wt(this.analysis,e.spatialReference,it.getLogger(this)),void(this.analysisViewData.elevationAlignedObserver=null);const r=Vt(t,i),{absoluteZ:l,elevation:p}=Ct(t.x,t.y,t.z,this.view.spatialReference,this.view,r),d=t.clone();d.z=l,this._effectiveObserverElevationMode=r.mode,this.analysisViewData.elevationAlignedObserver=d;const c=v();this.view.renderCoordsHelper.toRenderCoords(d,c),this._elevationAlignedObserverPositionRenderSpace=c,this._observerGroundOffsetRenderSpace=l-p,this._observerFeatureId=st(n),this.priority=Z.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(e,t,i,n,o){const{inputPoints:r}=e;switch(O(r.observer,t),r.observerFeatureId=o,r.observerSurfaceNormal=null,n){case"on-the-ground":case"relative-to-ground":{const l=this._intersector.updateFromGroundIntersection(r.observer,i,r.observer);r.observerFeatureId==null&&(r.observerSurfaceNormal=l)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=Z.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(e,t,i,n,o,r=!0){const l=e.inputPoints;if(r&&(l.isValid=!1),i==null)return t!=null&&wt(this.analysis,t.spatialReference,it.getLogger(this)),e.elevationAlignedTargetLocation=null,void e.notifyInputPointsChanged();const p=Vt(i,n),{absoluteZ:d,elevation:c}=Ct(i.x,i.y,i.z,this.view.spatialReference,this.view,p),u=i.clone();switch(u.z=d,e.elevationAlignedTargetLocation=u,this.view.renderCoordsHelper.toRenderCoords(e.elevationAlignedTargetLocation,l.target),l.targetFeatureId=st(o),l.targetSurfaceNormal=null,p.mode){case"on-the-ground":case"relative-to-ground":{const h=this._intersector.updateFromGroundIntersection(l.target,d-c,l.target);l.targetFeatureId==null&&(l.targetSurfaceNormal=h)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=Z.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(e){return q([this._updatingHandles.add(()=>({computation:e,targetPosition:e.target.position,targetElevationInfo:e.target.elevationInfo,targetFeatureInfo:e.target.feature,projectedTargetPosition:J(e.target.position,this.view.spatialReference)}),({computation:t,targetPosition:i,targetElevationInfo:n,targetFeatureInfo:o,projectedTargetPosition:r})=>{r.pending==null?this._onTargetPositionChange(t,i,r.geometry,n,o):this._updatingHandles.addPromise(r.pending)},R)])}_connectComputationToObserver(e){return this._updatingHandles.add(()=>({computation:e,observer:this.analysisViewData.elevationAlignedObserver}),({computation:t})=>{this._externalObserverUpdate&&(t.inputPoints.isValid=!1,t.notifyInputPointsChanged())},R)}_connectComputationToRenderSpaceObserver(e){return this._updatingHandles.add(()=>({computation:e,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:t,observer:i,observerGroundOffset:n,observerElevationMode:o,observerFeatureId:r})=>{this._onObserverRenderSpacePositionChangeForComputation(t,i,n,o,r)},R)}_connectComputationToCamera(e){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:t})=>{!this.updateOnCameraChange||e.inputPoints.isValid&&!t||e.notifyInputPointsChanged()})}_connectComputationToSlicePlane(e){return this._updatingHandles.add(()=>this.view.slicePlane,()=>{e.inputPoints.isValid=!1,e.notifyInputPointsChanged()})}_connectComputationToElevation(e){const t=(i,n)=>{const o=this.analysis.observer,r=e.target;let l=null,p=null,d=null,c=null,u=null,h=null;if((o==null?void 0:o.position)!=null){const g=J(o.position,this.view.spatialReference);if(g.pending!=null)return this._updatingHandles.addPromise(g.pending),void g.pending.finally(()=>t(i,n));l=g.geometry,p=o.elevationInfo,d=o.feature}if(r.position!=null){const g=J(r.position,this.view.spatialReference);if(g.pending!=null)return this._updatingHandles.addPromise(g.pending),void g.pending.finally(()=>t(i,n));c=g.geometry,u=r.elevationInfo,h=r.feature}l==null&&c==null||(se(i,n,K,this.view.spatialReference),l!=null&&vt(K,l)&&this._onObserverPositionChange(o!=null?o.position:null,l,p,d,!1),c!=null&&vt(K,c)&&this._onTargetPositionChange(e,r.position,c,u,h,!1),l!=null&&c!=null&&Yt(K,l,c)&&e.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",({extent:i,spatialReference:n})=>t(i,n))}_connectComputationToTask(e){let t=null;const i={computation:e,interpolationInfo:{originalIntersection:v(),originalObserver:v(),originalTarget:v()}};return q([this._updatingHandles.add(()=>e.inputPoints,()=>{t=gt(t),t=Xt(async n=>{await Zt(this._frameTask.schedule(()=>this._computeResult(i),n))})},{initial:!0,equals:()=>!1}),Ht(()=>t=gt(t))])}_connectComputation(e){const t=this._computationHandles;t.has(e)||t.add([this._connectComputationToTarget(e),this._connectComputationToObserver(e),this._connectComputationToRenderSpaceObserver(e),this._connectComputationToCamera(e),this._connectComputationToSlicePlane(e),this._connectComputationToElevation(e),this._connectComputationToTask(e)],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_onComputationCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_onTargetCollectionChange({added:e,removed:t}){for(const i of t)this._removeTarget(i);for(const i of e)this._addTarget(i)}_onCursorTargetChange(e,t){t!=null&&this._removeTarget(t),e!=null&&this._addTarget(e)}_addTarget(e){this._computations.some(t=>t.target===e)||this._computations.add(new H({target:e}))}_removeTarget(e){const t=this._computations.findIndex(i=>i.target===e);this._computations.removeAt(t)}_connectObserver(){return q([this._updatingHandles.add(()=>({observerPosition:this.analysis.observer!=null?this.analysis.observer.position:null,projectedObserverPosition:J(this.analysis.observer!=null?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:this.analysis.observer!=null?this.analysis.observer.elevationInfo:null,observerFeatureInfo:this.analysis.observer!=null?this.analysis.observer.feature:null}),({observerPosition:e,projectedObserverPosition:t,observerElevationInfo:i,observerFeatureInfo:n})=>{t.pending==null?this._onObserverPositionChange(e,t.geometry,i,n,!0):this._updatingHandles.addPromise(t.pending)},R)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,e=>this._onComputationCollectionChange(e),{initial:!0,final:!0})}_connectTargets(){return q([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,e=>this._onTargetCollectionChange(e),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(e,t)=>{this._onCursorTargetChange(e,t)})])}get _isCameraDirty(){const e=this.analysisViewData.elevationAlignedObserver,{view:t}=this,{renderCoordsHelper:i}=t;if(e==null||i==null)return!1;const n=tt;i.toRenderCoords(e,n);const o=t.state.camera.computeScreenPixelSizeAt(n);return Math.abs((o-this._screenPixelSize)/this._screenPixelSize)>Ve}};function Lt(e,t,i){if(he(e)){const n=ge(e,t);if(n!=null)return Math.min(n*Re,i)}return 1e-5*i}function Vt(e,t){return e.hasZ?t??{mode:"absolute-height",offset:0}:{mode:"on-the-ground",offset:0}}function Le({computation:e,interpolationInfo:t}){const{computationResult:i,inputPoints:n}=e,{start:o,end:r,intersection:l}=i,{originalIntersection:p,originalObserver:d,originalTarget:c}=t;if(O(l,p),n.isValid){const u=tt,h=x(d,p)/x(d,c);mt(u,o,d),j(u,u,1-h),U(l,l,u),mt(u,r,c),j(u,u,h),U(l,l,u),i.isValid=!0}else e.result=null,i.isValid=!1,i.isTargetVisible=!1}s([a({constructOnly:!0})],y.prototype,"analysis",void 0),s([a({constructOnly:!0})],y.prototype,"analysisViewData",void 0),s([a({constructOnly:!0})],y.prototype,"view",void 0),s([a()],y.prototype,"updating",null),s([a()],y.prototype,"priority",null),s([a()],y.prototype,"updateOnCameraChange",void 0),s([a()],y.prototype,"_computations",null),s([a()],y.prototype,"_elevationAlignedObserverPositionRenderSpace",null),s([a()],y.prototype,"_observerGroundOffsetRenderSpace",void 0),s([a()],y.prototype,"_effectiveObserverElevationMode",void 0),s([a()],y.prototype,"_observerFeatureId",void 0),s([a()],y.prototype,"_screenPixelSize",null),s([a({readOnly:!0})],y.prototype,"_updatingHandles",void 0),s([a()],y.prototype,"_frameTask",void 0),s([a()],y.prototype,"_isCameraDirty",null),y=s([D("esri.views.3d.analysis.LineOfSight.LineOfSightController")],y);const Ve=.1,tt=v(),Rt=Mt(),K=Kt(),Re=.05;let Se=class{constructor(){this.glowWidth=8,this.innerWidth=.75}};const $e=new Se;function Ae(e){const t=e.accentColor;return{glowColor:t,innerColor:Qt(t),globalAlpha:.75*t.a}}class Ee{constructor(){this.size=.5}}const He=new Ee;function St(e){return te(e.accentColor,.75)}class De{constructor(){this.size=.5,this.visibleColor=new m([3,252,111,.75]),this.occludedColor=new m([252,3,69,.75]),this.undefinedColor=new m([127,127,127,.75])}}const Me=new De;let ke=class{constructor(){this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new m([3,252,111,1]),this.visibleOuterColor=new m([3,252,111,.15]),this.occludedInnerColor=new m([252,3,69,1]),this.occludedOuterColor=new m([252,3,69,.1]),this.undefinedInnerColor=new m([255,255,255,1]),this.undefinedOuterColor=new m([127,127,127,.2])}};const Y=new ke;class xe extends kt{constructor(t,i){const n=xt(St(t.effectiveTheme)),o=Gt(n,He.size,32,32),r=new zt(o);super({view:t,renderObjects:[r],metadata:i,elevationInfo:{mode:"absolute-height",offset:0}}),Ft(this),this.themeHandle=Dt(()=>({color:St(t.effectiveTheme)}),l=>{n.setParameters(l)})}destroy(){this.themeHandle.remove(),super.destroy()}}let ze=class extends kt{constructor(t,i){const{size:n,visibleColor:o,occludedColor:r,undefinedColor:l}=Me;super({view:t,renderObjects:[lt(n,o,G.Custom1),lt(n,r,G.Custom2),lt(n,l,G.Custom3)],metadata:i,elevationInfo:{mode:"absolute-height",offset:0}}),Ft(this)}};function lt(e,t,i){return new zt(Gt(xt(m.toUnitRGBA(t)),e,32,32),i)}var M;(function(e){e.Ready="ready",e.Creating="creating",e.Created="created"})(M||(M={}));let T=class extends Ce{constructor(t){super(t),this.removeIncompleteOnCancel=!1,this.analysisViewData=null,this._latestPointerMovePointerType=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new et,this._updatingHandles=new ht,this._manipulatorHandles=new et,this._targetTrackerManipulator=null}initialize(){this._intersector=new F({view:this.view}),this.addHandles(Dt(()=>this.state,t=>{t===M.Created&&this.finishToolCreation()},ee)),this._observerManipulator=this._createObserverManipulator(),this._createLaserLine(),this.addHandles([this._updatingHandles.add(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.elevationAlignedObserver},t=>this._onObserverLocationChange(t),R),this._updatingHandles.add(()=>Ae(this.view.effectiveTheme),({glowColor:t,innerColor:i,globalAlpha:n})=>this._updateLaserLineStyle(t,i,n),R),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),t=>this._updateLaserLineRenderer(t)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),R)])}destroy(){this._updatingHandles=$(this._updatingHandles),this._manipulatorHandles=$(this._manipulatorHandles),this._analysisHandles=$(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeLaserLine(),this._intersector=null,this._set("analysis",null)}get state(){var t;return this.active?this.hasGrabbedManipulators?M.Created:M.Creating:((t=this.analysis.observer)==null?void 0:t.position)!=null?M.Created:M.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return this.analysisViewData!=null&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&this._latestPointerMovePointerType==="mouse"}get _shouldRenderTracker(){var t;return this._showTracker&&((t=this.analysis.observer)==null?void 0:t.position)!=null&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(t){switch(t.type){case"immediate-double-click":this._doubleClickHandler(t);break;case"key-down":this._keyDownHandler(t);break;case"pointer-move":this._pointerMoveHandler(t)}}onInputEventAfter(t){t.type==="immediate-click"&&this._clickHandler(t)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:i}){for(const n of i)this._disconnectComputation(n);for(const n of t)this._connectComputation(n)}_connectComputation(t){if(this.destroyed)return void it.getLogger(this).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const i=this._analysisHandles;if(i.has(t))return;const n=this._createTargetManipulator(t.target);this._targetTrackerManipulator==null&&n.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=n,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),i.add([this._updatingHandles.add(()=>je(t),()=>Ge(n,t),R),this._updatingHandles.add(()=>t.elevationAlignedTargetLocation,o=>this._onTargetLocationChange(o,n),R)],t)}_disconnectComputation(t){if(this.destroyed)return void it.getLogger(this).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(t);const i=this._getTargetManipulator(t.target);i!=null&&(this.manipulators.remove(i),this._manipulatorHandles.remove(i),this._targetTrackerManipulator!=null&&this._targetTrackerManipulator===i&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=$(this.analysisViewData.cursorTarget)}_createTargetManipulator(t){const i={target:t,type:"target"},n=new ze(this.view,i);return this._manipulatorHandles.add([this._createTargetManipulatorDragPipeline(n),n.events.on("grab-changed",o=>this._manipulatorGrabChanged(n,o)),n.events.on("immediate-click",o=>this._manipulatorClick(n,o))],n),this.manipulators.add(n),t.position!=null?n.elevationAlignedLocation=t.position:n.available=!1,n}_getTargetManipulator(t){let i=null;return this.manipulators.forEach(n=>{const o=n.manipulator;i==null&&o.metadata.type==="target"&&o.metadata.target===t&&(i=o)}),i}_createObserverManipulator(){const t=new xe(this.view,{type:"observer",intersection:null});return this._manipulatorHandles.add([this._createObserverManipulatorDragPipeline(t),t.events.on("grab-changed",i=>this._manipulatorGrabChanged(t,i)),t.events.on("immediate-click",i=>this._manipulatorClick(t,i))],t),this.manipulators.add(t),t}_screenToIntersection(){return t=>{const i=this._intersector.getScreenPointIntersection(t.screenEnd);return i==null?null:{...t,intersection:i}}}_createTargetManipulatorDragPipeline(t){return Ot(t,(i,n,o)=>{n.next(this._screenToIntersection()).next(this._updateTargetDragStep(t)).next(()=>this._updateLaserLineRenderer()),o.next(Fe(t.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(t){return Ot(t,(i,n,o)=>{n.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),o.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return t=>(t.intersection.mapPoint!=null?(this.analysis.observer==null&&(this.analysis.observer=new ft),this._updateFromIntersection(this.analysis.observer,t.intersection)):this.analysis.observer=null,t)}_cancelObserverDragStep(){var i;const t=((i=this.analysis.observer)==null?void 0:i.position)!=null?this.analysis.observer.clone():null;return n=>(this.analysis.observer=t,n)}_updateTargetDragStep(t){return i=>{this._updateFromIntersection(t.metadata.target,i.intersection);const n=i.intersection.mapPoint;return n!=null&&(t.elevationAlignedLocation=n),i}}_manipulatorGrabChanged(t,i){switch(i.action){case"start":this._grabbedManipulator=t;break;case"end":this._grabbedManipulator===t&&(this._grabbedManipulator=null)}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:this.analysis.observer!=null?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(t=this._laserLineRendererDependencies()){const{laserlineVisualElement:i,grabbedManipulator:n,shouldRenderTracker:o,observerPosition:r,visible:l}=t;if(i==null)return;const p=n??(o&&r!=null?this._targetTrackerManipulator:null);p!=null&&l?(i.visible=!0,i.heightManifoldTarget=p.renderLocation,p!==this._observerManipulator?i.lineVerticalPlaneSegment=fe(this._observerManipulator.renderLocation,p.renderLocation,Ue):i.lineVerticalPlaneSegment=null):(i.visible=!1,i.heightManifoldTarget=null,i.lineVerticalPlaneSegment=null)}_createLaserLine(){this._removeLaserLine();const{glowWidth:t,innerWidth:i}=$e;this._laserlineVisualElement=new be({view:this.view,attached:!0,visible:this.visible,style:{glowWidth:t,innerWidth:i},isDecoration:!0})}_removeLaserLine(){this._laserlineVisualElement!=null&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_updateLaserLineStyle(t,i,n){const o=this._laserlineVisualElement;if(o==null)return;const r=o.style;o.style={...r,glowColor:m.toUnitRGB(t),innerColor:m.toUnitRGB(i),globalAlpha:n}}_onObserverLocationChange(t){t!=null?(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=t):this._observerManipulator.available=!1}_onTargetLocationChange(t,i){t!=null?(i.elevationAlignedLocation=t,i!==this._targetTrackerManipulator&&(i.available=!0)):i.available=!1}_addPointFromClickEvent(t){var n;const i=this._intersector.getScreenPointIntersection(t);if((i==null?void 0:i.mapPoint)!=null)if(((n=this.analysis.observer)==null?void 0:n.position)!=null){this._clearCursorTracker();const o=new bt;this._updateFromIntersection(o,i),this.analysis.targets.add(o)}else{const o=new ft;this._updateFromIntersection(o,i),this.analysis.observer=o}}_clickHandler(t){this.active&&t.button!==ot.Right&&(this._addPointFromClickEvent(_t(t)),t.stopPropagation())}_doubleClickHandler(t){this.active&&t.button!==ot.Right&&(this.stop(),t.stopPropagation())}_keyDownHandler(t){this.active&&t.key==="Escape"&&(this.stop(),t.stopPropagation())}_pointerMoveHandler(t){var o;if(this.hasGrabbedManipulators||(this._latestPointerMovePointerType=t.pointerType,this._updateLaserLineRenderer(),!this._showTracker||((o=this.analysis.observer)==null?void 0:o.position)==null))return;const i=_t(t),n=this._intersector.getScreenPointIntersection(i);(n==null?void 0:n.mapPoint)!=null&&(this.analysisViewData.cursorTarget==null&&(this.analysisViewData.cursorTarget=new bt),this._updateFromIntersection(this.analysisViewData.cursorTarget,n),this._updateLaserLineRenderer())}_updateFromIntersection(t,i){if(i.mapPoint==null)return t.position=null,t.elevationInfo=null,void(t.feature=null);switch(i.type){case z.OBJECT:if(i.graphic!=null){const o=i.graphic,r=ae(o);r.mode==="on-the-ground"&&(r.mode="relative-to-ground",r.offset=0),t.elevationInfo=new yt(r),t.feature=o}else t.elevationInfo=null,t.feature=null;break;case z.TERRAIN:t.elevationInfo=new yt({mode:"on-the-ground"}),t.feature=null;break;default:t.elevationInfo=null,t.feature=null}const n=i.mapPoint.clone();n.z=le(this.view,n,{mode:"absolute-height",offset:0},t.elevationInfo),t.position=n}_manipulatorClick(t,i){if(t.metadata.type==="observer"||t.grabbing||t.dragging||i.button!==ot.Right||this.analysis.targets.length<=1)return;const{target:n}=t.metadata;this.analysis.targets.remove(n),i.stopPropagation()}get testInfo(){}};function Fe(e){var i;const t=(i=e.position)==null?void 0:i.clone();return n=>(e.position=t,n)}function Ge(e,t){const{isValid:i,isTargetVisible:n}=t.computationResult;e.state=i?n?G.Custom1:G.Custom2:G.Custom3}function je(e){const{isValid:t,isTargetVisible:i}=e.computationResult;return{isValid:t,isTargetVisible:i}}s([a({constructOnly:!0})],T.prototype,"view",void 0),s([a({constructOnly:!0})],T.prototype,"analysis",void 0),s([a({readOnly:!0})],T.prototype,"state",null),s([a({readOnly:!0})],T.prototype,"cursor",null),s([a()],T.prototype,"removeIncompleteOnCancel",void 0),s([a({readOnly:!0})],T.prototype,"updating",null),s([a({constructOnly:!0})],T.prototype,"analysisViewData",void 0),s([a({readOnly:!0})],T.prototype,"_showTracker",null),s([a()],T.prototype,"_latestPointerMovePointerType",void 0),s([a()],T.prototype,"_shouldRenderTracker",null),s([a()],T.prototype,"_laserlineVisualElement",void 0),s([a()],T.prototype,"_grabbedManipulator",void 0),T=s([D("esri.views.3d.analysis.LineOfSight.LineOfSightTool")],T);const Ue=ye();class Ne{constructor(t,i,n,o){this.visibleLineVisualElement=t,this.occludedLineVisualElement=i,this.undefinedLineVisualElement=n,this.targetVisualElement=o}destroy(){this.visibleLineVisualElement.destroy(),this.occludedLineVisualElement.destroy(),this.undefinedLineVisualElement.destroy(),this.targetVisualElement.destroy()}}let V=class extends k{constructor(e){super(e),this._lineOfSightVisualElements=new Array,this._computationHandles=new et,this._updatingHandles=new ht}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=$(this._updatingHandles),this._computationHandles=$(this._computationHandles),this._observerVisualElement=$(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get test(){}_createLineOfSightVisualization(){const e=Y,t=this.view,i=this.isDecoration,n={view:t,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth,isDecoration:i},o=m.toUnitRGBA(e.visibleOuterColor),r=m.toUnitRGBA(e.visibleInnerColor),l=m.toUnitRGBA(e.occludedOuterColor),p=m.toUnitRGBA(e.occludedInnerColor),d=m.toUnitRGBA(e.undefinedOuterColor),c=m.toUnitRGBA(e.undefinedInnerColor),u=new rt({...n,color:o,innerColor:r}),h=new rt({...n,color:l,innerColor:p}),g=new rt({...n,color:d,innerColor:c}),C=new It({view:t,attached:!0,...$t,size:8,isDecoration:i}),f=new Ne(u,h,g,C);return this._lineOfSightVisualElements.push(f),f}_destroyLineOfSightVisualization(e){e.destroy(),this._lineOfSightVisualElements.splice(this._lineOfSightVisualElements.indexOf(e),1)}_updateLineOfSightVisualization(e,t,i){const n=Y,{computationResult:o,inputPoints:r}=e,{start:l,end:p,intersection:d,isValid:c,isTargetVisible:u}=o,{observer:h}=r,g=Je;g[12]=h[0],g[13]=h[1],g[14]=h[2];const C=B(Be,l,h),f=B(We,p,h),w=B(qe,d,h),{visibleLineVisualElement:_,occludedLineVisualElement:L,undefinedLineVisualElement:P,targetVisualElement:S}=t,jt=this.analysisViewData.elevationAlignedObserver==null||e.elevationAlignedTargetLocation==null,N=this.visible&&!jt;_.visible=N,L.visible=N,P.visible=N,S.visible=N,S.attached=!i.interactiveAndEditable,N&&(_.geometry=null,L.geometry=null,P.geometry=null,S.geometry=e.elevationAlignedTargetLocation,c?u?(_.geometry=[[A(C),A(f)]],_.transform=g,_.color=m.toUnitRGBA(n.visibleOuterColor),S.color=m.toUnitRGBA(n.visibleInnerColor)):(_.geometry=[[A(C),A(w)]],_.transform=g,_.color=m.toUnitRGBA(n.occludedOuterColor),L.geometry=[[A(w),A(f)]],L.transform=g,S.color=m.toUnitRGBA(n.occludedInnerColor)):(P.geometry=[[A(C),A(f)]],P.transform=g,S.color=m.toUnitRGBA(n.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(e){const{computationResult:t}=e,{occludedOuterColor:i,visibleOuterColor:n}=Y;return{computationResult:t,occludedOuterColor:i,visibleOuterColor:n,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(e){const t=this._computationHandles;if(t.has(e))return;const i=this._createLineOfSightVisualization();t.add([this._updatingHandles.add(()=>this._getLineOfSightVisualizationDependencies(e),n=>this._updateLineOfSightVisualization(e,i,n),{initial:!0,equals:()=>!1}),Ht(()=>this._destroyLineOfSightVisualization(i))],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,e=>this._onComputationsCollectionChange(e),{initial:!0,final:!0})}_onComputationsCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_createObserverVisualization(){const e=m.toUnitRGBA(Y.visibleInnerColor),t=new It({view:this.view,color:e,...$t,isDecoration:this.isDecoration});this._observerVisualElement=t,this.addHandles(this._updatingHandles.add(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:i,interactiveAndEditable:n,visible:o})=>{i!=null&&!n&&o?(t.geometry=i,this._observerVisualElement.attached=!0):t.attached=!1},R))}};s([a({constructOnly:!0})],V.prototype,"analysis",void 0),s([a({constructOnly:!0})],V.prototype,"analysisViewData",void 0),s([a({constructOnly:!0})],V.prototype,"view",void 0),s([a({readOnly:!0})],V.prototype,"visible",null),s([a({constructOnly:!0})],V.prototype,"isDecoration",void 0),s([a()],V.prototype,"updating",null),s([a()],V.prototype,"interactiveAndEditable",null),s([a()],V.prototype,"test",null),V=s([D("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],V);const $t={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},Be=v(),We=v(),qe=v(),Je=ie();let b=class extends oe(Et.EventedMixin(k)){constructor(e){super(e),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new ne,this.elevationAlignedObserver=null,this.observerEngineLocation=v(),this.cursorTarget=null,this.editable=!0}initialize(){const e=this.view,t=this.analysis;this._analysisController=new y({analysis:t,analysisViewData:this,view:e}),this._analysisVisualization=new V({analysis:t,analysisViewData:this,view:e,isDecoration:!this.parent}),this.addHandles([this._analysisController.on("result-changed",i=>{i.target!==this.cursorTarget&&this.emit("result-changed",i)}),we(this,T)])}destroy(){Te(this),this._analysisController=$(this._analysisController),this._analysisVisualization=$(this._analysisVisualization)}get results(){return this.computations.map(e=>e.result)}get priority(){return this._analysisController.priority}set priority(e){this._analysisController.priority=e}get updating(){return this._analysisController!=null&&this._analysisController.updating||this._analysisVisualization!=null&&this._analysisVisualization.updating}getResultForTarget(e){var t;return(t=this.computations.find(i=>i.target===e))==null?void 0:t.result}get testInfo(){}};s([a({readOnly:!0})],b.prototype,"type",void 0),s([a({constructOnly:!0,nonNullable:!0})],b.prototype,"analysis",void 0),s([a()],b.prototype,"tool",void 0),s([a({readOnly:!0})],b.prototype,"results",null),s([a()],b.prototype,"priority",null),s([a()],b.prototype,"computations",void 0),s([a()],b.prototype,"elevationAlignedObserver",void 0),s([a()],b.prototype,"observerEngineLocation",void 0),s([a()],b.prototype,"cursorTarget",void 0),s([a()],b.prototype,"updating",null),s([a()],b.prototype,"editable",void 0),s([a()],b.prototype,"_analysisController",void 0),s([a()],b.prototype,"_analysisVisualization",void 0),b=s([D("esri.views.3d.analysis.LineOfSightAnalysisView3D")],b);const lo=b;export{lo as default};
