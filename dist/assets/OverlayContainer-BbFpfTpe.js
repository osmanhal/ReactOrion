import{dD as W,dE as j,dF as z,dG as D,dH as E,ab as A,dI as B,dJ as C,ap as F,dK as H}from"./index-BfC8i6jT.js";import{r as J}from"./vec3f32-Cw9Q6TO_.js";import{a as K,h as L}from"./WGLContainer-BLE0Uw_u.js";import{E as k}from"./Container-D8Z8PR0N.js";class V extends K{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=W()}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const s of this.children)s.beforeRender(e)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"overlay",brushes:[L.overlay],target:()=>this.children,drawPhase:k.MAP});return[...super.prepareRenderPasses(e),s]}_updateMatrices(e){const{state:s}=e,{id:a,size:c,pixelRatio:r,resolution:d,rotation:l,viewpoint:u,displayMat3:_}=s;if(this._viewStateId===a)return;const p=Math.PI/180*l,i=r*c[0],n=r*c[1];this._localOrigin=u.targetGeometry.clone();const{x:h,y:v}=this._localOrigin,M=j(h,s.spatialReference);this._localOrigin.x=M,this._localOrigin.y=v;const m=d*i,g=d*n,t=z(this._dvsMat3);D(t,t,_),E(t,t,A(i/2,n/2)),B(t,t,J(i/m,-n/g,1)),C(t,t,-p),this._viewStateId=a}_updateOverlays(e,s){const{state:a}=e,{rotation:c,spatialReference:r,worldScreenWidth:d,size:l,viewpoint:u}=a,_=this._localOrigin;let p,i=0;const n=F(r);if(n&&r.isWrappable){const h=l[0],v=l[1],M=180/Math.PI*c,m=Math.abs(Math.cos(M)),g=Math.abs(Math.sin(M)),t=Math.round(h*m+v*g),[b,x]=n.valid,o=H(r),{x:O,y:I}=u.targetGeometry,S=[O,I],w=[0,0];a.toScreen(w,S);const f=[0,0];let y;y=t>d?.5*d:.5*t;const P=Math.floor((O+.5*o)/o),$=b+P*o,G=x+P*o,R=[w[0]+y,0];a.toMap(f,R),f[0]>G&&(i=o),R[0]=w[0]-y,a.toMap(f,R),f[0]<$&&(i=-o),p={worldWidth:o,xBounds:[b,x]}}for(const h of s)h.updateDrawCoords(_,i,r,p)}}export{V as f};
