import{aR as R,g3 as A,fZ as c,g1 as $,fs as M,ep as g,fv as m,fB as f,eq as x,ft as h,jK as B,g4 as b,f$ as u,bS as Z,ez as S}from"./index-BfC8i6jT.js";import{a as P}from"./spatialReferenceEllipsoidUtils-6vOoKuZD.js";import{c as G}from"./projectPointToVector-C0Qwzs7z.js";import{t as z}from"./projectVectorToPoint-sjRZ-2WD.js";import{n as y}from"./projectVectorToVector-C51LtB8f.js";import{H as U,_ as j}from"./boundedPlane-xSVxcV1_.js";import{Z as q,c as E}from"./sphere-BgvJtIjV.js";import{c as i,m as F,S as I}from"./plane-ByuX_NXR.js";import{t as _}from"./ElevationProvider-BU9L4pxM.js";function L(s){const{value:t,operations:e}=s;return{operations:e,value:e.create(t)}}function O(s,t,e){return s.operations.setExtent(s.value,t,e.value),e}function T(s){return{operations:s,value:s.create()}}function w(s,t,e=T(s)){return e.operations=s,s.copy(t,e.value),e}function Y(s){return w(E,q(0,0,0,A(s).radius))}const v=2**50;function H(){return w(j,U([0,0,0],[v,0,0],[0,v,0]))}function K(s,t,e){return s.operations.axisAt(s.value,t,c.Z,e)}function W(s,t,e,r){return s.operations.axisAt(s.value,t,e,r)}function X(s,t,e){return s.operations.intersectRay(s.value,t,e)}function k(s,t,e){return s.operations.intersectRayClosestSilhouette(s.value,t,e)}function D(s,t){return s.operations.altitudeAt(s.value,t)}function C(s,t,e,r){return s.operations.setAltitudeAt(s.value,t,e,r)}function J(s,t,e,r){return t!==r&&$(r,t),M(a,r[12],r[13],r[14]),C(s,a,e,a),r[12]=a[0],r[13]=a[1],r[14]=a[2],r}function d(s,t,e){return s.operations.elevate(s.value,t,e.value)}const a=g();function it(s,t,e,r,n){return n[0]=m(s,t),n[1]=m(s,e),n[2]=m(s,r),n}function at(s,t,e,r,n){f(e,s),f(l,t),x(l,l),h(r,l,e),h(n,r,e)}function ut(s,t){return s?P(t):t.isGeographic?R.PlateCarree:t}const l=g();class p{constructor(t,e,r,n){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=r,this._coordinateSystem=n,this._tmpCoordinateSystem=L(n),this.referenceEllipsoid=A(e),this.sphericalPCPF=P(e)}set extent(t){t&&O(this._coordinateSystem,t,this._coordinateSystem)}getAltitude(t){return D(this._coordinateSystem,t)}setAltitude(t,e,r=t){return C(this._coordinateSystem,r,e,t)}setAltitudeOfTransformation(t,e){J(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return K(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,r){return W(this._coordinateSystem,t,e,r)}basisMatrixAtPosition(t,e){const r=this.worldBasisAtPosition(t,c.X,i.get()),n=this.worldBasisAtPosition(t,c.Y,i.get()),o=this.worldBasisAtPosition(t,c.Z,i.get());return B(e,r[0],r[1],r[2],0,n[0],n[1],n[2],0,o[0],o[1],o[2],0,0,0,0,1),e}headingAtPosition(t,e){const r=this.worldUpAtPosition(t,i.get()),n=this.worldBasisAtPosition(t,c.Y,i.get()),o=F(e,n,r);return b(o)}intersectManifoldClosestSilhouette(t,e,r){return d(this._coordinateSystem,e,this._tmpCoordinateSystem),k(this._tmpCoordinateSystem,t,r),r}intersectManifold(t,e,r){d(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=i.get();return X(this._tmpCoordinateSystem,t,n)?f(r,n):null}intersectInfiniteManifold(t,e,r){if(this.viewingMode===u.Global)return this.intersectManifold(t,e,r);d(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=this._tmpCoordinateSystem.value,o=i.get();return I(n.plane,t,o)?f(r,o):null}toRenderCoords(t,e,r){return _(t)?G(t,e,this.spatialReference):y(t,e,r,this.spatialReference)}fromRenderCoords(t,e,r=null){return _(e)?(r!=null&&(e.spatialReference=r),z(t,this.spatialReference,e)?e:null):y(t,this.spatialReference,e,r)?e:null}static create(t,e){switch(t){case u.Local:return new p(u.Local,e,Z(e),H());case u.Global:return new p(u.Global,e,1,Y(e))}}static renderUnitScaleFactor(t,e){return S(t)/S(e)}}export{it as q,p as v,at as w,ut as z};
