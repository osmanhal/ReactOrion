import{C as o}from"./enums-BlUEVwJR.js";import{t as n}from"./VertexElementDescriptor-BOD-G50G.js";import{cV as l,j4 as g,dG as u}from"./index-BfC8i6jT.js";import{s as m}from"./DisplayObject-COGNSicI.js";const c={geometry:[new n("a_pos",2,o.BYTE,0,2)]},w={geometry:[new n("a_pos",2,o.BYTE,0,4),new n("a_tex",2,o.BYTE,2,4)]},T={geometry:[new n("a_pos",2,o.UNSIGNED_SHORT,0,4)]};let b=class extends m{constructor(t,e,s,h,r,i,a=r,d=i){super(),this.tileDebugInfoTexture=null,this.debugInfo={display:{length:0,minOrderedLength:0,minUnorderedLength:0,triangleCount:0},memory:{bytesUsed:0,bytesReserved:0}},this._destroyed=!1,this.key=new l(t),this.resolution=e,this.x=s,this.y=h,this.width=r,this.height=i,this.rangeX=a,this.rangeY=d}destroy(){this.tileDebugInfoTexture&&(this.tileDebugInfoTexture.dispose(),this.tileDebugInfoTexture=null),this._destroyed=!0}get debugSlot(){let t=this;for(;t.parent!==this._stage;){if(!t.parent)return 0;t=t.parent}return this._stage.children.indexOf(t)}setTransform(t){const e=this.resolution/(t.resolution*t.pixelRatio),s=this.transforms.tileMat3,[h,r]=t.toScreenNoRotation([0,0],[this.x,this.y]),i=this.width/this.rangeX*e,a=this.height/this.rangeY*e;g(s,i,0,0,0,a,0,h,r,1),u(this.transforms.displayViewScreenMat3,t.displayViewMat3,s)}get destroyed(){return this._destroyed}};export{c as a,T as m,b as r,w as t};
