import{L as m,A as b,gK as x,lf as T,v as u,y,z as I}from"./index-BfC8i6jT.js";import{s as z}from"./rasterProjectionHelper-B00wUuFF.js";import{l as R}from"./LayerView3D-B4a7j2_d.js";import{p as G}from"./TiledLayerView3D-CuiGHHTv.js";import{v as w}from"./Viewshed.glsl-D2C0nY_-.js";import{L as _}from"./enums-BlUEVwJR.js";import{c as P,l as S,_ as v,p as O,A as L,f as C,m as f}from"./rasterUtils-DMvfqgFx.js";import{u as A}from"./ImageryTileLayerView-dt5Cajtw.js";import{y as $}from"./LayerView-D3G_E76P.js";import{i as E}from"./RefreshableLayerView-T2pK9W1H.js";import{r as F}from"./drapedUtils-Cq2u8YdU.js";import"./WaterSurface.glsl-BrdOaNHj.js";import"./RenderGeometry-BYg-7xwk.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-CZhUFo5d.js";import"./Texture-1xthaLvE.js";import"./Matrix4PassUniform-BH4JqvtO.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-D9KK83cB.js";import"./Texture-Bq-Yp-pO.js";import"./basicInterfaces-wONHx_SN.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-Bl02GO-3.js";import"./Material-CL7oq3ds.js";import"./triangle-B-TmEFJd.js";import"./sphere-BgvJtIjV.js";import"./plane-ByuX_NXR.js";import"./mathUtils-DIiwy5h7.js";import"./lineSegment-DbTVMGoh.js";import"./renderState-yUi34s5A.js";import"./requestImageUtils-CYZi7VGK.js";import"./orientedBoundingBox-Do1Vt1ct.js";import"./spatialReferenceEllipsoidUtils-6vOoKuZD.js";import"./computeTranslationToOriginAndRotation-DK7GzGeb.js";import"./ElevationProvider-BU9L4pxM.js";import"./boundedPlane-xSVxcV1_.js";import"./verticalOffsetUtils-Bdqba6xa.js";import"./hydratedFeatures-Dp0VykK3.js";import"./projectVectorToVector-C51LtB8f.js";import"./projectPointToVector-C0Qwzs7z.js";import"./frustum-Bdr-rFEQ.js";import"./weather-B3EDJgNZ.js";import"./Scheduler-DSoCN6Hr.js";import"./debugFlags-CX6JgPmI.js";import"./Float4DrawUniform-DSpHBPg2.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-bjpgk3mA.js";import"./InterleavedLayout-D5nIvpjN.js";import"./BufferView-DcMGflLe.js";import"./types-D0PSWh4d.js";import"./floatRGBA-BcMV1NFr.js";import"./Intersector-Dzvq-gms.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-DJNUJ_t_.js";import"./BufferObject-CLFFt1Oe.js";import"./ColorMaterial.glsl-r8qsLxA-.js";import"./VertexColor.glsl-DMQrT1G9.js";import"./dehydratedFeatures-ONP9sBF3.js";import"./featureConversionUtils-CGYMoz5K.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-7PCAzCge.js";import"./DecodeSymbolColor.glsl-BR7HIChu.js";import"./earcut-BrWrA6nz.js";import"./vec3-DSC46DgP.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-en0lWBIB.js";import"./deduplicate-DD1J6YAH.js";import"./Normals-FPkG6ULP.js";import"./objectResourceUtils-AgE6Mx7R.js";import"./devEnvironmentUtils-D6qIi8Ky.js";import"./vec4-CDid__v2.js";import"./DefaultMaterial_COLOR_GAMMA-iPR_ZT6p.js";import"./resourceUtils-Cd4X6-Sw.js";import"./CIMSymbolHelper-RNagakW-.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN6jNuTX.js";import"./GeometryUtils-ClkMWevA.js";import"./enums-BRXbslMp.js";import"./definitions-ByNBSgP9.js";import"./Rect-CUzevAry.js";import"./BoundingBox-Dn8AJClK.js";import"./cimSymbolUtils-DS1Fp96D.js";import"./utils-C2H3A1uw.js";import"./lineStippleUtils-DdOUX39J.js";import"./projectVectorToPoint-sjRZ-2WD.js";import"./MeshComponent-D498mY_W.js";import"./imageUtils-BfjLvT3i.js";import"./MeshVertexAttributes-BD2PtWGl.js";import"./meshVertexSpaceUtils-CcfLNHym.js";import"./MeshLocalVertexSpace-DZNf3szf.js";import"./projection-PKkfrDjd.js";import"./DefaultLayouts-DkwmdUjQ.js";import"./webStyleSymbolUtils-BLz2G3ck.js";import"./Intersector-juYjkWfX.js";import"./terrainUtils-BzcC3xJT.js";import"./layerViewUtils-D2JqIDZ8.js";import"./RenderCoordsHelper-BbU_hNrx.js";import"./scaleUtils-DL5-S4xE.js";import"./viewpointUtils-t8HSs1zS.js";import"./earthUtils-B4BKKXMy.js";import"./spatialReferenceSupport-BIiDjE2t.js";import"./ElevationSamplerData-k1b1ey21.js";import"./Environment-zbroFpii.js";import"./quantityUtils-B2xRWNSM.js";import"./Program-C3FgCIV9.js";import"./ShadowCastVisualizeTechniqueConfiguration-DXK-OiGG.js";import"./euclideanLengthMeasurementUtils-D2ZslYzK.js";import"./ray-8l9wECN6.js";import"./ZoomMomentumEstimator-COZR6STZ.js";import"./labelFormatUtils-DkVwf7tJ.js";import"./FeatureTileDescriptor3D-DtDBB7rP.js";import"./elevationInfoUtils-Dkzy2V0O.js";import"./ElevationQueryTileCache-BEPYiqMG.js";import"./LayerConstants-B33OP6sh.js";import"./ElevationRange-BrgM1moX.js";import"./geometryServiceUtils-DujY2RdF.js";import"./project-gQLDAKs4.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./RenderableTile-Co1N3tXi.js";import"./enums-BRzLM11V.js";import"./config-MDUrh2eL.js";import"./TiledDisplayObject-wW3wbRrm.js";import"./DisplayObject-COGNSicI.js";import"./StyleDefinition-BK3ROBTO.js";import"./resources-DkiY2wAJ.js";import"./edgeProcessing-BaVy8Gc3.js";import"./testSVGPremultipliedAlpha-pEtBKrma.js";import"./RenderingContext-B8FOG7Ha.js";import"./ProgramCache-NPIMJ8lZ.js";import"./timeSupport-OHicj2My.js";import"./timeUtils-BWG3K3Ml.js";import"./tagSymbols-BPcGfZon.js";import"./popupUtils-6OYxcFTS.js";const g={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class M{constructor(t,e,r=null,s=null){this.lij=t,this.type="raster-tile",this._memoryUsed=null,this._source=null,this._symbolizerParameters=null,this._bandIds=null,this._interpolation=null,this._dirty=!1,this._transformGrid=null,this.isRendereredSource=!1,this.symbolizerRenderer=null,this.rawPixelData=null,this.opacity=1,this.source=e,this.width=r||e.width,this.height=s||e.height}get source(){return this._source}set source(t){this._source=t,this._rasterTexture=m(this._rasterTexture),this._memoryUsed=null}get symbolizerParameters(){return this.isRendereredSource?{...g,maxCutOff:[1,1,1],factor:[1,1,1]}:this._symbolizerParameters||g}set symbolizerParameters(t){this._symbolizerParameters=t}get bandIds(){return this._bandIds}set bandIds(t){t!=null&&t.length>0?this._bandIds&&t.every((e,r)=>{var s;return!!((s=this._bandIds)!=null&&s[r])&&e===this._bandIds[r]})||(this._bandIds=t,this._dirty=!0):this._bandIds=null}get interpolation(){return this._interpolation||"nearest"}set interpolation(t){if(this._interpolation=t,this._rasterTexture!=null){const e=this._getRasterTextureInterpolation(t);this._rasterTexture.setSamplingMode(e==="bilinear"?_.LINEAR:_.NEAREST)}}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid=t,this._transformGridTexture=m(this._transformGridTexture),this._memoryUsed=null}bind(t){return!!(this.source&&this.source.pixels&&this.source.pixels.length>0)&&((this._rasterTexture==null||this._dirty)&&this._updateRasterTexture(t,this.bandIds),this._rasterTexture!=null&&(this._updateColormapTexture(t),this.transformGrid&&this._transformGridTexture==null&&(this._transformGridTexture=P(t,this.transformGrid))),!0)}getUniforms(){const{symbolizerParameters:t,transformGrid:e,width:r,height:s,opacity:o}=this,n=S(e,[r,s],[this.source.width,this.source.height],o),p=v(t.colormap,t.colormapOffset),d=this.symbolizerParameters.type==="stretch"?O(this.symbolizerParameters):null,a=this.symbolizerParameters.type==="hillshade"?L(this.symbolizerParameters):null;return new w(n,p,d||a,this._rasterTexture,this._transformGridTexture,this._colormapTexture)}get isBilinearWithStretchColorRamp(){const{symbolizerParameters:t}=this;return this.interpolation==="bilinear"&&t.colormap!=null&&t.type==="stretch"}get memoryUsage(){if(this._memoryUsed==null){const t=[this._rasterTexture,this._transformGridTexture,this._colormapTexture];this._memoryUsed=t.map(e=>e!=null?e.descriptor.width*e.descriptor.height*4:0).reduce((e,r)=>e+r,0)}return this._memoryUsed}release(){return this._rasterTexture=m(this._rasterTexture),this._transformGridTexture=m(this._transformGridTexture),this._colormapTexture=m(this._colormapTexture),this.source=null,this.transformGrid=null,this.rawPixelData=null,!0}_updateRasterTexture(t,e){const r=this.source?this.source.extractBands(e):null;if(!(r!=null&&r.pixels&&r.pixels.length>0))return void(this._rasterTexture=m(this._rasterTexture));const s=e==null&&this.bandIds==null||e!=null&&this.bandIds!=null&&e.join("")===this.bandIds.join("");if(this._rasterTexture!=null&&s)return;this._rasterTexture=m(this._rasterTexture);const o=this._getRasterTextureInterpolation(this.interpolation);this._rasterTexture=C(t,r,o,this.isRendereredSource||this.hasStretchTypeNone())}hasStretchTypeNone(){return"stretchType"in this.symbolizerParameters&&this.symbolizerParameters.stretchType==="none"&&!this.symbolizerParameters.useGamma&&this.source.pixelType==="u8"}_getRasterTextureInterpolation(t){return this.symbolizerParameters.type==="lut"||t==="nearest"||t==="majority"||this.isBilinearWithStretchColorRamp?"nearest":"bilinear"}_updateColormapTexture(t){const e=this._colormap,r=this.symbolizerParameters.colormap;return r?e?r.length!==e.length||r.some((s,o)=>s!==e[o])?(this._colormapTexture=m(this._colormapTexture),this._colormapTexture=f(t,r),void(this._colormap=r)):void 0:(this._colormapTexture=f(t,r),void(this._colormap=r)):(this._colormapTexture=m(this._colormapTexture),void(this._colormap=null))}}let h=class extends A(E(G(R($)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this._isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new b("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const i=x(()=>{var t,e;return(e=(t=this.view)==null?void 0:t.basemapTerrain)==null?void 0:e.tilingSchemeLocked}).then(()=>{const t=this.view.basemapTerrain.tilingScheme,e=this.layer.tileInfo;this._isAlignedMapTile=["png","png24","png32","jpg","mixed"].includes(e.format)&&t.compatibleWith(e),this.tileInfo=this._isAlignedMapTile?e:t.toTileInfo(),this._updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent],()=>this.refresh())});this.addResolvingPromise(i)}destroy(){this.layer.decreaseRasterJobHandlerUsage()}get _blankTile(){const i=document.createElement("canvas"),t=i.getContext("2d"),[e,r]=this.tileInfo.size;return i.width=e,i.height=r,t.clearRect(0,0,e,r),t.getImageData(0,0,e,r)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){var r,s;const i=this.layer.tileInfo,t=(r=this.tileInfo.lodAt(0))==null?void 0:r.scale,e=(s=this.layer.tileInfo.lodAt(i.lods.length-1))==null?void 0:s.scale;return this.levelRangeFromScaleRange(t,e)}_getfullExtent(){var i;return z(this.layer.serviceRasterInfo,((i=this.view.basemapTerrain)==null?void 0:i.spatialReference)??this.view.spatialReference)}async fetchTile(i,t){const e=this.tileInfo,r=this._canSymbolizeInWebGL(),s={tileInfo:e,requestRawData:r,signal:t.signal,timeExtent:this.timeExtent,requestAsImageElement:this._isAlignedMapTile,noClip:!1},{layer:o}=this,[n,p,d]=i,a=await o.fetchTile(n,p,d,s);if(a instanceof HTMLImageElement)return a;let c=a==null?void 0:a.pixelBlock;if(c==null)return this._blankTile;if(!r&&(c=await o.applyRenderer(a),c==null))return this._blankTile;const l=new M([n,p,d],c,e.size[0],e.size[1]);return r?(l.symbolizerRenderer=o.symbolizer.rendererJSON,l.symbolizerParameters=o.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(n)),l.transformGrid=a.transformGrid,l.bandIds=o.bandIds):(l.isRendereredSource=!0,l.bandIds=null),l.interpolation=o.interpolation,l}_getSymbolizerOptions(i){var e;const t=this.tileInfo.lodAt(i).resolution;return{pixelBlock:null,isGCS:((e=this.view.basemapTerrain)==null?void 0:e.spatialReference)!=null?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(i){this._canSymbolizeInWebGL()&&JSON.stringify(i.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(i.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(i.lij[0])))}createFetchPopupFeaturesQueryGeometry(i,t){return F(i,t,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){var o,n,p;const i=T(),{symbolizer:t}=this.layer,e=(n=(o=t.lookup)==null?void 0:o.colormapLut)==null?void 0:n.indexedColormap,r=!!((p=this.layer.rasterFunction)!=null&&p.hasClipFunction),s=e&&e.length>4*(i.maxTextureSize||4906);return t.canRenderInWebGL&&!s&&!r}};u([y({readOnly:!0})],h.prototype,"_blankTile",null),u([y({readOnly:!0})],h.prototype,"imageFormatIsOpaque",null),u([y({readOnly:!0})],h.prototype,"hasMixedImageFormats",null),u([y({readOnly:!0})],h.prototype,"dataLevelRange",null),h=u([I("esri.views.3d.layers.ImageryTileLayerView3D")],h);const _r=h;export{_r as default};
