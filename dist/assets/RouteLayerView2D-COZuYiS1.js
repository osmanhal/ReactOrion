import{bL as l,dL as u,c8 as _,aZ as p,az as c,ba as m,v as n,y as d,z as w}from"./index-BfC8i6jT.js";import{c as y,y as f,C as k,T as M,j as V,S as v}from"./RouteInfo-BlbQZ5Fi.js";import{w as I}from"./Stop-BXXX8a5F.js";import{t as G}from"./highlightReasons-Xh2OTEQT.js";import{f as F}from"./LayerView2D-vCOQCX0d.js";import{t as H}from"./GraphicContainer-C-bl3NSu.js";import{V as C}from"./GraphicsView2D-Cwjshx1r.js";import{y as b}from"./LayerView-D3G_E76P.js";import"./networkEnums-BI5QoQ7_.js";import"./Container-D8Z8PR0N.js";import"./EffectView-BHVg_MGi.js";import"./DisplayObject-COGNSicI.js";import"./definitions-ByNBSgP9.js";import"./enums-BlUEVwJR.js";import"./Texture-Bq-Yp-pO.js";import"./ClipRect-QwkcqybV.js";import"./layerViewUtils-D2JqIDZ8.js";import"./AGraphicContainer-7-fooBqc.js";import"./TechniqueInstance-DugsV9W7.js";import"./UpdateTracking2D-CetJAt3b.js";import"./BindType-BmZEZMMh.js";import"./Util-D9KK83cB.js";import"./Program-C3FgCIV9.js";import"./BufferObject-CLFFt1Oe.js";import"./LabelMetric-BmRa1Bis.js";import"./enums-BRXbslMp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-Dn8AJClK.js";import"./TileContainer-DGzbl-7U.js";import"./WGLContainer-BLE0Uw_u.js";import"./VertexArrayObject-DJNUJ_t_.js";import"./WGLBrushVTLSymbol-DID28CcD.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Cd8GU6R3.js";import"./TiledDisplayObject-wW3wbRrm.js";import"./vec3f32-Cw9Q6TO_.js";import"./earcut-BrWrA6nz.js";import"./featureConversionUtils-CGYMoz5K.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-DuEpW0h7.js";import"./CIMSymbolHelper-RNagakW-.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-BN6jNuTX.js";import"./GeometryUtils-ClkMWevA.js";import"./Rect-CUzevAry.js";import"./heatmapTextureUtils-CCcHDKhq.js";import"./constants-D5zmR9t2.js";import"./AttributeStore-Ck0z6t_v.js";import"./labelFormatUtils-DkVwf7tJ.js";import"./TimeOnly-CuAeZtPD.js";import"./centroid-DdLmOD72.js";import"./timeSupport-B4kKaZSt.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-DWkgqXC-.js";const $=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],o={graphic:null,property:null,oldValue:null,newValue:null};function g(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof M||t instanceof V||t instanceof v||t instanceof I}function U(t){return l.isCollection(t)&&t.length&&g(t.at(0))}function A(t){return Array.isArray(t)&&t.length>0&&g(t[0])}let a=class extends F(b){constructor(){super(...arguments),this._graphics=new l,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new u({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new l([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),_)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeaturesAtLocation(t,e){return this._graphicsView.hitTest(t).filter(({popupTemplate:i})=>!!i)}highlight(t){let e;e=g(t)?[this._getNetworkFeatureUid(t)]:A(t)?t.map(r=>this._getNetworkFeatureUid(r)):U(t)?t.map(r=>this._getNetworkFeatureUid(r)).toArray():[t.uid];const i=e.filter(p);return i.length?(this._addHighlight(i),c(()=>this._removeHighlight(i))):c()}async hitTest(t,e){if(this.suspended)return null;const i=this._graphicsView.hitTest(t).filter(p).map(s=>this._networkGraphicMap.get(s));if(!i.length)return null;const{layer:r}=this;return i.reverse().map(s=>({type:"route",layer:r,mapPoint:t,networkFeature:s}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e);this._highlightIds.set(e,i+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_createGraphic(t){const e=t.toGraphic();return e.layer=this.layer,e.sourceLayer=this.layer,e}_createGraphicsView(){const t=this.view,e=()=>this.requestUpdate(),i=new H(t.featuresTilingScheme);this._graphicsView=new C({container:i,graphics:this._graphics,requestUpdateCallback:e,view:t}),this.container.addChild(i),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const e=this._networkGraphicMap.get(t);return $.indexOf(e.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e)-1;i===0?this._highlightIds.delete(e):this._highlightIds.set(e,i)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(e=>{const i=this._networkFeatureMap.get(e);return this._networkFeatureMap.delete(e),this._networkGraphicMap.delete(i),i}));for(const e of t.removed)this.removeHandles(e)}if(t.added.length){this._graphics.addMany(t.added.map(e=>{const i=this._createGraphic(e);return i.symbol==null?null:(this._networkFeatureMap.set(e,i),this._networkGraphicMap.set(i,e),i)}).filter(p));for(const e of t.added)this.addHandles([m(()=>e.geometry,(i,r)=>{this._updateGraphic(e,"geometry",i,r)}),m(()=>e.symbol,(i,r)=>{this._updateGraphic(e,"symbol",i,r)})],e);this._graphics.sort((e,i)=>this._getDrawOrder(e)-this._getDrawOrder(i))}}_updateGraphic(t,e,i,r){if(!this._networkFeatureMap.has(t)){const h=this._createGraphic(t);return this._networkFeatureMap.set(t,h),this._networkGraphicMap.set(h,t),void this._graphics.add(h)}const s=this._networkFeatureMap.get(t);s[e]=i,o.graphic=s,o.property=e,o.oldValue=r,o.newValue=i,this._graphicsView.graphicUpdateHandler(o)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),e=G("highlight");this._graphicsView.setHighlight(t.map(i=>({objectId:i,highlightFlags:e})))}};n([d()],a.prototype,"_graphics",void 0),n([d()],a.prototype,"_routeItems",null),a=n([w("esri.views.2d.layers.RouteLayerView2D")],a);const Nt=a;export{Nt as default};
