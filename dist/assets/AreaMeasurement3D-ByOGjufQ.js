import{v as a,y as o,bH as J,k8 as f,z as M,J as X,aW as Y,ep as O,cY as w,ga as Q,bw as P,no as $,jq as Z,ba as _,di as tt,n$ as et,a1 as A,iM as it,cX as st,d3 as D,c7 as S,lh as H,gk as b,gl as at,bP as U,bR as C}from"./index-BfC8i6jT.js";import{c as nt}from"./Analysis-B2gEupWI.js";import{e as ot}from"./defaultUnit-BEK94Aud.js";import{t as rt}from"./memoize-DsJmrG76.js";import{x as v}from"./hydratedFeatures-Dp0VykK3.js";import{M as L}from"./measurementUtils-B1ZJTjWL.js";import{R as lt}from"./SnappingVisualizer3D-BuEOF_JL.js";import{z as pt,q as ht}from"./dragEventPipeline3D-Cc15cfdG.js";import{f as k,a as T,e as I}from"./RenderObject-7dW_PzsM.js";import{c as ut}from"./Laserlines.glsl-OZfEMRog.js";import{s as E}from"./RenderGeometry-BYg-7xwk.js";import{i as q,p as dt}from"./InteractiveToolBase-Q2z5Ov3P.js";import{t as mt}from"./ToolIntersector-C0f7eLEK.js";import{o as gt}from"./ShadedColorMaterial.glsl-C1RM8vdQ.js";import{E as ct,p as _t,P as yt}from"./EditGeometryOperations-DmGwV5zN.js";import{e as wt}from"./SnappingContext-lR2hMWGP.js";import{f as vt}from"./SnappingDragPipelineStep-Cwt6mPXQ.js";import{a as ft}from"./SnappingManagerPool-CjU8T-Jb.js";import{p as Mt}from"./SnappingOperation-CbINueCr.js";import{N as Vt}from"./SnappingManager-D5q8LYBJ.js";import{u as bt}from"./InteractiveAnalysisViewModel-yfbsRpd9.js";import{u as Pt}from"./MeasurementWidgetContent-DGuiJFML.js";import"./getDefaultUnitForView-Dts4f_W1.js";import"./projectVectorToVector-C51LtB8f.js";import"./projectPointToVector-C0Qwzs7z.js";import"./sphere-BgvJtIjV.js";import"./plane-ByuX_NXR.js";import"./mathUtils-DIiwy5h7.js";import"./geodesicAreaMeasurementUtils-ROeBvnrj.js";import"./quantityUtils-B2xRWNSM.js";import"./geometryEngine-s82Uc-OG.js";import"./geometryEngineBase-hNmXf8AX.js";import"./hydrated-CC1UoCrK.js";import"./geodesicUtils-BOUsTR0r.js";import"./geodesicLengthMeasurementUtils-Dk04A7GV.js";import"./elevationInfoUtils-Dkzy2V0O.js";import"./ExtendedLineVisualElement-CW3Bk7C-.js";import"./vec4f32-CjrfB-0a.js";import"./frustum-Bdr-rFEQ.js";import"./lineSegment-DbTVMGoh.js";import"./EngineVisualElement-Bg7brjUA.js";import"./VisualElement-C8pAhQko.js";import"./Material-CL7oq3ds.js";import"./interfaces-B8ge7Jg9.js";import"./basicInterfaces-wONHx_SN.js";import"./VertexAttribute-BnAa5VW0.js";import"./PointVisualElement-C-C-Xm82.js";import"./Object3DVisualElement-CRBtGAtS.js";import"./ColorMaterial.glsl-r8qsLxA-.js";import"./BufferView-DcMGflLe.js";import"./Texture-1xthaLvE.js";import"./Matrix4PassUniform-BH4JqvtO.js";import"./BindType-BmZEZMMh.js";import"./Util-D9KK83cB.js";import"./enums-BlUEVwJR.js";import"./Texture-Bq-Yp-pO.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Indices-Bl02GO-3.js";import"./triangle-B-TmEFJd.js";import"./renderState-yUi34s5A.js";import"./requestImageUtils-CYZi7VGK.js";import"./InterleavedLayout-D5nIvpjN.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-DMQrT1G9.js";import"./floatRGBA-BcMV1NFr.js";import"./RightAngleQuadVisualElement-DXzpchRs.js";import"./orientedBoundingBox-Do1Vt1ct.js";import"./spatialReferenceEllipsoidUtils-6vOoKuZD.js";import"./computeTranslationToOriginAndRotation-DK7GzGeb.js";import"./SnappingVisualizer-Dn1HXI_0.js";import"./PointSnappingHint-DG5oOaY6.js";import"./ray-8l9wECN6.js";import"./ElevationProvider-BU9L4pxM.js";import"./boundedPlane-xSVxcV1_.js";import"./verticalOffsetUtils-Bdqba6xa.js";import"./DoubleArray-CZhUFo5d.js";import"./glUtil-C6KhMg1m.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BufferObject-CLFFt1Oe.js";import"./vec3f32-Cw9Q6TO_.js";import"./weather-B3EDJgNZ.js";import"./Scheduler-DSoCN6Hr.js";import"./debugFlags-CX6JgPmI.js";import"./Float4DrawUniform-DSpHBPg2.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-bjpgk3mA.js";import"./Intersector-Dzvq-gms.js";import"./VertexArrayObject-DJNUJ_t_.js";import"./meshVertexSpaceUtils-CcfLNHym.js";import"./MeshLocalVertexSpace-DZNf3szf.js";import"./geometry2dUtils-DBhp7z2_.js";import"./dehydratedFeatureComparison-DqYXmcFw.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./keybindings-yv7BPnkG.js";import"./layerViewUtils-D2JqIDZ8.js";import"./UnitSelect-VjCIVazS.js";let c=class extends nt{constructor(e){super(e),this.type="area-measurement",this.unit=null}set geometry(e){e!=null?(e.rings.length>1&&X.getLogger(this).warn("Measuring polygons with multiple rings is not supported."),this._set("geometry",e.clone())):this._set("geometry",null)}get requiredPropertiesForEditing(){if(this.geometry!=null&&this.geometry.rings.length===1){const e=this.geometry.rings[0];if(e.length<=2||!Y(e[0],e[e.length-1]))return[null]}return[this.geometry]}clear(){this.geometry=null}};a([o({type:["area-measurement"]})],c.prototype,"type",void 0),a([o({value:null,type:J})],c.prototype,"geometry",null),a([o({type:f,value:null})],c.prototype,"unit",void 0),a([o({readOnly:!0})],c.prototype,"requiredPropertiesForEditing",null),c=a([M("esri.analysis.AreaMeasurementAnalysis")],c);const j=c;class Dt{constructor(e,i=null){this.screenPoint=e,this.result=i}}class St{constructor(e,i){this.scenePoint=e,this.mapPoint=i}}class xt{constructor(e){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=O();const{analysisViewData:i,manipulators:s,toolState:r,view:n,visible:l}=e;this._analysisViewData=i,this._toolState=r,s!=null?(this._manipulators=s,this._isManipulatorsOwner=!1):this._manipulators=new q,this._view=n,this._intersector=mt(n.state.viewingMode);const h=k(this._handleColor),d=[new T(E(h,1,32,32))],g=new I({view:n,renderObjects:d});g.available=!1,g.radius=R,g.interactive=!1,this._manipulators.add(g),this._cursorManipulator=g,this._cursorManipulatorMaterial=h,this._laserLine=new ut({view:n,attached:!0,style:{glowWidth:$t,glowFalloff:At,innerWidth:Ht},isDecoration:!0}),this._updateVisibility(l??!0)}destroy(){this._listenerHandles=w(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=w(this._manipulators):this._manipulators=null,this._laserLine=w(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(e){this._destroyed||this._visible===e||this._updateVisibility(e)}_updateVisibility(e){this._visible=e,this._laserLine.visible=e,e?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach(({manipulator:i})=>this._removeVertexManipulator(i)),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(e,i){const s=this._manipulators.intersect(e,i);return s==null?void 0:s.metadata}pick(e){const i=this._view.spatialReference,s=Q(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const r=this._intersector.results.min,n=O();if(!r.getIntersectionPoint(n))return null;const l=this._view.renderCoordsHelper.fromRenderCoords(n,new P({spatialReference:i}));return l==null?null:new St(n,l)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const e=k(this._handleColor),i=[new T(E(e,1,32,32))],s=new I({view:this._view,renderObjects:i});return s.radius=R,this._manipulators.add(s),{manipulator:s,material:e}}_removeVertexManipulator(e){this._manipulators.remove(e)}_updateVertexManipulators(){const{viewData:e}=this._analysisViewData,i=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;Ot(s,i.length,()=>this._createVertexManipulator(),({manipulator:r})=>this._removeVertexManipulator(r)),s.forEach(({manipulator:r},n)=>{r.metadata=i[n],r.renderLocation=e.positionsRender[n],r.cursor=n===0&&this._toolState.polygonState==="drawing"?"crosshair":null}),this._toolState.polygonState==="drawing"&&this._analysisViewData.stagedPoint!=null?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return $(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){const{lastDraggedVertex:e}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return this._analysisViewData.stagedPoint!=null?this._analysisViewData.stagedPoint:e!=null?this._analysisViewData.path.getVertexPositionAsPoint(e):this._analysisViewData.path.lastPoint;case"editing":return e!=null?this._analysisViewData.path.getVertexPositionAsPoint(e):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){const e=this._toolState.polygonState!=="measured"&&this._toolState.active,i=this._getFocusPoint();if(e&&i!=null){const s=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(i,s),this._laserLine.heightManifoldTarget=s}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new Z,this._listenerHandles.add([_(()=>this._toolState.polygonState,()=>this._updateLaserLine()),_(()=>this._analysisViewData.viewData,()=>this._updateAll(),tt),_(()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint}),()=>this._updateLaserLine()),_(()=>this._toolState.active,()=>this._updateAll()),_(()=>this._view.effectiveTheme.accentColor,e=>{const i=$(e,.5);for(const{material:d}of this.vertexManipulators)d.setParameters({color:i});this._cursorManipulatorMaterial.setParameters({color:i});const s=A.toUnitRGB(e),r=A.toUnitRGB(it(e)),n=.75*e.a,l=this._laserLine,h=l.style;l.style={...h,glowColor:s,innerColor:r,globalAlpha:n}},{initial:!0,equals:et})])}_destroyListeners(){this._listenerHandles=w(this._listenerHandles)}}function Ot(t,e,i,s){for(;t.length<e;)t.push(i());if(s)for(;t.length>e;)s(t.pop());else t.length=e}const $t=8,At=8,Ht=1,R=5;let u=class extends gt{constructor(t){super(t),this._updatingHandles=new st,this.polygonState="initial",this.manipulators=new q,this._getSnappingContext=rt(e=>new wt({elevationInfo:{mode:"absolute-height",offset:0},pointer:e,editGeometryOperations:new ct(new _t("point",yt(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new lt}))}initialize(){const{view:t,analysisViewData:e,manipulators:i,visible:s}=this;this.measurementView=new xt({view:t,analysisViewData:e,toolState:this,manipulators:i,visible:s});const r=ft(t);this._snappingManagerResult=r,this.addHandles(r),this._snappingOperation=new Mt({view:t}),this._updatingHandles.add(()=>this.stagedPoint,n=>{this.analysisViewData.stagedPoint=n!=null?v(n,new P):null},D),Vt(this,()=>{const n=this.view.inputManager.latestPointerType??"mouse",l=this._getSnappingContext(n);this._updatingHandles.addPromise(S(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager,l)))}),this._setupManipulators(),this.addHandles([_(()=>this.state,n=>{n==="measured"&&this.finishToolCreation()},D),this.analysisViewData.path.on("change",()=>{const n=this.analysisViewData.path;this.polygonState!=="initial"||n.isEmptyPolygon||(n.isValidPolygon?this.polygonState="measured":this.polygonState="drawing")})])}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._updatingHandles=w(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return this.analysisViewData.path.numVertices===0?"ready":this.analysisViewData.path.isValidPolygon&&this.polygonState!=="editing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.polygonState==="drawing"?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(t){this._snappingOperation.stagedPoint=t}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){const{path:t}=this.analysisViewData;t.numVertices<3?(t.clear(),this.polygonState="initial"):(t.close(),this.polygonState="measured"),this._resetSnappingState()}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(t){switch(t.type){case"immediate-double-click":this._handleImmediateDoubleClick(t);break;case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}}_setupManipulators(){const t=i=>i.events.on("grab-changed",()=>{if(this.analysisViewData.path.isValidPolygon){const s=this.manipulators.some(r=>r.manipulator.grabbing);this.polygonState=s?"editing":"measured"}}),e=i=>{this.addHandles([dt(i,(s,r,n,l)=>{const h=ht(s),d=s.metadata,g=this._snappingManager,V=this._getSnappingContext(l),N=this._updatingHandles,{snappingStep:W,cancelSnapping:K}=vt({snappingManager:g,snappingContext:V,updatingHandles:N});n=n.next(h).next(y=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(d,x),s.location=x,y)).next(K),r.next(h).next(pt(this.view)).next(...W).next(y=>{s.location=y.mapEnd,this.analysisViewData.lastDraggedVertex=y.action==="end"?null:d,this.analysisViewData.path.setVertexPosition(d,v(y.mapEnd))});const x=v(this.analysisViewData.path.getVertexPositionAsPoint(d))}),t(i)],i)};this.manipulators.forEach(({manipulator:i})=>{e(i)}),this.addHandles([this.manipulators.on("after-add",({item:{manipulator:i}})=>{e(i)}),this.manipulators.on("after-remove",({item:{manipulator:i}})=>this.removeHandles(i))])}_handleImmediateDoubleClick(t){L(t)&&(this.polygonState==="drawing"&&this.finishMeasurement(),t.stopPropagation())}_handleDrag(t){this.polygonState==="editing"&&t.stopPropagation()}_handleImmediateClick(t){if(!L(t))return;const e=H(t),{pointerType:i}=t;if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(e,i))return this.stagedPoint=null,this.polygonState="drawing",void t.stopPropagation();break;case"drawing":{const s=this.measurementView.vertexHandleAt(e,i);if(s==null){if(this._addVertexAt(e,i))return this.stagedPoint=null,void t.stopPropagation()}else s.index===0&&(this.finishMeasurement(),t.stopPropagation());break}}t.pointerType==="mouse"&&this._hoverAt(e)}_handlePointerMove(t){if(t.pointerType==="mouse"){const e=H(t);this._hoverAt(e)}}_handleKeyDown(t){const{path:e}=this.analysisViewData;t.key==="Enter"&&this.polygonState==="drawing"&&e.numVertices>=3&&(this.stagedPoint=null,this.finishMeasurement(),t.stopPropagation())}_hoverAt(t){const{polygonState:e}=this;if(this.active&&(e==="initial"||e==="drawing")){const i=this._pick(t);if((i==null?void 0:i.mapPoint)!=null){const s=this._getSnappingContext("mouse");this._updatingHandles.addPromise(S(this._snappingOperation.snap({point:i.mapPoint},this._snappingManager,s)))}}else this.stagedPoint=null}_addVertexAt(t,e){const i=this._pick(t);if((i==null?void 0:i.mapPoint)!=null){const{mapPoint:s}=i,r=this._getSnappingContext(e),n=this._snappingOperation.update({point:s},this._snappingManager,r),l=v(n,new P);return this.analysisViewData.path.add(l),!0}return!1}_pick(t){const e=new Dt(t);return this.measurementView.pick(e)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){}};a([o({readOnly:!0})],u.prototype,"state",null),a([o()],u.prototype,"polygonState",void 0),a([o({readOnly:!0})],u.prototype,"cursor",null),a([o()],u.prototype,"measurementView",void 0),a([o({constructOnly:!0})],u.prototype,"view",void 0),a([o({constructOnly:!0})],u.prototype,"analysis",void 0),a([o({constructOnly:!0})],u.prototype,"analysisViewData",void 0),a([o({readOnly:!0})],u.prototype,"manipulators",void 0),a([o()],u.prototype,"updating",null),a([o()],u.prototype,"stagedPoint",null),a([o()],u.prototype,"snappingOptions",null),u=a([M("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],u);const Ut=u;let m=class extends bt{constructor(t){super(t),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="AreaMeasurement3DViewModel is only supported in 3D views.",this._userUnitOptions=null,this._userUnit=null}initialize(){this.addHandles(_(()=>({analysis:this.analysis,unit:this.unit}),({analysis:t,unit:e})=>{t!=null&&(t.unit=e)},D))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){if(this.tool==null||this.disabled||this.tool.destroyed)return null;const{analysisView:t}=this;if(t==null)return null;const e=t.analysisVisualization,i=e.viewData,s=i.validMeasurement,r=i.mode==="euclidean",n=i.intersectingSegments.size===0,l=n?s?"available":"unavailable":"invalid";return{mode:r?"euclidean":"geodesic",area:{text:n&&s?e.areaLabel:null,state:l},perimeterLength:{text:n&&s?e.perimeterLengthLabel:null,state:l}}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null}get unit(){return this._userUnit!=null?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new j}constructTool(){return new Ut({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(t,e){const{unitOptions:i}=this;return i.includes(t)?t:e!=null?this._findSelectableUnit(e):i[0]}_filteredOrAllUnits(t){if(t==null)return f.slice();const e=t.filter(i=>f.includes(i));return e.length===0?f.slice():e}};a([o({type:j})],m.prototype,"analysis",void 0),a([o({readOnly:!0})],m.prototype,"state",null),a([o({readOnly:!0})],m.prototype,"measurement",null),a([o()],m.prototype,"unitOptions",null),a([o()],m.prototype,"unit",null),a([o(ot)],m.prototype,"defaultUnit",void 0),a([o()],m.prototype,"_userUnit",void 0),m=a([M("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],m);const G=m,z="esri-area-measurement-3d",B={base:z,newMeasurementButton:`${z}__clear-button`};let p=class extends at{constructor(t,e){super(t,e),this.messages=null,this.messagesCommon=null,this.messagesUnits=null,this.viewModel=new G}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get icon(){return"measure-area"}set icon(t){this._overrideIfSome("icon",t)}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:e,messagesUnits:i,unit:s,unitOptions:r,viewModel:n}=this,{active:l,measurement:h,state:d,supported:g}=n;return U("div",{"aria-label":this.messages.widgetLabel,class:this.classes(B.base,C.widget,C.panel),key:this,role:"presentation"},this.visible?U(Pt,{active:l,measurementItems:[{key:"direct",title:i.measures.area,value:F(h==null?void 0:h.area)},{key:"perimeter",title:t.perimeterLength,value:F(h==null?void 0:h.perimeterLength)}],messages:{...t,notApplicable:e.notApplicable},newMeasurementButtonClass:B.newMeasurementButton,state:d,supported:g,unit:s,unitOptions:r,onNewMeasurementClick:()=>{S(this.viewModel.start())},onUnitChange:V=>{this.unit=V}}):null)}};function F(t){return(t==null?void 0:t.state)==="available"?t.text:null}a([o()],p.prototype,"view",null),a([o()],p.prototype,"visible",null),a([o()],p.prototype,"active",null),a([o({constructOnly:!0,nonNullable:!0})],p.prototype,"analysis",null),a([o()],p.prototype,"icon",null),a([o()],p.prototype,"label",null),a([o(),b("esri/widgets/AreaMeasurement3D/t9n/AreaMeasurement3D")],p.prototype,"messages",void 0),a([o(),b("esri/t9n/common")],p.prototype,"messagesCommon",void 0),a([o(),b("esri/core/t9n/Units")],p.prototype,"messagesUnits",void 0),a([o()],p.prototype,"uiStrings",void 0),a([o({type:G})],p.prototype,"viewModel",void 0),a([o()],p.prototype,"unitOptions",null),a([o()],p.prototype,"unit",null),p=a([M("esri.widgets.AreaMeasurement3D")],p);const bi=p;export{bi as default};
