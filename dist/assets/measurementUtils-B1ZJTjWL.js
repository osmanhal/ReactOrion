import{fs as h,fw as p,fx as m,fD as $,fv as c,fB as l,eq as g,ft as x,ep as s}from"./index-BfC8i6jT.js";import{V as M}from"./sphere-BgvJtIjV.js";import{U as w}from"./mathUtils-DIiwy5h7.js";import{o as y}from"./geodesicAreaMeasurementUtils-ROeBvnrj.js";function v(t,n){const o=M(n);h(o,0,0,0);for(let r=0;r<t.length;++r)p(o,o,t[r]);m(o,o,1/t.length);let a=0;for(let r=0;r<t.length;++r)a=Math.max(a,$(o,t[r]));n[3]=Math.sqrt(a)}function z(t,n){if(t.length<3)throw new Error("need at least 3 points to fit a plane");w(t[0],t[1],t[2],n)}function B(t,n){return c(t,n)+t[3]}function D(t,n,o,a){const r=b;return l(r.rings[0][0],t),l(r.rings[0][1],n),l(r.rings[0][2],o),l(r.rings[0][3],t),r.spatialReference=a,y(r)}function E(t,n=null,o=!0){const r=(f,i)=>{if(i[0]===0&&i[1]===0&&i[2]===0)return!1;for(let u=0;u<f.length;++u)if(c(i,f[u])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return n&&l(n,t[0]),!0;h(e,0,0,0);for(let f=0;f<t.length;++f)p(e,e,t[f]);if(g(e,e),r(t,e))return n&&l(n,e),!0;if(!o)return!1;for(let f=0;f<t.length;++f)for(let i=0;i<t.length;++i)if(f!==i&&(x(e,t[f],t[i]),g(e,e),r(t,e)))return n&&l(n,e),!0;return!1}function P(t){return t.pointerType!=="mouse"||t.button===0}const b={hasM:!1,hasZ:!0,rings:[[s(),s(),s(),s()]],spatialReference:null,type:"polygon"},e=s();export{P as M,v as g,z as h,E as j,D as m,B as p};
