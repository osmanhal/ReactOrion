import{bS as l,i$ as R,fs as S,ep as M}from"./index-BfC8i6jT.js";import{a as P,b as T}from"./elevationInfoUtils-Dkzy2V0O.js";function D(e,s){const a=e==null?void 0:e.geometry;if(!e||(a==null?void 0:a.type)!=="mesh"||!s)return;const{renderCoordsHelper:c,elevationProvider:x}=s,{camera:h}=s.state,{extent:t}=a,{center:d,spatialReference:r}=t,z=l(r),n=R(r),$=l(c.spatialReference),b=t.width*z,v=t.height*n,p=(t.zmax??0)*n,f=p-(t.zmin??0)*n,w=Math.max(b,v,f)/$,{x:i,y:m}=d,u=d.z??0;S(o,i,m,u),c.toRenderCoords(o,r,o);const g=w/h.computeScreenPixelSizeAt(o);if(g>h.width*H)return"meshTooClose";if(g<A)return"meshTooFar";const y=P(e),{absoluteZ:C}=T(i,m,p,r,s,y);return C<(x.getElevation(i,m,u,r,"ground")??0)*n+f*U?"meshUnderground":"mesh"}const A=20,H=1,U=.1,o=M();export{D as getDrawMeshHelpMessage};
